{"name":"ASTORE","statements":[{"name":"PROC ASTORE","description":"The ASTORE procedure is an interactive procedure in which each statement runs immediately. PROC ASTORE enables you to describe an analytic store, manage the analytic store, and use the analytic store to score new data. The analytic store is the result of a SAVESTATE statement from another analytic procedure; it is a binary file that contains that procedure’s state after the training phase of data analysis is completed.","help":"PROC ASTORE;     \n\tCHECK ONNX=local-file-name;\n\tDESCRIBE RSTORE=libref.data-table STORE=local-file-name ONNX=local-file-name <EPCODE=code-file-name> ...;\n\tDOWNLOAD RSTORE=libref.data-table STORE=local-file-name;\n\tEXTRACT ONNX=local-file-name RSTORE=libref.data.table STORE=local-file-name;\n\tSAVEAS DATA=libref.data-table INPUT=(input-options) ONNX=local-file-name OUTPUT=(output-options) RSTORE=libref.data-table STORE=local-file-name …;\n\tSCORE DATA=libref.data-table OUT=libref.data-table RSTORE=libref.data-table STORE=local-file-name ...;\n\tSETOPTION name value;\n\tUPLOAD RSTORE=libref.data-table STORE=local-file-name;"},{"name":"CHECK","description":"The CHECK statement checks whether a file that you specify by local-file-name is a valid Open Neural Network Exchange (ONNX) model.","help":"CHECK ONNX=local-file-name;","arguments":[{"name":"ONNX=","description":"specifies either the file reference or the full path of the local file. You must specify at least one ONNX= option. You can specify as many additional ONNX= options as you need.","help":"ONNX=*local-file-name*","type":"value"}]},{"name":"DESCRIBE","description":"The DESCRIBE statement specifies the name or identifier of an analytic store or an Open Neural Network Exchange (ONNX) model. You can specify an analytic store either in the local file system by using the STORE= option or in a data table by using the RSTORE= option. You can specify an ONNX model in the local file system only by using the ONNX= option. The DESCRIBE statement can also produce DS2 basic scoring code if you specify an analytic store. You can edit the basic scoring code to add transformations to the input variables, flag or override the decision made for the record, work with ensembles, and so on.","help":"DESCRIBE RSTORE=libref.data-table STORE=local-file-name ONNX=local-file-name &lt;EPCODE=code-file-name&gt; …;","arguments":[{"name":"RSTORE=","description":"specifies the table that contains the analytic store. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"RSTORE=*libref.data-table*","type":"dataSet"},{"name":"STORE=","description":"specifies either the file reference or the full path of a valid store file that was created earlier by some analytic engine and exists in the local file system.","help":"STORE=*local-file-name*","type":"value"},{"name":"ONNX=","description":"specifies either the file reference or the full path of a valid ONNX file.","help":"ONNX=*local-file-name*","type":"value"},{"name":"EPCODE=","optional":true,"description":"sends DS2 language code to an external code file that is identified by code-file-name, which is either the file reference or the full path name and member name of the external code file. The DS2 code allows you to score concurrently with multiple analytic stores as long as they share the same input and output variables. The store key identifier plays an important role in managing multiple analytic stores in a single run.","help":"EPCODE=*code-file-name*","type":"value"},{"name":"DATA=","optional":true,"description":"names the input data table for PROC ASTORE to use. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table. You can specify the DATA= option if you want the input variable declarations in the generated DS2 code to have the properties that are specified in the input data table.","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"COPYVARS=","optional":true,"description":"copies one or more variables from the input data table that you specify in the DATA= option to the output data table. If you specify them inside parentheses, you can abbreviate the variables as a SAS variable list. The COPYVARS= option must follow the DATA= option, which provides the input data table.","help":"COPYVARS=*variable | (variables)*","type":"value"}]},{"name":"DOWNLOAD","description":"The DOWNLOAD statement retrieves an external binary analytic store that was produced by another procedure and stores it in the local file system.","help":"DOWNLOAD RSTORE=libref.data-table STORE=local-file-name;","arguments":[{"name":"RSTORE=","description":"specifies a data table that contains the state to be downloaded. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"RSTORE=*libref.data-table*","type":"dataSet"},{"name":"STORE=","description":"specifies either the file reference or the full path of the local analytic store file to which the contents of the data table are to be downloaded. By default, the downloaded file will be located in the directory where SAS is running.","help":"STORE=*local-file-name*","type":"value"}]},{"name":"EXTRACT","description":"The EXTRACT statement extracts the Open Neural Network Exchange (ONNX) model that is saved to an analytic store and stores it in the local file system. You can specify an analytic store either in the local file system by using the STORE= option or in a data table by using the RSTORE= option. You can specify an ONNX model in the local file system only by using the ONNX= option.","help":"EXTRACT ONNX=local-file-name RSTORE=libref.data.table STORE=local-file-name;","arguments":[{"name":"ONNX=","description":"specifies either the file reference or the full path of the local ONNX file in which the contents of the extracted ONNX model are to be stored.","help":"ONNX=*local-file-name*","type":"value"},{"name":"RSTORE=","description":"specifies a data table that contains the saved ONNX model. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"RSTORE=*libref.data-table*","type":"dataSet"},{"name":"STORE=","description":"specifies either the file reference or the full path of a valid store file that contains the saved ONNX model.","help":"STORE=*local-file-name*","type":"value"}]},{"name":"SAVEAS","description":"The SAVEAS statement enables you to save an Open Neural Network Exchange (ONNX) model to an analytic store.","help":"SAVEAS DATA=libref.data-table INPUT=(input-options) ONNX=local-file-name OUTPUT=(output-options) RSTORE=libref.data-table STORE=local-file-name …;","arguments":[{"name":"DATA=","description":"names the input data table for PROC ASTORE to use. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"INPUT=","description":"specifies the mapping information for the input value information of the ONNX model that you specify in ONNX= option. If you specify more than one INPUT= option, the order must match that of the input value information in the DESCRIBE statement. The number of INPUT= options must match the number of input tensors of the ONNX model.","help":"INPUT=*(input-options)*","type":"value"},{"name":"ONNX=","description":"specifies either the file reference or the full path of a valid ONNX file.","help":"ONNX=*local-file-name*","type":"value"},{"name":"OUTPUT=","description":"specifies the mapping information for the output value information of the ONNX model that you specify in the ONNX= option. If you specify more than one OUTPUT= option, the order must match that of the output value information in the DESCRIBE statement. The number of OUTPUT= options must match the number of output tensors of the ONNX model. If you specify the MODELTYPE= option, the OUTPUT= option is ignored.","help":"OUTPUT=*(output-options)*","type":"value"},{"name":"RSTORE=","description":"specifies the data table to contain the analytic store that saves the ONNX model that you specify in the ONNX= option. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"RSTORE=*libref.data-table*","type":"dataSet"},{"name":"STORE=","description":"specifies the local file to contain the analytic store that saves the ONNX model that you specify in the ONNX= option.","help":"STORE=*local-file-name*","type":"value"},{"name":"ANCHORBOXES=","optional":true,"description":"specifies the shape of the anchor boxes for the model that you specify in the ONNX= option. The shape of an anchor box consists of the width and height of the box. The order of values in the number-list is as follows: the width of the first anchor box, the height of the first anchor box, the width of the second anchor box, the height of the second anchor box, and so on. The number of values in the number-list must be 2 times the number that you specify in the NUMANCHORS= option.","help":"ANCHORBOXES=*(anchors)*","type":"value"},{"name":"INTOFORMATTEDLEN=","optional":true,"description":"specifies the length of the INTO column for scoring. You must specify this option if you want the INTO column to appear in the scoring output for classification models.","help":"INTOFORMATTEDLEN=*into-formatted-len*","type":"value"},{"name":"LABEL=","optional":true,"description":"specifies the labels for the output classes. The number of labels must match that of the ONNX model.","help":"LABEL=*(output-labels)*","type":"value"},{"name":"MAXOBJECTS=","optional":true,"description":"specifies the maximum number of objects to be detected. Use this option when you specify the MODELTYPE= option. By default, MAXOBJECTS=10.","help":"MAXOBJECTS=*max-objects*","type":"value"},{"name":"MODELTYPE=","optional":true,"description":"specifies the model type for the ONNX file that you specify in the ONNX= option. If you specify the MODELTYPE= option, the model-specific postprocessing is applied during scoring.","help":"MODELTYPE=*FASTERRCNN | SSD | YOLOV2 | YOLOV3 | YOLOV4*","type":"value"},{"name":"NUMANCHORS=","optional":true,"description":"specifies the number of anchor boxes for the model that you specify in the ONNX= option. Use this option when you specify the MODELTYPE=YOLOV2 or YOLOV4 option.","help":"NUMANCHORS=*num-anchors*","type":"value"},{"name":"ORIGIMGDIMVARS=","optional":true,"description":"specifies variables that correspond to the dimensions of the original image. You must specify the height as the first variable, then specify the width.","help":"ORIGIMGDIMVARS=*(variables)*","type":"value"},{"name":"STRIDE=","optional":true,"description":"specifies the stride(s) of the output tensor(s) for the model that you specify in the ONNX= option. Use this option when you specify the MODELTYPE=YOLOV4 option.","help":"STRIDE=*stride | (strides)*","type":"value"},{"name":"XYSCALE=","optional":true,"description":"specifies the scale for the X and Y coordinates of the bounding boxes for the model that you specify in the ONNX= option. Use this option when you specify the MODELTYPE=YOLOV4 option.","help":"XYSCALE=*(xyscale)*","type":"value"}]},{"name":"SCORE","description":"The SCORE statement enables you to score both simple and complex models saved in analytic stores. You can specify an analytic store either in the local file system by using the STORE= option or in a data table by using the RSTORE= option.","help":"SCORE DATA=libref.data-table OUT=libref.data-table RSTORE=libref.data-table STORE=local-file-name …;","arguments":[{"name":"DATA=","description":"names the input data table for PROC ASTORE to use. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"OUT=","description":"names the output data table where PROC ASTORE saves the scored results for the specified input data and analytic store. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table. You can specify additional OUT= options, one for each table that the model produces. You can use the DESCRIBE statement to see how many output tables a model produces. If a model produces more than one output table, you must specify the OUT= options in the order in which they are listed in the DESCRIBE statement.","help":"OUT=*libref.data-table*","type":"dataSet"},{"name":"RSTORE=","description":"specifies the table that contains the analytic store. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table. You can specify as many additional RSTORE= options as you need. When you specify more than one RSTORE= option and you omit the EPCODE= option, you must make sure that the dependence among these analytic stores forms a directed acyclic graph (DAG). An analytic store A is said to depend on an analytic store B when at least one input variable of store A is an output variable of store B.","help":"RSTORE=*libref.data-table*","type":"dataSet"},{"name":"STORE=","description":"specifies either the file reference or the full path of a valid store file that was created earlier by some analytic engine and exists in the local file system. You can specify as many additional STORE= options as you need. When you specify more than one STORE= option and you omit the EPCODE= option, you must make sure that the dependence among these analytic stores forms a directed acyclic graph (DAG). An analytic store A is said to depend on an analytic store B when at least one input variable of store A is an output variable of store B.","help":"STORE=*local-file-name*","type":"value"},{"name":"COPYVARS=","optional":true,"description":"transfers one or more variables from the input data table that you specify in the DATA= option to the output data table that you specify in the OUT= option. If you specify them inside parentheses, you can abbreviate the variables as a SAS variable list.","help":"COPYVARS=*variable | (variables)*","type":"value"},{"name":"EPCODE=","optional":true,"description":"names the location of the optional scoring code file (which was created by the DESCRIBE statement) and loads that file for scoring. You can use this option when you have changed the contents of the scoring code.","help":"EPCODE=*code-file-name*","type":"value"}]},{"name":"SETOPTION","description":"The SETOPTION statement associates a value to a specified name. During scoring, PROC ASTORE uses the value for the option that corresponds to name. name specifies an identifier for the option, where name must begin with an alphabetic character or underscore, can contain only alphanumerics and underscores, and is limited to 200 characters. value specifies a value for the named option.","help":"SETOPTION name value;"},{"name":"UPLOAD","description":"The UPLOAD statement moves an analytic store from the local file system into a data table.","help":"UPLOAD RSTORE=libref.data-table STORE=local-file-name; ","arguments":[{"name":"RSTORE=","description":"specifies the table to which the store is sent. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"RSTORE=*libref.data-table*","type":"dataSet"},{"name":"STORE=","description":"specifies either the file reference or the full path of the valid store file that was created earlier by some analytic engine and exists in the local file system.","help":"STORE=*local-file-name*","type":"value"}]}],"interactive":true,"supportSiteInformation":{"docsetId":"casml","docsetVersion":"latest","docsetTargetFile":"casml_astore_toc.htm"}}