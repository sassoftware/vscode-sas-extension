{"name":"AUTOREG","statements":[{"name":"PROC AUTOREG","description":"The AUTOREG procedure estimates and forecasts linear regression models for time series data when the errors are autocorrelated or heteroscedastic. The autoregressive error model is used to correct for autocorrelation, and the generalized autoregressive conditional heteroscedasticity (GARCH) model and its variants are used to model and correct for heteroscedasticity. † When time series data are used in regression analysis, often the error term is not independent through time. Instead, the errors are serially correlated or autocorrelated. If the error term is autocorrelated, the efficiency of ordinary least squares (OLS) parameter estimates is adversely affected and standard error estimates are biased. † The autoregressive error model corrects for serial correlation. The AUTOREG procedure can fit autoregressive error models of any order and can fit subset autoregressive models. You can also specify stepwise autoregression to select the autoregressive error model automatically. † The AUTOREG procedure supports the following variations of the GARCH models: † o generalized ARCH (GARCH) o integrated GARCH (IGARCH) o exponential GARCH (EGARCH) o quadratic GARCH (QGARCH) o threshold GARCH (TGARCH) o power GARCH (PGARCH) o GARCH-in-mean (GARCH-M)","help":"PROC AUTOREG <COVOUT> <DATA= SAS-data-set> <OUTEST= SAS-data-set> <PLOTS=ALL | ACF | IACF... >;     \n\tBY variables ;\n    \n\tCLASS variables ;\n    \n\tHETERO <COEF=<NONNEG | UNIT | ZERO>... > <LINK=<EXP | SQUARE | LINEAR>> <STD=<NONNEG | UNIT | UNREST>> ...;\n    \n\tLAGLIST;\n    \n\tMODEL <CENTER> <NLAG= number | NLAG= (number-list)> <NOINT> ...;\n    \n\tNLOPTIONS <ABSCONV= | ABSTOL=r> <ABSFCONV=r[n] | ABSFTOL=r[n> <ABSGCONV=r[n] | ABSGTOL=r[n> ...;\n    \n\tOUTPUT <ALPHACLI= number> <ALPHACLM= number> <OUT= SAS-data-set> ...;\n    \n\tRESTRICT equation , ..., equation ;\n    \n\tTEST <TYPE=<F | WALD | LM>... > ;\n","arguments":[{"name":"COVOUT","optional":true,"description":"Writes the covariance matrix for the parameter estimates to the OUTEST= data set. This option is valid only if the OUTEST= option is specified.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Specifies the input SAS data set. If the DATA= option is not specified, PROC AUTOREG uses the most recently created SAS data set.","type":"value"},{"name":"OUTEST=","optional":true,"description":"Writes the parameter estimates to an output data set.","type":"value"},{"name":"PLOTS=","optional":true,"description":"Requests that the AUTOREG procedure produce statistical graphics via the Output Delivery System, provided that the ODS GRAPHICS statement has been specified. The global-plot-options apply to all relevant plots generated by the AUTOREG procedure. The global-plot-options supported by the AUTOREG procedure follow. ONLY suppresses the default plots. Only the plots specifically requested are produced.","help":"PLOTS=ALL | ACF | IACF | PACF | FITPLOT | COOKSD | QQ | RESIDUAL | STUDENTRESIDUAL | STANDARDRESIDUAL | WHITENOISE | RESIDUALHISTOGRAM | NONE","type":"choice","arguments":[{"name":"ALL","description":"Requests that all plots appropriate for the particular analysis be produced.","type":"standalone"},{"name":"ACF","description":"Produces the autocorrelation function plot.","type":"standalone"},{"name":"IACF","description":"Produces the inverse autocorrelation function plot of residuals.","type":"standalone"},{"name":"PACF","description":"Produces the partial autocorrelation function plot of residuals.","type":"standalone"},{"name":"FITPLOT","description":"Plots the predicted and actual values.","type":"standalone"},{"name":"COOKSD","description":"Produces the Cook’s D plot.","type":"standalone"},{"name":"QQ","description":"Q-Q plot of residuals.","type":"standalone"},{"name":"RESIDUAL","description":"Plots the residuals.","type":"standalone"},{"name":"STUDENTRESIDUAL","description":"Plots the studentized residuals.","type":"standalone"},{"name":"STANDARDRESIDUAL","description":"Plots the standardized residuals.","type":"standalone"},{"name":"WHITENOISE","description":"Plots the white noise probabilities.","type":"standalone"},{"name":"RESIDUALHISTOGRAM","description":"Plots the histogram of residuals.","type":"standalone"},{"name":"NONE","description":"Suppresses all plots.","type":"standalone"}]}]},{"name":"BY","description":"A BY statement can be used with PROC AUTOREG to obtain separate analyses on observations in groups defined by the BY variables.","help":"BY variables "},{"name":"CLASS","description":"The CLASS statement names the classification variables to be used in the analysis. Classification variables can be either character or numeric. In PROC AUTOREG, the CLASS statement enables you to output class variables to a data set that contains a copy of the original data. Class levels are determined from the formatted values of the CLASS variables. Thus, you can use formats to group values into levels.","help":"CLASS variables "},{"name":"HETERO","description":"The HETERO statement specifies variables that are related to the heteroscedasticity of the residuals and the way these variables are used to model the error variance of the regression.","help":"HETERO &lt;COEF=&lt;NONNEG | UNIT | ZERO&gt;... &gt; &lt;LINK=&lt;EXP | SQUARE | LINEAR&gt;&gt; &lt;STD=&lt;NONNEG | UNIT | UNREST&gt;&gt; ...","arguments":[{"name":"COEF=","optional":true,"followsDelimiter":"/","description":"Imposes constraints on the estimated parameters η of the heteroscedasticity model.","help":"COEF=NONNEG | UNIT | ZERO | UNREST","type":"choice","arguments":[{"name":"NONNEG","followsDelimiter":"/","description":"Specifies that the estimated heteroscedasticity parameters η must be nonnegative.","type":"standalone"},{"name":"UNIT","followsDelimiter":"/","description":"Constrains all heteroscedasticity parameters η to equal 1","type":"standalone"},{"name":"ZERO","followsDelimiter":"/","description":"Constrains all heteroscedasticity parameters η to equal 0.","type":"standalone"},{"name":"UNREST","followsDelimiter":"/","description":"Specifies unrestricted estimation of η.","type":"standalone"}]},{"name":"LINK=","optional":true,"followsDelimiter":"/","description":"Specifies the functional form of the heteroscedasticity model. By default, LINK=EXP. If you specify a GARCH model with the HETERO statement, the model is estimated using LINK= LINEAR only.","help":"LINK=EXP | SQUARE | LINEAR","type":"choice","arguments":[{"name":"EXP","followsDelimiter":"/","description":"Specifies the exponential link function.","type":"standalone"},{"name":"SQUARE","followsDelimiter":"/","description":"Specifies the square link function.","type":"standalone"},{"name":"LINEAR","followsDelimiter":"/","description":"Specifies the linear function; that is, the HETERO statement variables predict the error variance linearly.","type":"standalone"}]},{"name":"NOCONST","optional":true,"followsDelimiter":"/","description":"Specifies that the heteroscedasticity model does not include the unit term for the LINK=SQUARE and LINK=LINEAR options.","type":"standalone"},{"name":"STD=","optional":true,"followsDelimiter":"/","description":"Imposes constraints on the estimated standard deviation σ of the heteroscedasticity model.","help":"STD=NONNEG | UNIT | UNREST","type":"choice","arguments":[{"name":"NONNEG","followsDelimiter":"/","description":"Specifies that the estimated standard deviation parameter σ must be nonnegative.","type":"standalone"},{"name":"UNIT","followsDelimiter":"/","description":"Constrains the standard deviation parameter σ to equal 1.","type":"standalone"},{"name":"UNREST","followsDelimiter":"/","description":"Specifies unrestricted estimation of σ.","type":"standalone"}]},{"name":"TEST=","optional":true,"followsDelimiter":"/","description":"Produces a Lagrange multiplier test for heteroscedasticity. The null hypothesis is homoscedasticity; the alternative hypothesis is heteroscedasticity of the form specified by the HETERO statement. The power of the test depends on the variables specified in the HETERO statement.","help":"TEST=LM","type":"choice","arguments":[{"name":"LM","followsDelimiter":"/","description":"Specifies a Lagrange multiplier test for heteroscedasticity.","type":"standalone"}]}]},{"name":"LAGLIST","description":"This is no longer supported under SAS/ETS 9.22.","help":"LAGLIST"},{"name":"MODEL","description":"The MODEL statement specifies the dependent variable and independent regressor variables for the regression model. If no independent variables are specified in the MODEL statement, only the mean is fitted. (This is a way to obtain autocorrelations of a series. Models can be given labels of up to eight characters. Model labels are used in the printed output to identify the results for different models.)","help":"MODEL &lt;CENTER&gt; &lt;NLAG= number | NLAG= (number-list)&gt; &lt;NOINT&gt; ...","arguments":[{"name":"ALL","optional":true,"followsDelimiter":"/","description":"Requests all printing options.","type":"standalone"},{"name":"ARCHTEST=","optional":true,"followsDelimiter":"/","description":"Specifies tests for the absence of ARCH effects. The following options can be used in the ARCHTEST=( ) option. The options are listed within parentheses and separated by commas. QLM | QLMARCH requests the Q and Engle’s LM tests. LK | LKARCH requests Lee and King’s ARCH tests. WL | WLARCH requests Wong and Li’s ARCH tests.","help":"ARCHTEST=ALL | WL | WLARCH | LK | LKARCH | QLM | QLMARCH","type":"choice","arguments":[{"name":"ALL","type":"standalone"},{"name":"WL","type":"standalone"},{"name":"WLARCH","type":"standalone"},{"name":"LK","type":"standalone"},{"name":"LKARCH","type":"standalone"},{"name":"QLM","type":"standalone"},{"name":"QLMARCH","type":"standalone"}]},{"name":"BACKSTEP","optional":true,"followsDelimiter":"/","description":"Removes insignificant autoregressive parameters. The parameters are removed in order of least significance. This backward elimination is done only once on the Yule-Walker estimates computed after the initial ordinary least squares estimation. The BACKSTEP option can be used with all estimation methods since the initial parameter values for other estimation methods are estimated using the Yule-Walker method.","type":"standalone"},{"name":"BDS=","optional":true,"followsDelimiter":"/","description":"Specifies Brock-Dechert-Scheinkman (BDS) tests for independence. The following options can be used in the BDS=( ) option. The options are listed within parentheses and separated by commas. M=number specifies the maximum number of the embedding dimension. The BDS tests with embedding dimension from 2 to M are calculated. M must be an integer between 2 and 20. The default value of the M= suboption is 20. D=number specifies the parameter to determine the radius for BDS test. The BDS test sets up the radius as r=D*σ, where σ is the standard deviation of the time series to be tested. By default, D=1.5. PVALUE=DIST | SIM specifies the way to calculate the p-values. By default or if PVALUE=DIST is specified, the p-values are calculated according to the asymptotic distribution of BDS statistics (that is, the standard normal distribution). Otherwise, for samples of size less than 500, the p-values are obtained though Monte Carlo simulation. Z=value specifies the type of the time series (residuals) to be tested. The values of the Z= suboption are as follows: Y -- specifies the regressand. The default is Z=Y. RO -- specifies the OLS residuals. R -- specifies the residuals of the final model. RM -- specifies the structural residuals of the final model.","type":"value"},{"name":"CENTER","optional":true,"followsDelimiter":"/","description":"Centers the dependent variable by subtracting its mean and suppresses the intercept parameter from the model. This option is valid only when the model does not have regressors (explanatory variables).","type":"standalone"},{"name":"CHOW=","optional":true,"followsDelimiter":"/","description":"Computes Chow tests to evaluate the stability of the regression coefficient. The Chow test is also called the analysis-of-variance test. Each value obs-i listed on the CHOW= option specifies a break point of the sample. The sample is divided into parts at the specified break point, with observations before obs-i in the first part and obs-i and later observations in the second part, and the fits of the model in the two parts are compared to whether both parts of the sample are consistent with the same model. The break points obs-i refer to observations within the time range of the dependent variable, ignoring missing values before the start of the dependent series. Thus, CHOW=20 specifies the 20th observation after the first nonmissing observation for the dependent variable. For example, if the dependent variable Y contains 10 missing values before the first observation with a nonmissing Y value, then CHOW=20 actually refers to the 30th observation in the data set.","type":"value"},{"name":"COEF","optional":true,"followsDelimiter":"/","description":"Prints the transformation coefficients for the first p observations. These coefficients are formed from a scalar multiplied by the inverse of the Cholesky root of the Toeplitz matrix of autocovariances.","type":"standalone"},{"name":"CONVERGE=","optional":true,"followsDelimiter":"/","description":"Specifies the convergence criterion. If the maximum absolute value of the change in the autoregressive parameter estimates between iterations is less than this amount, then convergence is assumed. The default is CONVERGE=.001.","type":"value"},{"name":"CORRB","optional":true,"followsDelimiter":"/","description":"Prints the estimated correlations of the parameter estimates.","type":"standalone"},{"name":"COVB","optional":true,"followsDelimiter":"/","description":"Prints the estimated covariances of the parameter estimates.","type":"standalone"},{"name":"COVEST=","optional":true,"followsDelimiter":"/","description":"Specifies the type of covariance matrix for the GARCH or heteroscedasticity model.","help":"COVEST=OP | HESSIAN | QML","type":"choice","arguments":[{"name":"OP","followsDelimiter":"/","description":"The outer product matrix is used to compute the covariance matrix of the parameter estimates. This is the default.","type":"standalone"},{"name":"HESSIAN","followsDelimiter":"/","description":"Produces the covariance matrix by using the Hessian matrix.","type":"standalone"},{"name":"QML","followsDelimiter":"/","description":"Computes the quasi-maximum likelihood estimates.","type":"standalone"}]},{"name":"DIST=","optional":true,"followsDelimiter":"/","description":"Specifies the distribution assumed for the error term in GARCH-type estimation. If no GARCH= option is specified, the option is ignored. If EGARCH is specified, the distribution is always normal distribution.","help":"DIST=T | NORMAL","type":"choice","arguments":[{"name":"T","followsDelimiter":"/","description":"Specifies Student’s t distribution.","type":"standalone"},{"name":"NORMAL","followsDelimiter":"/","description":"Specifies the standard normal distribution. This is the default.","type":"standalone"}]},{"name":"DW=","optional":true,"followsDelimiter":"/","description":"Prints Durbin-Watson statistics up to the order n. The default is DW=1. When the LAGDEP option is specified, the Durbin-Watson statistic is not printed unless the DW= option is explicitly specified.","type":"value"},{"name":"DWPROB","optional":true,"followsDelimiter":"/","description":"Now produces p-values for the generalized Durbin-Watson test statistics for large sample sizes. Previously, the Durbin-Watson probabilities were calculated only for small sample sizes. The new method of calculating Durbin-Watson probabilities is based on the algorithm of Ansley, Kohn, and Shively (1992).","type":"standalone"},{"name":"GARCH=","optional":true,"followsDelimiter":"/","description":"Specifies a GARCH-type conditional heteroscedasticity model. The GARCH= option in the MODEL statement specifies the family of ARCH models to be estimated. The GARCH regression model is specified in the following statement: model y = x1 x2 / garch=(q=1,p=1); When you want to estimate the subset of ARCH terms, such as ARCH, you can write the SAS statement as follows: model y = x1 x2 / garch=(q=(1 3)); The following options can be used in the GARCH=( ) option. The options are listed within parentheses and separated by commas. Q= number | Q= (number-list) specifies the order of the process or the subset of ARCH terms to be fitted. P= number | P= (number-list) specifies the order of the process or the subset of GARCH terms to be fitted. TYPE= value specifies the type of GARCH model. The values of the TYPE= option are as follows: EXP -- specifies the exponential GARCH or EGARCH model. INTEGRATED -- specifies the integrated GARCH or IGARCH model. NELSON | NELSONCAO --specifies the Nelson-Cao inequality constraints. This is the default. NONNEG -- specifies the GARCH model with nonnegativity constraints. STATIONARY -- constrains the sum of GARCH coefficients to be less than 1. POWER | PGARCH -- specifies the power GARCH or PGARCH model. QUADR | QUADRATIC | QGARCH -- specifies the quadratic GARCH or QGARCH model. STATIONARY -- constrains the sum of GARCH coefficients to be less than 1. THRES | THRESHOLD | TGARCH -- specifies the threshold GARCH or TGARCH model. MEAN= -- Specifies the functional form of the GARCH-M model. NOINT -- Suppresses the intercept parameter in the conditional variance model. This option is valid only with the TYPE=INTEG option. STARTUP=MSE | ESTIMATE -- Requests whether the positive constant c for the start-up values of the GARCH conditional error variance process is estimated, or the value of the mean squared error is used as the default constant.","help":"GARCH=TR | STARTUP= | NOINT | MEAN= | TYPE= | P= | Q=","type":"choice","arguments":[{"name":"TR","type":"standalone"},{"name":"STARTUP=","type":"value"},{"name":"NOINT","type":"standalone"},{"name":"MEAN=","type":"value"},{"name":"TYPE=","type":"value"},{"name":"P=","type":"value"},{"name":"Q=","type":"value"}]},{"name":"GINV","optional":true,"followsDelimiter":"/","description":"Prints the inverse of the Toeplitz matrix of autocovariances for the Yule-Walker solution.","type":"standalone"},{"name":"GODFREY=","optional":true,"followsDelimiter":"/","description":"Produces Godfrey’s general Lagrange multiplier test against ARMA errors.","help":"GODFREY=*r*","type":"value"},{"name":"INITIAL=","optional":true,"followsDelimiter":"/","aliases":["START="],"description":"Specifies initial values for some or all of the parameter estimates. The values specified are assigned to model parameters in the same order as the parameter estimates are printed in the AUTOREG procedure output. The order of values in the INITIAL= or START= option is as follows: the intercept, the regressor coefficients, the autoregressive parameters, the ARCH parameters, the GARCH parameters, the inverted degrees of freedom for Student’s t distribution, the start-up value for conditional variance, and the heteroscedasticity model parameters η specified by the HETERO statement.","type":"value"},{"name":"ITPRINT","optional":true,"followsDelimiter":"/","description":"Prints the objective function and parameter estimates at each iteration. The objective function is the full log likelihood function for the maximum likelihood method, while the error sum of squares is produced as the objective function of unconditional least squares. For the ML method, the ITPRINT option prints the value of the full log likelihood function, not the concentrated likelihood.","type":"standalone"},{"name":"LAGDEP=","optional":true,"followsDelimiter":"/","aliases":["LAGDV="],"description":"Prints the Durbin h statistic for testing the presence of first-order autocorrelation when regressors contain the lagged dependent variable whose name is specified as LAGDEP=name.","type":"value"},{"name":"LAGDEP","optional":true,"followsDelimiter":"/","aliases":["LAGDV"],"description":"Prints the Durbin t statistic, which is used to detect residual autocorrelation in the presence of lagged dependent variables.","type":"standalone"},{"name":"LDW","optional":true,"followsDelimiter":"/","description":"Specifies that p-values for the Durbin-Watson test be computed using a linearized approximation of the design matrix when the model is nonlinear due to the presence of an autoregressive error process. (The Durbin-Watson tests of the OLS linear regression model residuals are not affected by the LDW option.)","type":"standalone"},{"name":"LOGLIKL","optional":true,"followsDelimiter":"/","description":"Prints the log likelihood value of the regression model, assuming normally distributed errors.","type":"standalone"},{"name":"MAXITER=","optional":true,"followsDelimiter":"/","description":"Sets the maximum number of iterations allowed. The default is MAXITER=50.","type":"value"},{"name":"METHOD=","optional":true,"followsDelimiter":"/","description":"Requests the type of estimates to be computed.","help":"METHOD=ML | ULS | YW | ITYW","type":"choice","arguments":[{"name":"ML","followsDelimiter":"/","description":"Specifies maximum likelihood estimates.","type":"standalone"},{"name":"ULS","followsDelimiter":"/","description":"Specifies unconditional least squares estimates.","type":"standalone"},{"name":"YW","followsDelimiter":"/","description":"Specifies Yule-Walker estimates.","type":"standalone"},{"name":"ITYW","followsDelimiter":"/","description":"Specifies iterative Yule-Walker estimates.","type":"standalone"}]},{"name":"NLAG=","optional":true,"followsDelimiter":"/","description":"Specifies the order of the autoregressive error process or the subset of autoregressive error lags to be fitted. Note that NLAG=3 is the same as NLAG=(1 2 3). If the NLAG= option is not specified, PROC AUTOREG does not fit an autoregressive model.","type":"value"},{"name":"NOINT","optional":true,"followsDelimiter":"/","description":"Suppresses the intercept parameter.","type":"standalone"},{"name":"NOMISS","optional":true,"followsDelimiter":"/","description":"Requests the estimation to the first contiguous sequence of data with no missing values. Otherwise, all complete observations are used.","type":"standalone"},{"name":"NOPRINT","optional":true,"followsDelimiter":"/","description":"Suppresses all printed output.","type":"standalone"},{"name":"NORMAL","optional":true,"followsDelimiter":"/","description":"Specifies the Jarque-Bera’s normality test statistic for regression residuals.","type":"standalone"},{"name":"OPTMETHOD=","optional":true,"followsDelimiter":"/","description":"Specifies the optimization technique when the GARCH or heteroscedasticity model is estimated.","help":"OPTMETHOD=QN | TR","type":"choice","arguments":[{"name":"QN","followsDelimiter":"/","description":"Specifies the quasi-Newton method. This is the default.","type":"standalone"},{"name":"TR","followsDelimiter":"/","description":"Specifies the trust region method.","type":"standalone"}]},{"name":"PARTIAL","optional":true,"followsDelimiter":"/","description":"Prints partial autocorrelations.","type":"standalone"},{"name":"PCHOW=","optional":true,"followsDelimiter":"/","description":"Computes the predictive Chow test. The form of the PCHOW= option is the same as the CHOW= option.","type":"value"},{"name":"RESET","optional":true,"followsDelimiter":"/","description":"Produces Ramsey’s RESET test statistics.","type":"standalone"},{"name":"RUNS=","optional":true,"followsDelimiter":"/","description":"Specifies the runs test for independence. The Z= suboption specifies the type of the time series or residuals to be tested. The values of the Z= suboption are as follows: Y specifies the regressand. The default is Z=Y. RO specifies the OLS residuals. R specifies the residuals of the final model. RM specifies the structural residuals of the final model.","type":"value"},{"name":"SLSTAY=","optional":true,"followsDelimiter":"/","description":"Specifies the significance level criterion to be used by the BACKSTEP option. The default is SLSTAY=.05.","type":"value"},{"name":"STATIONARITY=","optional":true,"followsDelimiter":"/","description":"Specifies tests of stationarity or unit roots. The STATIONARITY= option provides Phillips-Perron, Phillips-Ouliaris, and KPSS tests.","help":"STATIONARITY=(PHILLIPS) | (PHILLIPS=(value ...value)) | (KPSS) | (KPSS=(KERNEL=TYPE)) | (KPSS=(KERNEL=TYPE TRUNCPOINTMETHOD)) | (PHILLIPS&lt;=(...)&gt;, KPSS&lt;=(...)&gt;) | (ERS) | (ERS=(value)) | (NP) | =(NP=(value)) | (ADF&lt;=(...)&gt;,ERS&lt;=(...)&gt;, KPSS&lt;=(...)&gt;, NP&lt;=(...)&gt;, PHILLIPS&lt;=(...)&gt; )","type":"choice","arguments":[{"name":"(PHILLIPS)","followsDelimiter":"/","description":"Produces the Phillips-Perron unit root test when there are no regressors in the MODEL statement. When the model includes regressors, the PHILLIPS option produces the Phillips-Ouliaris cointegration test.","type":"standalone"},{"name":"(PHILLIPS=(value ...value))","followsDelimiter":"/","description":"Produces the Phillips-Perron unit root test when there are no regressors in the MODEL statement. When the model includes regressors, the PHILLIPS option produces the Phillips-Ouliaris cointegration test.","type":"value"},{"name":"(KPSS)","followsDelimiter":"/","description":"Produces the Kwiatkowski, Phillips, Schmidt, and Shin (1992) (KPSS) unit root test. The Newey-West kernel is used, in which the default truncation point method is the Schwert with c=4 (SCHW=4).","type":"standalone"},{"name":"(KPSS=(KERNEL=TYPE))","followsDelimiter":"/","description":"Produces the Kwiatkowski, Phillips, Schmidt, and Shin (1992) (KPSS) unit root test. You can specify two types of the kernel: KERNEL=NW|BART Newey-West (or Bartlett) kernel KERNEL=QS Quadratic spectral kernel","type":"value"},{"name":"(KPSS=(KERNEL=TYPE TRUNCPOINTMETHOD))","followsDelimiter":"/","description":"Produces the Kwiatkowski, Phillips, Schmidt, and Shin (1992) (KPSS) unit root test. You can specify two types of the kernel: KERNEL=NW|BART Newey-West (or Bartlett) kernel KERNEL=QS Quadratic spectral kernel You can set the truncation point s by using three different methods: SCHW=c Schwert maximum lag formula LAG= LAG= manually defined number of lags AUTO Automatic bandwidth selection","type":"value"},{"name":"(PHILLIPS<=(...)>, KPSS<=(...)>)","followsDelimiter":"/","description":"Specifies both the Phillips-Perron and KPSS unit root tests.","type":"value"},{"name":"(ERS)","followsDelimiter":"/","description":"Provides a class of efficient unit root tests, in the sense that it reduces the size distortion and improve the power compared with traditional unit root tests such as augmented Dickey-Fuller and Phillips-Perron tests.","type":"standalone"},{"name":"(ERS=(value))","followsDelimiter":"/","description":"Two test statistics are provided by the ERS test: the point optimal test and the DF-GLS test, which are originally proposed in Elliott, Rothenberg, and Stock (1996).","type":"value"},{"name":"(NP)","followsDelimiter":"/","description":"Provides a class of efficient unit root tests, in the sense that it reduces the size distortion and improve the power compared with traditional unit root tests such as augmented Dickey-Fuller and Phillips-Perron tests.","type":"standalone"},{"name":"=(NP=(value))","followsDelimiter":"/","description":"Four different tests, discussed in Ng and Perron (2001), are reported by NP test. These four tests include the two in the ERS test and two other tests, the modified PP test and the modified point optimal test.","type":"value"},{"name":"(ADF<=(...)>,ERS<=(...)>, KPSS<=(...)>, NP<=(...)>, PHILLIPS<=(...)> )","followsDelimiter":"/","description":"The ADF or ADF= suboption produces the augmented Dickey-Fuller unit root test (Dickey and Fuller; 1979).","type":"value"}]},{"name":"URSQ","optional":true,"followsDelimiter":"/","description":"Prints the uncentered regression R². The uncentered regression R² is useful to compute Lagrange multiplier test statistics, since most LM test statistics are computed as T *URSQ, where T is the number of observations used in estimation.","type":"standalone"}]},{"name":"NLOPTIONS","description":"Several SAS/ETS procedures (COUNTREG, ENTROPY, MDC, QLIM, UCM, and VARMAX) use the nonlinear optimization (NLO) subsystem to perform nonlinear optimization.","help":"NLOPTIONS &lt;ABSCONV= | ABSTOL=r&gt; &lt;ABSFCONV=r[n] | ABSFTOL=r[n&gt; &lt;ABSGCONV=r[n] | ABSGTOL=r[n&gt; ...","arguments":[{"name":"ABSCONV=","optional":true,"aliases":["ABSTOL="],"description":"Specifies an absolute function convergence criterion. The default value of r is the negative square root of the largest double-precision value, which serves only as a protection against overflows.","type":"value"},{"name":"ABSFCONV=","optional":true,"aliases":["ABSFTOL="],"description":"Specifies an absolute function convergence criterion. The default value is r=0. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can be terminated.","type":"value"},{"name":"ABSGCONV=","optional":true,"aliases":["ABSGTOL="],"description":"Specifies an absolute gradient convergence criterion. The default value is r=1E-5. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can be terminated.","type":"value"},{"name":"ABSXCONV=","optional":true,"aliases":["ABSXTOL="],"description":"Specifies the absolute parameter convergence criterion. The default is r=1E-8 for the NMSIMP technique and r=0 otherwise. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can terminate.","type":"value"},{"name":"DAMPSTEP=","optional":true,"description":"Specifies that the initial step length value a⁰ for each line search (used by the QUANEW, HYQUAN, CONGRA, or NEWRAP technique) cannot be larger than r times the step length value used in the former iteration. If the DAMPSTEP option is specified but r is not specified, the default is r=2. The DAMPSTEP=r option can prevent the line-search algorithm from repeatedly stepping into regions where some objective functions are difficult to compute or where they could lead to floating point overflows during the computation of objective functions and their derivatives. The DAMPSTEP=r option can save time-costly function calls during the line searches of objective functions that result in very small steps.","type":"value"},{"name":"FCONV2=","optional":true,"aliases":["FTOL2="],"description":"Specifies another function convergence criterion.","type":"value"},{"name":"FCONV=","optional":true,"aliases":["FTOL="],"description":"Specifies a relative function convergence criterion.","type":"value"},{"name":"FSIZE=","optional":true,"description":"Specifies the FSIZE parameter of the relative function and relative gradient termination criteria. The default value is r=0.","help":"FSIZE=*r*","type":"value"},{"name":"GCONV=","optional":true,"aliases":["GTOL="],"description":"Specifies a relative gradient convergence criterion. The default value is r=1E-8. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can terminate.","type":"value"},{"name":"HESCAL=","optional":true,"aliases":["HS="],"description":"Specifies the scaling version of the Hessian matrix used in NRRIDG, TRUREG, NEWRAP, or DBLDOG optimization.","help":"HESCAL=0 | 1 | 2 | 3","type":"choice","arguments":[{"name":"0","description":"Specifies that no scaling is done.","type":"standalone"},{"name":"1","description":"Specifies the Moré (1978) scaling update","type":"standalone"},{"name":"2","description":"Specifies the Dennis, Gay, and Welsch (1981) scaling update","type":"standalone"},{"name":"3","description":"Specifies that di is reset in each iteration","type":"standalone"}]},{"name":"INHESSIAN=","optional":true,"aliases":["INHESS="],"description":"Specifies how the initial estimate of the approximate Hessian is defined for the quasi-Newton techniques QUANEW and DBLDOG.","type":"value"},{"name":"INSTEP=","optional":true,"description":"Reduces the length of the first trial step during the line search of the first iterations.","help":"INSTEP=*r*","type":"value"},{"name":"LINESEARCH=","optional":true,"aliases":["LIS="],"description":"Specifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques.","help":"LINESEARCH=1 | 2 | 3 | 4 | 5 | 6 | 7 | 8","type":"choice","arguments":[{"name":"1","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is similar to one used by the Harwell subroutine library.","type":"standalone"},{"name":"2","description":"Specifies a line-search method that needs more function calls than gradient calls for quadratic and cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"3","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"4","description":"Specifies a line-search method that needs the same number of function and gradient calls for stepwise extrapolation and cubic interpolation","type":"standalone"},{"name":"5","description":"Specifies a line-search method that is a modified version of LIS=4.","type":"standalone"},{"name":"6","description":"Specifies golden section line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"7","description":"Specifies bisection line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"8","description":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for linear approximation.","type":"standalone"}]},{"name":"LSPRECISION=","optional":true,"aliases":["LSP="],"description":"Specifies the degree of accuracy that should be obtained by the line-search algorithms LIS=2 and LIS=3. The default LSPRECISION= values are:","type":"value"},{"name":"MAXFUNC=","optional":true,"aliases":["MAXFU="],"description":"Requires the number of function calls to be no larger than i. The default values are:","type":"value"},{"name":"MAXITER=","optional":true,"aliases":["MAXIT="],"description":"Requires the number of iterations to be no larger than i. The default values are: o For TECH= TRUREG, NRRIDG, NEWRAP: i=50 o For TECH= QUANEW, DBLDOG: i=200 o For TECH= CONGRA: i=400 o For TECH= NMSIMP: i=1000 These default values are also valid when i is specified as a missing value.","type":"value"},{"name":"MAXSTEP=","optional":true,"description":"Specifies an upper bound for the step length of the line-search algorithms during the first n iterations.","help":"MAXSTEP=*r[n*","type":"value"},{"name":"MAXTIME=","optional":true,"description":"Requires the CPU time to be no larger than r. The default value of the MAXTIME= option is the largest double floating-point number on your computer. Note that the time specified by the MAXTIME= option is checked only once at the end of each iteration. Therefore, the actual running time can be much longer than that specified by the MAXTIME= option. The actual running time includes the rest of the time needed to finish the iteration and the time needed to generate the output of the results.","help":"MAXTIME=*r*","type":"value"},{"name":"MINITER=","optional":true,"aliases":["MINIT="],"description":"Specifies the minimum number of iterations. The default value is 0. If you request more iterations than are actually needed for convergence to a stationary point, the optimization algorithms can behave strangely. For example, the effect of rounding errors can prevent the algorithm from continuing for the required number of iterations.","type":"value"},{"name":"NOPRINT","optional":true,"description":"Suppresses the output.","type":"standalone"},{"name":"PALL","optional":true,"description":"[Displays all optional output for optimization.","type":"standalone"},{"name":"PHISTORY","optional":true,"description":"Displays the optimization history.","type":"standalone"},{"name":"PHISTPARMS","optional":true,"description":"Display parameter estimates in each iteration.","type":"standalone"},{"name":"PINIT","optional":true,"description":"Displays the initial values and derivatives (if available).","type":"standalone"},{"name":"PSHORT","optional":true,"description":"Restricts the amount of default output.","type":"standalone"},{"name":"PSUMMARY","optional":true,"description":"Restricts the amount of default displayed output to a short form of iteration history and notes, warnings, and errors.","type":"standalone"},{"name":"RESTART=","optional":true,"aliases":["REST="],"description":"Specifies that the QUANEW or CONGRA algorithm is restarted with a steepest descent/ascent search direction after, at most, i iterations, i > 0.","type":"value"},{"name":"SOCKET=","optional":true,"description":"Specifies the fileref that contains the information needed for remote monitoring.","type":"value"},{"name":"TECHNIQUE=","optional":true,"aliases":["TECH="],"description":"Specifies the optimization technique.","help":"TECHNIQUE=CONGRA | DBLDOG | NMSIMP | NEWRAP | NRRIDG | QUANEW | TRUREG | NONE","type":"choice","arguments":[{"name":"CONGRA","description":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"DBLDOG","description":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation of the Cholesky factor of the Hessian.","type":"standalone"},{"name":"NMSIMP","description":"Performs a Nelder-Mead simplex optimization.","type":"standalone"},{"name":"NEWRAP","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. The algorithm combines a line-search algorithm with ridging, and it can be modified with the LINESEARCH= option.","type":"standalone"},{"name":"NRRIDG","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. This algorithm does not perform a line search.","type":"standalone"},{"name":"QUANEW","description":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"TRUREG","description":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region optimization technique. The algorithm is implemented similar to Gay (1983) and Moré and Sorensen (1983).","type":"standalone"},{"name":"NONE","description":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also computes and displays residuals and goodness of fit statistics.","type":"standalone"}]},{"name":"UPDATE=","optional":true,"aliases":["UPD="],"description":"Specifies the update method for the quasi-Newton, double-dogleg, or conjugate-gradient optimization technique.","help":"UPDATE=BFGS | DBFGS | DDFP | DFP | PB | FR | PR | CD","type":"choice","arguments":[{"name":"BFGS","description":"Performs the original Broyden, Fletcher, Goldfarb, and Shanno (BFGS) update of the inverse Hessian matrix.","type":"standalone"},{"name":"DBFGS","description":"Performs the dual BFGS update of the Cholesky factor of the Hessian matrix. This is the default update method.","type":"standalone"},{"name":"DDFP","description":"Performs the dual Davidon, Fletcher, and Powell (DFP) update of the Cholesky factor of the Hessian matrix.","type":"standalone"},{"name":"DFP","description":"Performs the original DFP update of the inverse Hessian matrix.","type":"standalone"},{"name":"PB","description":"Performs the automatic restart update method of Powell (1977) and Beale (1972).","type":"standalone"},{"name":"FR","description":"Performs the Fletcher-Reeves update (Fletcher 1987).","type":"standalone"},{"name":"PR","description":"Performs the Polak-Ribiere update (Fletcher 1987).","type":"standalone"},{"name":"CD","description":"Performs a conjugate-descent update of Fletcher (1987).","type":"standalone"}]},{"name":"XCONV=","optional":true,"aliases":["XTOL="],"description":"Specifies the relative parameter convergence criterion. For all techniques except NMSIMP, termination requires a small relative parameter change in subsequent iterations. The default value is r=1E-8 for the NMSIMP technique and r=0 otherwise. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can be terminated.","type":"value"},{"name":"XSIZE=","optional":true,"description":"Specifies the XSIZE parameter of the relative parameter termination criterion. The default value is r=0.","type":"value"}]},{"name":"OUTPUT","description":"The OUTPUT statement creates an output SAS data set.","help":"OUTPUT &lt;ALPHACLI= number&gt; &lt;ALPHACLM= number&gt; &lt;OUT= SAS-data-set&gt; ...","arguments":[{"name":"ALPHACLI=","optional":true,"description":"Sets the confidence limit size for the estimates of future values of the response time series. The ALPHACLI= value must be between 0 and 1. The resulting confidence interval has 1-number confidence. The default is ALPHACLI=.05, corresponding to a 95% confidence interval.","type":"value"},{"name":"ALPHACLM=","optional":true,"description":"Sets the confidence limit size for the estimates of the structural or regression part of the model. The ALPHACLI= value must be between 0 and 1. The resulting confidence interval has 1-number confidence. The default is ALPHACLM=.05, corresponding to a 95% confidence interval.","type":"value"},{"name":"ALPHACSM=","optional":true,"description":"Specifies the significance level for the upper and lower bounds of the CUSUM and CUSUMSQ statistics output by the CUSUMLB=, CUSUMUB=, CUSUMSQLB=, and CUSUMSQUB= options.","help":"ALPHACSM=.01 | .05 | .10","type":"choice","arguments":[{"name":".01","description":"ALPHACSM=.01","type":"standalone"},{"name":".05","description":"ALPHACSM=.05","type":"standalone"},{"name":".10","description":"ALPHACSM=.10","type":"standalone"}]},{"name":"BLUS=","optional":true,"description":"Specifies the name of a variable to contain the values of the Theil’s BLUS residuals.","type":"value"},{"name":"CEV=","optional":true,"aliases":["HT="],"description":"Writes to the output data set the value of the error variance σ²t from the heteroscedasticity model specified by the HETERO statement or the value of the conditional error variance ht by the GARCH= option in the MODEL statement.","type":"value"},{"name":"CONSTANT=","optional":true,"description":"Writes the transformed intercept to the output data set.","type":"value"},{"name":"CPEV=","optional":true,"description":"Writes the conditional prediction error variance to the output data set. The value of conditional prediction error variance is equal to that of the conditional error variance when there are no autoregressive parameters. For the exponential GARCH model, conditional prediction error variance cannot be calculated.","type":"value"},{"name":"CUSUM=","optional":true,"description":"Specifies the name of a variable to contain the CUSUM statistics.","type":"value"},{"name":"CUSUMLB=","optional":true,"description":"Specifies the name of a variable to contain the lower confidence bound for the CUSUM statistic.","type":"value"},{"name":"CUSUMSQ=","optional":true,"description":"Specifies the name of a variable to contain the CUSUMSQ statistics.","type":"value"},{"name":"CUSUMSQLB=","optional":true,"description":"Specifies the name of a variable to contain the lower confidence bound for the CUSUMSQ statistic.","type":"value"},{"name":"CUSUMSQUB=","optional":true,"description":"Specifies the name of a variable to contain the upper confidence bound for the CUSUMSQ statistic.","type":"value"},{"name":"CUSUMUB=","optional":true,"description":"Specifies the name of a variable to contain the upper confidence bound for the CUSUM statistic.","type":"value"},{"name":"LCL=","optional":true,"description":"Writes the lower confidence limit for the predicted value (specified in the PREDICTED= option) to the output data set. The size of the confidence interval is set by the ALPHACLI= option. When a GARCH model is estimated, the lower confidence limit is calculated assuming that the disturbances have homoscedastic conditional variance.","type":"value"},{"name":"LCLM=","optional":true,"description":"Writes the lower confidence limit for the structural predicted value (specified in the PREDICTEDM= option) to the output data set under the name given. The size of the confidence interval is set by the ALPHACLM= option.","type":"value"},{"name":"OUT=","optional":true,"description":"Names the output SAS data set containing the predicted and transformed values. If the OUT= option is not specified, the new data set is named according to the DATAn convention.","type":"value"},{"name":"PREDICTED=","optional":true,"aliases":["P="],"description":"Writes the predicted values to the output data set. These values are formed from both the structural and autoregressive parts of the model.","type":"value"},{"name":"PREDICTEDM=","optional":true,"aliases":["PM="],"description":"Writes the structural predicted values to the output data set. These values are formed from only the structural part of the model.","type":"value"},{"name":"RECPEV=","optional":true,"description":"Specifies the name of a variable to contain the part of the predictive error variance (vt) that is used to compute the recursive residuals.","type":"value"},{"name":"RECRES=","optional":true,"description":"Specifies the name of a variable to contain recursive residuals. The recursive residuals are used to compute the CUSUM and CUSUMSQ statistics.","type":"value"},{"name":"RESIDUAL=","optional":true,"aliases":["R="],"description":"Writes the residuals from the predicted values based on both the structural and time series parts of the model to the output data set.","type":"value"},{"name":"RESIDUALM=","optional":true,"aliases":["RM="],"description":"Writes the residuals from the structural prediction to the output data set.","type":"value"},{"name":"TRANSFORM=","optional":true,"description":"Transforms the specified variables from the input data set by the autoregressive model and writes the transformed variables to the output data set. If you need to reproduce the data suitable for reestimation, you must also transform an intercept variable. To do this, transform a variable that is all 1s or use the CONSTANT= option.","type":"value"},{"name":"UCL=","optional":true,"description":"Writes the upper confidence limit for the predicted value (specified in the PREDICTED= option) to the output data set.","type":"value"},{"name":"UCLM=","optional":true,"description":"Writes the upper confidence limit for the structural predicted value (specified in the PREDICTEDM= option) to the output data set. The size of the confidence interval is set by the ALPHACLM= option.","type":"value"}]},{"name":"RESTRICT","description":"The RESTRICT statement provides constrained estimation. The RESTRICT statement places restrictions on the parameter estimates for covariates in the preceding MODEL statement. The AR, GARCH, and HETERO parameters are also supported in the RESTRICT statement. Any number of RESTRICT statements can follow a MODEL statement. Several restrictions can be specified in a single RESTRICT statement by separating the individual restrictions with commas. Each restriction is written as a linear equation composed of constants and parameter names. Refer to model parameters by the name of the corresponding regressor variable. Each name used in the equation must be a regressor in the preceding MODEL statement. Use the keyword INTERCEPT to refer to the intercept parameter in the model. The following is an example of a RESTRICT statement: model y = a b c d; restrict a+b=0, 2*d-c=0;","help":"RESTRICT equation , ..., equation "},{"name":"TEST","description":"The TEST statement tests hypotheses about the covariates in the model estimated by the preceding MODEL statement. The AR, GARCH, and HETERO parameters are also supported in the TEST statement. Each equation specifies a linear hypothesis to be tested. If more than one equation is specified, the equations are separated by commas. Each test is written as a linear equation composed of constants and parameter names. Refer to parameters by the name of the corresponding regressor variable. Each name used in the equation must be a regressor in the preceding MODEL statement. Use the keyword INTERCEPT to refer to the intercept parameter in the model.","help":"TEST &lt;TYPE=&lt;F | WALD | LM&gt;... &gt; ","arguments":[{"name":"TYPE=","optional":true,"followsDelimiter":"/","description":"Specifies the test statistics to use.","help":"TYPE=F | WALD | LM | LR | ALL","type":"choice","arguments":[{"name":"F","followsDelimiter":"/","description":"Produces an F test. This option is supported for all models specified in MODEL statement.","type":"standalone"},{"name":"WALD","followsDelimiter":"/","description":"Produces a Wald test. This option is supported for all models specified in MODEL statement.","type":"standalone"},{"name":"LM","followsDelimiter":"/","description":"Produces a Lagrange multiplier test. This option is supported only when the GARCH= option is specified (for example, when there is a statement like MODEL Y = C D I / GARCH=(Q=2)).","type":"standalone"},{"name":"LR","followsDelimiter":"/","description":"Produces a likelihood ratio test. This option is supported only when the GARCH= option is specified (for example, when there is a statement like MODEL Y = C D I / GARCH=(Q=2)).","type":"standalone"},{"name":"ALL","followsDelimiter":"/","description":"Produces all tests applicable for a particular model. For non-GARCH-type models, only F and Wald tests are output. For all other models, all four tests (LR, LM, F, and Wald) are computed.","type":"standalone"}]}]}],"supportSiteInformation":{"docsetId":"etsug","docsetVersion":"latest","docsetTargetFile":"etsug_autoreg_toc.htm"}}