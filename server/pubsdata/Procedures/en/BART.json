{"name":"BART","statements":[{"name":"PROC BART","description":"invokes the procedure","help":"PROC BART <options>;                 \n\tBY  variables;                 \n\tCLASS  variable...<variable>;                 \n\tDISPLAY <table-list></ options>;                 \n\tDISPLAYOUT  table-spec-list </ options>;                 \n\tFREQ  variable;                 \n\tGAUSSPRIOR  prior-options </option > ;                 \n\tMARGIN  'name' variable='value' <...variable = 'value' ></ LABEL='label'>;                 \n\tMARGINDIFF  EVENT='margin-name' REF='margin-name' / <LABEL=label><NAME=name> ;                 \n\tMODEL  response=variables </ model-options>;                 \n\tOUTPUT  OUT=libref.data-table <SAMPLEPRED><ALPHA=number><COPYVARS=(variables)><keyword <=name>>...<keyword <=name>>;                 \n\tOUTPUTMARGIN  libref.data-table;                 \n\tPARTITION  partition-options;                 \n\tSAMPSUMMARY  OUT=libref.data-table <keyword=name>...<keyword=name>;                 \n\tSTORE <OUT=>libref.data-table;                 \n\tTREEPRIOR <prior-options>;                 ","arguments":[{"name":"ALPHA=","optional":true,"description":"specifies the level for the construction of equal-tail credible limits","help":"ALPHA=*number*","type":"value"},{"name":"APPLYROWORDER","optional":true,"description":"uses group and order information from the input data table","type":"standalone"},{"name":"ASSIGNMISSING=","optional":true,"description":"specifies how to handle missing values during the training and scoring phases","help":"ASSIGNMISSING=MACBIG | MACSMALL | NONE | SEPARATE","type":"choice","arguments":[{"name":"MACBIG","description":"during the training phase, treats missing values for continuous predictors as the largest machine value and treats missing values for categorical predictors as a separate level","type":"standalone"},{"name":"MACSMALL","description":"during the training phase, treats missing values for continuous predictors as the smallest machine value and treats missing values for categorical predictors as a separate level","type":"standalone"},{"name":"NONE","description":"during the training phase, excludes all observations that have a missing predictor value {SEPARATE} during the training phase, treats missing values for continuous predictors as a separate group and treats missing values for categorical predictors as a separate level","type":"standalone"},{"name":"SEPARATE","description":"","type":"standalone"}]},{"name":"BINMETHOD=","optional":true,"description":"specifies how to bin continuous input variables before training the model","help":"BINMETHOD=EVEN | QUANTILE","type":"choice","arguments":[{"name":"EVEN","description":"discretizes continuous input variables into fixed-width bins","type":"standalone"},{"name":"QUANTILE","description":"discretizes continuous input variables into bins according to their quantile","type":"standalone"}]},{"name":"DATA=","optional":true,"description":"names the input data table for PROC BART to use","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"LEAFSIGMAK=","optional":true,"description":"specifies the number to be used to determine the prior variance for the leaf parameters","help":"LEAFSIGMAK=*number*","type":"value"},{"name":"MINLEAFSIZE=","optional":true,"description":"specifies the minimum number of observations that each child of a split must contain in the training data in order for the split to be considered","help":"MINLEAFSIZE=*number*","type":"value"},{"name":"NBI=","optional":true,"description":"specifies the number of burn-in iterations to perform before the procedure starts to save samples for prediction","help":"NBI=*number*","type":"value"},{"name":"NBINS=","optional":true,"description":"specifies the number of bins to use for binning the continuous input variables","help":"NBINS=*number*","type":"value"},{"name":"NDISTCHAINS=","optional":true,"description":"specifies a distributed mode that divides the MCMC sampling in a grid environment","help":"NDISTCHAINS=*number*","type":"value"},{"name":"NMC=","optional":true,"description":"specifies the number of iterations in the main simulation loop","help":"NMC=*number*","type":"value"},{"name":"NMCDIST=","optional":true,"description":"specifies the number of MCMC iterations for each chain, excluding the burn-in iterations, when multiple chains are used","help":"NMCDIST=*number*","type":"value"},{"name":"NOCLPRINT","optional":true,"description":"suppresses the display of the \"Class Level Information\" table if you do not specify number","help":"NOCLPRINT&lt;=*number*&gt;","type":"standaloneOrValue"},{"name":"NTHIN=","optional":true,"description":"specifies the thinning rate of the simulation","help":"NTHIN=*number*","type":"value"},{"name":"NTREE=","optional":true,"description":"specifies the number of trees in a sample of the sum-of-trees ensemble","help":"NTREE=*number*","type":"value"},{"name":"ORDERSPLIT=","optional":true,"description":"specifies the minimum number of levels for which a categorical input uses splitting rules according to level ordering","help":"ORDERSPLIT=*number*","type":"value"},{"name":"RESTORE=","optional":true,"description":"specifies the name of the analytic store that contains a model that is fitted and stored from a previous analysis","help":"RESTORE=*libref.data-table*","type":"dataSet"},{"name":"SEED=","optional":true,"description":"specifies the initial seed for random number generation for model building","help":"SEED=*number*","type":"value"},{"name":"TRAININMEM","optional":true,"description":"stores data in memory when the model is trained","type":"standalone"}]},{"name":"BY","description":"produces separate analyses of observations in groups that are defined by the BY variables","help":"BY  variables;                                              "},{"name":"CLASS","description":"names the classification variables to be used as explanatory variables in the analysis","help":"CLASS  variable...&lt;variable&gt;;                                              "},{"name":"DISPLAY","description":"enables you to specify a list of display tables to display or exclude","help":"DISPLAY &lt;table-list&gt;&lt;/ options&gt;;                                              ","arguments":[{"name":"CASESENSITIVE","optional":true,"followsDelimiter":"/","description":"performs a case-sensitive comparison of table names in the table-list to display table names when tables are subsetted for display","type":"standalone"},{"name":"EXCLUDE","optional":true,"followsDelimiter":"/","description":"displays all display tables except those that you specify in the table-list","type":"standalone"},{"name":"EXCLUDEALL","optional":true,"followsDelimiter":"/","description":"suppresses display of all tables","type":"standalone"},{"name":"TRACE","optional":true,"followsDelimiter":"/","description":"displays the display table names, labels, and paths","type":"standalone"}]},{"name":"DISPLAYOUT","description":"enables you to create output tables from your displayed output","help":"DISPLAYOUT  table-spec-list &lt;/ options&gt;;                                              ","arguments":[{"name":"key=","placeholder":true,"description":"specifies key as the ODS table name, path, or partial pathname, and specifies value as the output table name.","help":"*key=value*","type":"value"},{"name":"key","placeholder":true,"description":"specifies key as the ODS table name and also as the output table name.","type":"value"},{"name":"INCLUDEALL","optional":true,"followsDelimiter":"/","description":"creates output tables for all display tables","type":"standalone"},{"name":"NOREPLACE","optional":true,"followsDelimiter":"/","description":"does not replace any existing output table of the same name","type":"standalone"},{"name":"REPEATED","optional":true,"followsDelimiter":"/","description":"replicates all output tables on all nodes","type":"standalone"}]},{"name":"FREQ","description":"identifies a numeric variable in the input data table that contains the frequency of occurrence of each observation","help":"FREQ  variable;                                              "},{"name":"GAUSSPRIOR","description":"enables you to specify the prior parameters for a model that is fitted to a normally distributed response variable","help":"GAUSSPRIOR  prior-options &lt;/option &gt; ;                                              ","arguments":[{"name":"VARAUTOCORR=","optional":true,"followsDelimiter":"/","description":"specifies the autocorrelation lags for the variance parameter","help":"VARAUTOCORR=*numeric-list*","type":"value"},{"name":"SIGMADF=","optional":true,"description":"specifies the degrees of freedom of the scaled inverse chi-square prior for the variance parameter","help":"SIGMADF=*number*","type":"value"},{"name":"SIGMALAMBDA=","optional":true,"description":"specifies the scale parameter of the scaled inverse chi-square prior for the variance parameter","help":"SIGMALAMBDA=*number*","type":"value"},{"name":"SIGMAQUANTILE=","optional":true,"description":"specifies the quantile level to be used to determine the scale parameter of the scaled inverse chi-square prior for the variance parameter","help":"SIGMAQUANTILE=*number*","type":"value"},{"name":"VAREST=","optional":true,"description":"specifies the initial value for the variance","help":"VAREST=*number*","type":"value"}]},{"name":"MARGIN","description":"computes a predictive margin","help":"MARGIN  'name' variable='value' &lt;...variable = 'value' &gt;&lt;/ LABEL='label'&gt;;                                              ","arguments":[{"name":"name","placeholder":true,"description":"identifies the predictive margin","type":"value"},{"name":"variable","placeholder":true,"description":"identifies an input variable and the value that it is set to when you compute the predictive margin","help":"*variable* = '*value*'","type":"value"},{"name":"label","optional":true,"placeholder":true,"followsDelimiter":"/","description":"labels the predictive margin in displayed outpt","type":"value"}]},{"name":"MARGINDIFF","description":"computes the difference between two predictive margins","help":"MARGINDIFF  EVENT='margin-name' REF='margin-name' / &lt;LABEL=label&gt;&lt;NAME=name&gt; ;                                              ","arguments":[{"name":"EVENT=","description":"specifies the event predictive margin","help":"EVENT=*margin-name*","type":"value"},{"name":"REF=","description":"specifies the reference predictive margin","help":"REF=*margin-name*","type":"value"},{"name":"LABEL=","optional":true,"followsDelimiter":"/","description":"labels the difference between predictive margins in output tables","help":"LABEL=*label*","type":"value"},{"name":"NAME=","optional":true,"followsDelimiter":"/","description":"names the difference in predictive margins","help":"NAME=*name*","type":"value"}]},{"name":"MODEL","description":"specifies the response (dependent or target) variable and the predictor (independent or explanatory) variables","help":"MODEL  response=variables &lt;/ model-options&gt;;                                              ","arguments":[{"name":"DIST=","optional":true,"followsDelimiter":"slash (/)","aliases":["DISTRIBUTION"],"description":"specifies the response distribution for the model","help":"DIST=BINARY | NORMAL","type":"choice"},{"name":"OFFSET=","optional":true,"followsDelimiter":"slash (/)","description":"specifies a variable to use as an offset for the binary response model","help":"OFFSET=*variable*","type":"value"}]},{"name":"OUTPUT","description":"creates a data table that contains observationwise statistics that PROC BART computes after fitting the model","help":"OUTPUT  OUT=libref.data-table &lt;SAMPLEPRED&gt;&lt;ALPHA=number&gt;&lt;COPYVARS=(variables)&gt;&lt;keyword &lt;=name&gt;&gt;...&lt;keyword &lt;=name&gt;&gt;;                                              ","arguments":[{"name":"OUT=","description":"names the output data table for PROC BART to use","help":"OUT=*libref.data-table*","type":"dataSet"},{"name":"ALPHA=","optional":true,"description":"specifies the level for the construction of equal-tail credible limits","help":"ALPHA=*number*","type":"value"},{"name":"COPYVAR=","optional":true,"aliases":["COPYVARS"],"description":"transfers one or more variables from the input data table to the output data table","help":"COPYVAR=*variable*","type":"value"},{"name":"INTO=","optional":true,"description":"names the variable that contains the level of the response into which an observation is classified for binary response models","help":"INTO&lt;(*cutpoint*)&gt;=&lt;*name*&gt;","type":"standaloneOrValue"},{"name":"LCL","optional":true,"description":"computes the equal-tail lower credible limit","help":"LCL&lt;=*name*&gt;","type":"standaloneOrValue"},{"name":"PRED","optional":true,"aliases":["PREDICTED","P"],"description":"computes predicted values for the response variable","help":"PRED&lt;=*name*&gt;","type":"standaloneOrValue"},{"name":"RESIDUAL","optional":true,"aliases":["RESID","R"],"description":"computes the raw residual, y-μ, where μ is the estimate of the predicted mean","help":"RESIDUAL&lt;=*name*&gt;","type":"standaloneOrValue"},{"name":"ROLE","optional":true,"description":"specifies the numeric variable that indicates the role that each observation plays in fitting the model","help":"ROLE&lt;=*name*&gt;","type":"standaloneOrValue"},{"name":"SAMPLEPRED","optional":true,"description":"produces predicted values and raw residuals for each posterior sample saved for prediction if you specify the PRED and RESIDUAL keywords","type":"standalone"},{"name":"UCL","optional":true,"description":"computes the equal-tail upper credible limit","help":"UCL&lt;=*name*&gt;","type":"standaloneOrValue"}]},{"name":"OUTPUTMARGIN","description":"creates an output data table that contains the predicted marginal means and differences for each posterior sample that is saved for prediction","help":"OUTPUTMARGIN  libref.data-table;                                              "},{"name":"PARTITION","description":"specifies how to logically partition observations in the input data set into disjoint subsets for model training and testing","help":"PARTITION  partition-options;                                              ","arguments":[{"name":"ROLE=","optional":true,"aliases":["ROLEVAR"],"description":"names the variable in the input data table whose values are used to assign roles to each observation","help":"ROLE=*variable*(&lt;TEST=*'value'*&gt;&lt;TRAIN=*'value'*&gt;)","type":"value","arguments":[{"name":"TEST=","description":"specifies the formatted alue of the variable that is used to assign observations to the test role","help":"TEST=*'value'*","type":"value"},{"name":"TRAIN=","description":"specifies the formatted alue of the variable that is used to assign observations to the training role","help":"TRAIN=*'value'*","type":"value"}]},{"name":"FRACTION","optional":true,"description":"randomly assigns specified proportions of the observations in the input data table to the roles","help":"FRACTION(&lt;TEST=*fraction*&gt;&lt;SEED=*number*&gt;)","type":"standaloneOrValue","arguments":[{"name":"TEST=","description":"specifies the fraction of observations assigned to the training role","help":"TEST=*fraction*","type":"value"},{"name":"SEED=","description":"specifies the number that is used to start the pseudorandom number generator","help":"SEED=*number*","type":"value"}]}]},{"name":"SAMPSUMMARY","description":"creates a data table that contains a summary of the sum-of-trees ensemble samples","help":"SAMPSUMMARY  OUT=libref.data-table &lt;keyword=name&gt;...&lt;keyword=name&gt;;                                              ","arguments":[{"name":"OUT=","description":"names the output data table for PROC BART to use","help":"OUT=*libref.data-table*","type":"dataSet"},{"name":"AVGNODE","optional":true,"description":"names the variable that contains the average number of nodes per tree in the sample","help":"AVGNODE&lt;=*name*&gt;","type":"standaloneOrValue"},{"name":"PROPACCEPTED","optional":true,"description":"names the variable that contains the proportion of accepted tree modifications for the sample","help":"PROPACCEPTED&lt;=*name*&gt;","type":"standaloneOrValue"},{"name":"SAMPSAVED","optional":true,"description":"names the variable that contains an indicator for whether the sample is saved for prediction","help":"SAMPSAVED&lt;=*name*&gt;","type":"standaloneOrValue"},{"name":"VARIANCE","optional":true,"description":"names the variable that contains the sampled variance for the normal response model","help":"VARIANCE&lt;=*name*&gt;","type":"standaloneOrValue"}]},{"name":"STORE","description":"saves the context and results of the statistical analysis","help":"STORE &lt;OUT=&gt;libref.data-table;                                              "},{"name":"TREEPRIOR","description":"enables you to specify the regularization prior for the sum-of-trees ensemble","help":"TREEPRIOR &lt;prior-options&gt;;                                              ","arguments":[{"name":"DEPTHBASE=","optional":true,"description":"specifies the base probability for splitting an internal node as a function of its depth from the root","help":"DEPTHBASE=*number*","type":"value"},{"name":"DEPTHPOWER=","optional":true,"description":"specifies the power parameter to be used to compute the probability of splitting an internal node as a function of its depth from the root","help":"DEPTHPOWER=*number*","type":"value"},{"name":"PPRUNE=","optional":true,"description":"specifies the probability of sampling the operation of pruning a terminal node for the tree sampling algorithm","help":"PPRUNE=*number*","type":"value"},{"name":"PSPLIT=","optional":true,"description":"specifies the probability of sampling the operation of splitting a terminal node for the tree sampling algorithm","help":"PSPLIT=*number*","type":"value"}]}],"supportSiteInformation":{"docsetId":"casstat","docsetVersion":"latest","docsetTargetFile":"casstat_bart_toc.htm"}}