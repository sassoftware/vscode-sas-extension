{"name":"CALIS","statements":[{"name":"PROC CALIS","description":"The CALIS procedure deals with structural equation modeling, an important statistical tool in social and behavioral sciences. Structural equations express relationships among a system of variables that can be either observed variables (manifest variables) or unobserved hypothetical variables (latent variables). You can use the CALIS procedure to estimate parameters and test hypotheses for constrained and unconstrained problems in various situations, including but not limited to the following: o exploratory and confirmatory factor analysis of any order o linear measurement-error models or regression with errors in variables o multiple and multivariate linear regression o multiple-group structural equation modeling with mean and covariance structures o path analysis and causal modeling o simultaneous equation models with reciprocal causation o structured covariance and mean matrices in various forms","help":"PROC CALIS <ALPHAECV=α> <ALPHARMS=α> <ASINGULAR | ASING=r> <ASYCOV=BIASED | UNBIASED | CORR> <AUGMENT> <BASEFIT | INBASEFIT=SAS-data-set> <BASEFUNC=r(<DF=>i) or BASEFUNC(<DF=>i)=r> <BIASKUR> <CHICORRECT=EQVARCOV|COMPSYM | CIRCULARITY|CIRCULAR|TYPEH|SPHERICITY | EQCOVMAT> <CLOSEFIT=p> <CORRELATION> <COVARIANCE> <COVSING=r> <DATA=SAS-data-set> <DEMPHAS=r | DE=r> <DFREDUCE=i | DFRED=i> <EDF=n | DFE=n> <EFFPART | PARTEFF | TOTEFF | TE> <EXTENDPATH> <FCONV=r | FTOL=r> <FDCODE> <G4=i> <GCONV=r | GTOL=r> <HESSALG=1 | 2 | 3... > <INEST | INVAR | ESTDATA=SAS-data-set> <INMODEL | INRAM=SAS-data-set> <INSTEP=r> <INWGT | INWEIGHT<(INV)>=SAS-data-set> <INWGTINV> <KURTOSIS> <LINESEARCH=1 | 2 | 3... > <LSPRECISION=r | LSP=r | SPRECISION=r | SP=r> <MAXFUNC=i | MAXFU=i> <MAXITER= | MAXIT=i <n>> <MEANSTR> <METHOD=FIML | ML|M|MAX | GLS|G... > <MODIFICATION> <MSINGULAR= | MSING=r> <NOADJDF> <NOBS=nobs> <NODIAG> <NOINDEXTYPE> <NOINT> <NOMEANSTR> <NOMOD> <NOORDERSPEC> <NOPARMNAME> <NOPRINT> <NOSTAND> <NOSTDERR> <OMETHOD=CONGRA | DBLDOG | LEVMAR... > <ORDERALL> <ORDERGROUPS> <ORDERMODELS> <ORDERSPEC> <OUTEST= SAS-data-set> <OUTFIT=SAS-data-set> <OUTJAC> <OUTMODEL= | OUTRAM=SAS-data-set> <OUTSTAT=SAS-data-set> <OUTWGT=SAS-data-set> <PALL> <PARMNAME> <PCORR> <PCOVES> <PDETERM> <PESTIM> <PINITIAL> <PJACPAT> <PLATCOV> <PLOTS=ALL | RESIDUALS | NONE> <PREDET> <PRIMAT> <PRINT> <PRIVEC> <PSHORT> <PSUMMARY> <PWEIGHT> <RADIUS=r> <RANDOM=i> <RDF= | DFR=n> <READADDPARM> <RESIDUAL=NORM | VARSTAND | ASYSTAND> <RIDGE<=r>> <SALPHA=r> <SIMPLE> <SINGULAR= | SING=r> <SLMW=r> <SPRECISION= | SP=r> <START=r> <STDERR> <UCORR> <UCOV> <UPDATE=PB | FR | PR... > <VARDEF=DF | N | WDF... > <VSINGULAR= | VSING=r> <WPENALTY= | WPEN=r> <WRIDGE=r>;     \n\tABORT <ABEND> <CANCEL> <CANCEL FILE> ...;     \n\tBOUNDS constraint <, constraint ...> ;     \n\tBY <DESCENDING> <NOTSORTED> ; \n   \n\tCALL routine(parameter-1<, ...parameter-n>); \n   \n\tCOSAN <VAR=variable-list> ; \n   \n\tCOV assignment <, assignment ...> ; \n   \n\tDELETE;     \n\tDETERM <LABEL | NAME = name> ;     \n\tDO <OVER> <> <> ...; \n   \n\tEFFPART effect < , effect> ; \n   \n\tELSE <DO> <IF> <THEN> ...; \n   \n\tEND;     \n\tFACTOR <COMPONENT> <GAMMA=p> <HEYWOOD> ...; \n   \n\tFITINDEX <ALPHAECV=α> <ALPHARMS=α> <CHICORRECT=<EQVARCOV | CIRCULARITY | EQCOVMAT>> ...; \n   \n\tFREQ variable;     \n\tGOTO label;     \n\tGROUP <DATA=SAS-data-set> <INWGT<(INV)>=SAS-data-set> <LABEL= | NAME=name> ...;     \n\tIF <DO> <THEN> <WHEN> ...; \n   \n\tLINCON constraint <, constraint ...> ; \n   \n\tLINEQS equation <, equation ...> ; \n   \n\tLINK statement-label;     \n\tLISMOD <var_lists> ;     \n\tLMTESTS <DEFAULT> <MAXRANK> <NODEFAULT> ...; \n   \n\tMATRIX matrix-name <location> = list <, location = list ...> ;     \n\tMEAN assignment <, assignment ...> ;     \n\tMODEL <CORRELATION> <GROUP= | GROUPS=int-list> <LABEL= | NAME=name> ...; \n   \n\tMSTRUCT <VAR=> ; \n   \n\tNLINCON | NLC constraint <, constraint ...> ;     \n\tNLOPTIONS <ABSCONV= | ABSTOL=r> <ABSFCONV=r <n> | ABSFTOL=r<n>> <ABSGCONV= | ABSGTOL=r <n>> ...;     \n\t; \n   \n\tOUTFILES | OUTFILE file_option <file_option ...> ;     \n\tPARAMETERS | PARMS parameter(s) << = > number(s) >;     \n\tPARTIAL variables ;     \n\tPATH path < , path ...> ; \n   \n\tPCOV assignment <, assignment ...> ; \n   \n\tPUT <_PAGE_> ;  \n  \n\tPVAR assignment < , assignment ...> ; \n   \n\tRAM <VAR=variable-list | variable-list=number-list <,;     \n\tREFMODEL <ALLNEWPARMS> <PARM_PREFIX=prefix> <PARM_SUFFIX=suffix> ...; \n   \n\tRENAMEPARM assignment <, assignment ...> ; \n   \n\tRETURN;     \n\t; \n   \n\tSIMTESTS sim_test <sim_test ...> ; \n   \n\tSTD assignment <, assignment ...> ; \n   \n\tSTOP ;     \n\tSTRUCTEQ variables </ label> ;     \n\tTESTFUNC functions ;     \n\tVAR;     \n\tVARIANCE assignment <, assignment ...> ;     \n\tVARNAMES | VNAMES assignment <, assignment ...> ;     \n\tWEIGHT variable;     \n\tWHEN <DO> ; ","arguments":[{"name":"ALPHAECV=","optional":true,"description":"Specifies a (1 - α)100% confidence interval, 0 ≤ α ≤ 1, for the Browne and Cudeck (1993) expected cross validation index (ECVI). The default value is α=0.1, which corresponds to a 90% confidence interval for the ECVI.","type":"value"},{"name":"ALPHARMS=","optional":true,"description":"Specifies a (1 - α)100% confidence interval, 0 ≤ α ≤ 1, for the Steiger and Lind (1980) root mean squared error of approximation (RMSEA) coefficient. The default value is α=0.1, which corresponds to a 90% confidence interval for the RMSEA.","type":"value"},{"name":"ASINGULAR=","optional":true,"aliases":["ASING="],"description":"Specifies an absolute singularity criterion r, r > 0, for the inversion of the information matrix, which is needed to compute the covariance matrix.","type":"value"},{"name":"ASYCOV=","optional":true,"aliases":["ASC="],"description":"Specifies the formula for asymptotic covariances used in the weight matrix W for WLS and DWLS estimation. The ASYCOV option is effective only if METHOD=WLS or METHOD=DWLS and no INWGT= input data set is specified.","help":"ASYCOV=BIASED | UNBIASED | CORR","type":"choice","arguments":[{"name":"BIASED","description":"Browne’s (1984) formula (3.4) biased asymptotic covariance estimates; the resulting weight matrix is at least positive semidefinite. This is the default for analyzing a covariance matrix.","type":"standalone"},{"name":"UNBIASED","description":"Browne’s (1984) formula (3.8) asymptotic covariance estimates corrected for bias; the resulting weight matrix can be indefinite (that is, can have negative eigenvalues), especially for small N.","type":"standalone"}]},{"name":"AUGMENT","optional":true,"aliases":["AUG"],"description":"[Obsolete] Analyzes the augmented correlation or covariance matrix.","type":"standalone"},{"name":"BASEFIT=","optional":true,"aliases":["INBASEFIT="],"description":"Inputs the SAS-data-set that contains the fit information of the baseline model of your choice. This customized baseline model replaces the default uncorrelatedness model for computing several fit indices of your target model. Typically, you create the BASEFIT= data set by using the OUTFIT= option in a previous PROC CALIS fitting of your customized baseline model. Using the BASEFIT= option assumes that you fit your customized baseline model and your target model with the same data, number of groups (for multiple-group analysis), and estimation method. Typically, your baseline model should be more restrictive (or have fewer parameters) than your target model.","help":"BASEFIT=*SAS-data-set*","type":"dataSet"},{"name":"BASEFUNC=","optional":true,"description":"Inputs the fit function value r and the degrees of freedom i of the baseline model of your choice. This customized baseline model replaces the default uncorrelatedness model for computing several fit indices of your target model. To use this option, you must first fit your customized baseline model and then use this option to input the baseline model fit information when you fit your target model.","type":"value"},{"name":"BIASKUR","optional":true,"description":"Computes univariate skewness and kurtosis by formulas uncorrected for bias.","type":"standalone"},{"name":"CHICORRECT=","optional":true,"aliases":["CHICORR="],"description":"Specifies a correction factor c for the chi-square statistics for model fit. You can specify a name for a built-in correction factor or a value between 0 and 1 as the CHICORRECT= value.","help":"CHICORRECT=EQVARCOV | CIRCULARITY|CIRCULAR|TYPEH|SPHERICITY | EQCOVMAT","type":"choice","arguments":[{"name":"EQVARCOV","aliases":["COMPSYM"],"description":"Specifies the correction factor due to Box (1949) for testing equal variances and equal covariances in a covariance matrix.","type":"standalone"},{"name":"CIRCULARITY","aliases":["CIRCULAR","TYPEH","SPHERICITY"],"description":"Specifies the correction factor due to Mauchly (1940) for testing circularity or Huynh and Feldt Type H matrix.","type":"standalone"},{"name":"EQCOVMAT","description":"Specifies the correction factor due to Box (1949) for testing equality of covariance matrices.","type":"standalone"}]},{"name":"CLOSEFIT=","optional":true,"description":"Defines the criterion value p for indicating a close fit. The smaller the better fit. The default value for close fit is 0.05.","help":"CLOSEFIT=*p*","type":"value"},{"name":"CORRELATION","optional":true,"aliases":["CORR"],"description":"Analyzes the correlation matrix, instead of the default covariance matrix. Browne and Shapiro’s (1986) formula (3.2), which is identical to DeLeeuw’s (1983) formulas (2, 3, 4) the asymptotic variances of the diagonal elements are set to the reciprocal of the value r specified by the WPENALTY= option (default: r=100). This formula is the default for analyzing a correlation matrix.","type":"standalone"},{"name":"COVARIANCE","optional":true,"aliases":["COV"],"description":"Analyzes the covariance matrix. Because this is also the default analysis in PROC CALIS, you can simply omit this option when you analyze covariance rather than correlation matrices.","type":"standalone"},{"name":"COVSING=","optional":true,"description":"Specifies a nonnegative threshold r, which determines whether the eigenvalues of the information matrix are considered to be zero.","help":"COVSING=*r*","type":"value"},{"name":"DATA=","optional":true,"description":"Specifies an input data set that can be an ordinary SAS data set or a specially structured TYPE=CORR, TYPE=COV, TYPE=UCORR, TYPE=UCOV, TYPE=SSCP, or TYPE=FACTOR SAS data set.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DEMPHAS=","optional":true,"aliases":["DE="],"description":"Changes the initial values of all variance parameters by the relationship","type":"value"},{"name":"DFREDUCE=","optional":true,"aliases":["DFRED="],"description":"Reduces the degrees of freedom of the model fit χ² test by i. In general, the number of degrees of freedom is the total number of nonredundant elements in all moment matrices minus the number of parameters, t. Because negative values of i are allowed, you can also increase the number of degrees of freedom by using this option.","type":"value"},{"name":"EDF=","optional":true,"aliases":["DFE="],"description":"Makes the effective number of observations n+i. You can also use the NOBS= option to specify the number of observations.","type":"value"},{"name":"EFFPART","optional":true,"aliases":["PARTEFF","TOTEFF","TE"],"description":"Computes and displays total, direct, and indirect effects for the unstandardized and standardized estimation results.","type":"standalone"},{"name":"EXTENDPATH","optional":true,"aliases":["GENPATH"],"description":"Displays the extended path estimates such as the variances, covariances, means, and intercepts in the table that contains the ordinary path effect (coefficient) estimates. This option applies to the PATH model only.","type":"standalone"},{"name":"FCONV=","optional":true,"aliases":["FTOL="],"description":"Specifies the relative function convergence criterion.","type":"value"},{"name":"FDCODE","optional":true,"description":"[Obsolete] Replaces the analytic derivatives of the programming statements by numeric derivatives (finite-difference approximations).","type":"standalone"},{"name":"G4=","optional":true,"description":"Specifies the algorithm to compute the approximate covariance matrix of parameter estimates used for computing the approximate standard errors and modification indices when the information matrix is singular.","help":"G4=*i*","type":"value"},{"name":"GCONV=","optional":true,"aliases":["GTOL="],"description":"Specifies the relative gradient convergence criterion.","type":"value"},{"name":"HESSALG=","optional":true,"aliases":["HA="],"description":"[Obsolete] Specifies the algorithm used to compute the (approximate) Hessian matrix when TECHNIQUE=LEVMAR and NEWRAP, to compute approximate standard errors of the parameter estimates, and to compute Lagrange multipliers.","help":"HESSALG=1 | 2 | 3 | 4 | 5 | 6 | 11","type":"choice","arguments":[{"name":"1","description":"Specifies the analytic formulas group of algorithms.","type":"standalone"},{"name":"2","description":"Specifies the analytic formulas group of algorithms.","type":"standalone"},{"name":"3","description":"Specifies the analytic formulas group of algorithms.","type":"standalone"},{"name":"4","description":"Specifies the analytic formulas group of algorithms.","type":"standalone"},{"name":"5","description":"Specifies the finite-difference approximation group of algorithms.","type":"standalone"},{"name":"6","description":"Specifies the finite-difference approximation group of algorithms.","type":"standalone"},{"name":"11","description":"Specifies the analytic formulas or sparse storage group of algorithms.","type":"standalone"}]},{"name":"INEST=","optional":true,"aliases":["INVAR=","ESTDATA="],"description":"Specifies an input data set that contains initial estimates for the parameters used in the optimization process and can also contain boundary and general linear constraints on the parameters.","type":"value"},{"name":"INMODEL=","optional":true,"aliases":["INRAM="],"description":"Specifies an input data set that contains information about the analysis model. A typical use of the INMODEL= option is when you run an analysis with its model specifications saved as an OUTMODEL= data set from a previous PROC CALIS run. Instead of specifying the main or subsidiary model specification statements in the new run, you use the INMODEL= option to input the model specification saved from the previous run.","type":"value"},{"name":"INSTEP=","optional":true,"aliases":["SALPHA="],"description":"For highly nonlinear objective functions, such as the EXP function, the default initial radius of the trust-region algorithms (TRUREG, DBLDOG, and LEVMAR) or the default step length of the line-search algorithms can produce arithmetic overflows. If an arithmetic overflow occurs, specify decreasing values of r such as INSTEP=1E-1, INSTEP=1E-2, INSTEP=1E-4, and so on, until the iteration starts successfully.","help":"INSTEP=*r*","type":"value"},{"name":"INWGT=","optional":true,"aliases":["INWEIGHT="],"description":"Specifies an input data set that contains the weight matrix W used in generalized least squares (GLS), weighted least squares (WLS, ADF), or diagonally weighted least squares (DWLS) estimation.","help":"INWGT=INV","type":"choice","arguments":[{"name":"INV","type":"standalone"}]},{"name":"INWGTINV","optional":true,"description":"Specifies that the INWGT= data set contains the inverse of the weight matrix, rather than the weight matrix itself. This option is effective only with an input weight matrix specified in the INWGT= data set and with the generalized least squares (GLS), weighted least squares (WLS or ADF), or diagonally weighted least squares (DWLS) estimation.","type":"standalone"},{"name":"KURTOSIS","optional":true,"aliases":["KU"],"description":"Computes and displays univariate kurtosis and skewness, various coefficients of multivariate kurtosis, and the numbers of observations that contribute most to the normalized multivariate kurtosis.","type":"standalone"},{"name":"LINESEARCH=","optional":true,"aliases":["LIS=","SMETHOD=","SM="],"description":"Specifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques.","help":"LINESEARCH=1 | 2 | 3 | 4 | 5 | 6 | 7 | 8","type":"choice","arguments":[{"name":"1","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is similar to one used by the Harwell subroutine library.","type":"standalone"},{"name":"2","description":"Specifies a line-search method that needs more function calls than gradient calls for quadratic and cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"3","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"4","description":"Specifies a line-search method that needs the same number of function and gradient calls for stepwise extrapolation and cubic interpolation","type":"standalone"},{"name":"5","description":"Specifies a line-search method that is a modified version of LIS=4.","type":"standalone"},{"name":"6","description":"Specifies golden section line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"7","description":"Specifies bisection line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"8","description":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for linear approximation.","type":"standalone"}]},{"name":"LSPRECISION=","optional":true,"aliases":["LSP=","SPRECISION=","SP="],"description":"Specifies the degree of accuracy that should be obtained by the line-search algorithms LIS=2 and LIS=3. The default LSPRECISION= values are:","type":"value"},{"name":"MAXFUNC=","optional":true,"aliases":["MAXFU="],"description":"Specifies the maximum number i of iterations in the optimization process. The default values are:","type":"value"},{"name":"MAXITER=","optional":true,"aliases":["MAXIT="],"description":"Specifies the maximum number i of iterations in the optimization process. The default values are:","type":"value"},{"name":"MEANSTR","optional":true,"description":"Invokes the analysis of mean structures. By default, no mean structures are analyzed. You can specify the MEANSTR option in both the PROC CALIS and the MODEL statements. When this option is specified in the PROC CALIS statement, it propagates to all models. When this option is specified in the MODEL statement, it applies only to the local model.","type":"standalone"},{"name":"METHOD=","optional":true,"aliases":["MET="],"description":"Specifies the method of parameter estimation. The default is METHOD=ML.","help":"METHOD=FIML | ML | GLS | WLS | DWL | ULS | LSFIML | LSML | LSGLS | LSWLS | LSDWLS | NONE","type":"choice","arguments":[{"name":"FIML","description":"Performs full information maximum-likelihood parameter estimation for data with missing values. This method assumes raw input data sets. Exploratory factor analysis and model modification indices are not available with FIML in this version of PROC CALIS. If METHOD=FIML is specified with exploratory factor models, ML is used instead.","type":"standalone"},{"name":"ML","aliases":["M","MAX"],"description":"Performs normal-theory maximum likelihood parameter estimation. The ML method requires a nonsingular covariance or correlation matrix. This is the default method.","type":"standalone"},{"name":"GLS","aliases":["G"],"description":"Performs generalized least squares parameter estimation. If no INWGT= data set is specified, the GLS method uses the inverse sample covariance or correlation matrix as weight matrix W. Therefore, METHOD=GLS requires a nonsingular covariance or correlation matrix.","type":"standalone"},{"name":"WLS","aliases":["W","ADF"],"description":"Performs weighted least squares parameter estimation. If no INWGT= data set is specified, the WLS method uses the inverse matrix of estimated asymptotic covariances of the sample covariance or correlation matrix as the weight matrix W.","type":"standalone"},{"name":"DWLS","aliases":["D"],"description":"Performs diagonally weighted least squares parameter estimation. If no INWGT= data set is specified, the DWLS method uses the inverse diagonal matrix of asymptotic variances of the input sample covariance or correlation matrix as the weight matrix W.","type":"standalone"},{"name":"ULS","aliases":["LS","U"],"description":"Performs unweighted least squares parameter estimation.","type":"standalone"},{"name":"LSFIML","description":"Performs unweighted least squares followed by full information maximum-likelihood parameter estimation.","type":"standalone"},{"name":"LSML","aliases":["LSM","LSMAX"],"description":"Performs unweighted least squares followed by normal-theory maximum likelihood parameter estimation.","type":"standalone"},{"name":"LSGLS","aliases":["LSG"],"description":"Performs unweighted least squares followed by generalized least squares parameter estimation.","type":"standalone"},{"name":"LSWLS","aliases":["LSW","LSADF"],"description":"Performs unweighted least squares followed by weighted least squares parameter estimation.","type":"standalone"},{"name":"LSDWLS","aliases":["LSD"],"description":"Performs unweighted least squares followed by diagonally weighted least squares parameter estimation.","type":"standalone"},{"name":"NONE","aliases":["NO"],"description":"Uses no estimation method. This option is suitable for checking the validity of the input information and for displaying the model matrices and initial values.","type":"standalone"}]},{"name":"MODIFICATION","optional":true,"aliases":["MOD"],"description":"Computes and displays Lagrange multiplier test indices for constant parameter constraints, equality parameter constraints, and active boundary constraints, as well as univariate and multivariate Wald test indices.","type":"standalone"},{"name":"MSINGULAR=","optional":true,"aliases":["MSING="],"description":"Specifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, which is needed to compute the covariance matrix.","type":"value"},{"name":"NOADJDF","optional":true,"description":"Turns off the automatic adjustment of degrees of freedom when there are active constraints in the analysis.","type":"standalone"},{"name":"NOBS=","optional":true,"description":"Specifies the number of observations. If the DATA= input data set is a raw data set, nobs is defined by default to be the number of observations in the raw data set.","help":"NOBS=*nobs*","type":"value"},{"name":"NODIAG","optional":true,"aliases":["NODI"],"description":"[Obsolete] Omits the diagonal elements of the analyzed correlation or covariance matrix from the fit function.","type":"standalone"},{"name":"NOINDEXTYPE","optional":true,"description":"Disables the display of index types in the fit summary table.","type":"standalone"},{"name":"NOINT","optional":true,"description":"[Obsolete] Specifies that no intercept be used in computing covariances and correlations; that is, covariances or correlations are not corrected for the mean.","type":"standalone"},{"name":"NOMEANSTR","optional":true,"description":"Deactivates the inherited MEANSTR option for the analysis of mean structures. You can specify the NOMEANSTR option in both the PROC CALIS and the MODEL statements. When this option is specified in the PROC CALIS statement, it does not have any apparent effect because by default the mean structures are not analyzed.","type":"standalone"},{"name":"NOMOD","optional":true,"description":"Does not compute modification indices. The NOMOD option is useful in connection with the PALL option because it saves computing time.","type":"standalone"},{"name":"NOORDERSPEC","optional":true,"description":"Prints the model results in the order they appear in the input specifications.","type":"standalone"},{"name":"NOPARMNAME","optional":true,"description":"Suppresses the printing of parameter names in the model results.","type":"standalone"},{"name":"NOPRINT","optional":true,"aliases":["NOP"],"description":"Suppresses the displayed output. Note that this option temporarily disables the Output Delivery System (ODS).","type":"standalone"},{"name":"NOSTAND","optional":true,"description":"Suppresses the printing of standardized results. The default is to print the standardized results.","type":"standalone"},{"name":"NOSTDERR","optional":true,"aliases":["NOSE"],"description":"Suppresses the printing of the standard error estimates. Standard errors are not computed for unweighted least squares (ULS) or diagonally weighted least squares (DWLS) estimation. In general, standard errors are computed even if the STDERR display option is not used (for file output).","type":"standalone"},{"name":"OMETHOD=","optional":true,"aliases":["OM=","TECHNIQUE=","TECH="],"description":"Specifies the optimization method or technique.","help":"OMETHOD=CONGRA | DBLDOG | LEVMAR | NEWRAP | NRRIDG | QUANEW | TRUREG | NONE","type":"choice","arguments":[{"name":"CONGRA","description":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"DBLDOG","description":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation of the Cholesky factor of the Hessian.","type":"standalone"},{"name":"LEVMAR","description":"Performs a highly stable but, for large problems, memory- and time-consuming Levenberg-Marquardt optimization technique, a slightly improved variant of the Moré (1978) implementation. This is the default optimization technique if there are fewer than 40 parameters to estimate.","type":"standalone"},{"name":"NEWRAP","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. The algorithm combines a line-search algorithm with ridging, and it can be modified with the LINESEARCH= option.","type":"standalone"},{"name":"NRRIDG","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. This algorithm does not perform a line search.","type":"standalone"},{"name":"QUANEW","description":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"TRUREG","description":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region optimization technique. The algorithm is implemented similar to Gay (1983) and Moré and Sorensen (1983).","type":"standalone"},{"name":"NONE","description":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also computes and displays residuals and goodness of fit statistics.","type":"standalone"}]},{"name":"ORDERALL","optional":true,"description":"Prints the model and group results in the order of the model or group numbers, starting from the smallest number.","type":"standalone"},{"name":"ORDERGROUPS","optional":true,"aliases":["ORDERG"],"description":"Prints the group results in the order of the group numbers, starting from the smallest number.","type":"standalone"},{"name":"ORDERMODELS","optional":true,"aliases":["ORDERMO"],"description":"Prints the model results in the order of the model numbers, starting from the smallest number.","type":"standalone"},{"name":"ORDERSPEC","optional":true,"description":"Arranges some model results by the types of parameters.","type":"standalone"},{"name":"OUTEST=","optional":true,"description":"Creates an output data set that contains the parameter estimates, their gradient, Hessian matrix, and boundary and linear constraints. For METHOD=ML, METHOD=GLS, and METHOD=WLS, the OUTEST= data set also contains the information matrix, the approximate covariance matrix of the parameter estimates ((generalized) inverse of information matrix), and approximate standard errors.","type":"value"},{"name":"OUTFIT=","optional":true,"description":"Creates an output data set that contains the values of the fit indices.","help":"OUTFIT=*SAS-data-set*","type":"dataSet"},{"name":"OUTJAC","optional":true,"description":"[Obsolete] Writes the Jacobian matrix, if it has been computed, to the OUTEST= data set. This is useful when the information and Jacobian matrices need to be computed for other analyses.","type":"standalone"},{"name":"OUTMODEL=","optional":true,"aliases":["OUTRAM="],"description":"Creates an output data set that contains the model information for the analysis, the parameter estimates, and their standard errors.","type":"value"},{"name":"OUTSTAT=","optional":true,"description":"Creates an output data set containing the BY-group variables, the analyzed covariance or correlation matrices, and the predicted and residual covariance or correlation matrices of the analysis.","help":"OUTSTAT=*SAS-data-set*","type":"dataSet"},{"name":"OUTWGT=","optional":true,"aliases":["OUTWEIGHT="],"description":"Creates an output data set that contains the elements of the weight matrix W or its inverse Wˉ¹ used in the estimation process.","help":"OUTWGT=*SAS-data-set*","type":"dataSet"},{"name":"PALL","optional":true,"aliases":["ALL"],"description":"Displays all optional output except the output generated by the PCOVES and PDETERM, options. Caution: The PALL option includes the very expensive computation of the modification indices.","type":"standalone"},{"name":"PARMNAME","optional":true,"description":"Prints the parameter names in the model results.","type":"standalone"},{"name":"PCORR","optional":true,"description":"Displays the covariance or correlation matrix that is analyzed and the predicted model covariance or correlation matrix.","type":"standalone"},{"name":"PCOVES","optional":true,"aliases":["PCE"],"description":"Displays the following: o the information matrix o the approximate covariance matrix of the parameter estimates (generalized inverse of the information matrix)","type":"standalone"},{"name":"PDETERM","optional":true,"aliases":["PDE"],"description":"Displays three coefficients of determination: the determination of all equations (DETAE), the determination of the structural equations (DETSE), and the determination of the manifest variable equations (DETMV).","type":"standalone"},{"name":"PESTIM","optional":true,"aliases":["PES"],"description":"Displays the parameter estimates. In some cases, this includes displaying the standard errors and values.","type":"standalone"},{"name":"PINITIAL","optional":true,"aliases":["PIN"],"description":"Displays the model specification with initial estimates and the vector of initial values.","type":"standalone"},{"name":"PJACPAT","optional":true,"aliases":["PJP"],"description":"[Obsolete] Displays the structure of variable and constant elements of the Jacobian matrix. This displayed output is not included in the output generated by the PALL option.","type":"standalone"},{"name":"PLATCOV","optional":true,"aliases":["PLATMOM","PLC"],"description":"Displays the following: o the estimates of the covariances among the latent variables o the estimates of the covariances between latent and manifest variables o the estimates of the latent variable means for mean structure analysis","type":"standalone"},{"name":"PLOTS=","optional":true,"aliases":["PLOT="],"description":"Syntax: PLOTS | PLOT <= plot-request> | PLOTS | PLOT <= ( plot-request < ...plot-request> )","help":"PLOTS=ALL | RESIDUALS | NONE","type":"choice","arguments":[{"name":"ALL","description":"Plots all available plots","type":"standalone"},{"name":"RESIDUALS","description":"Plots distribution of residuals","type":"standalone"},{"name":"NONE","description":"Plots no ODS graphical plots","type":"standalone"}]},{"name":"PREDET","optional":true,"aliases":["PRE"],"description":"[Obsolete] Displays the pattern of variable and constant elements of the predicted moment matrix that is predetermined by the analysis model.","type":"standalone"},{"name":"PRIMAT","optional":true,"aliases":["PMAT"],"description":"Displays parameter estimates, approximate standard errors, and t values in matrix form if you specify the analysis model in the RAM or LINEQS statement.","type":"standalone"},{"name":"PRINT","optional":true,"aliases":["PRI"],"description":"Adds the options KURTOSIS, RESIDUAL, PLATCOV, and TOTEFF to the default output.","type":"standalone"},{"name":"PRIVEC","optional":true,"aliases":["PVEC"],"description":"[Obsolete] Displays parameter estimates, approximate standard errors, the gradient, and t values in vector form. The values are displayed with more decimal places. This displayed output is not included in the output generated by the PALL option.","type":"standalone"},{"name":"PSHORT","optional":true,"aliases":["SHORT","PSH"],"description":"Excludes the output produced by the PINITIAL, SIMPLE, and STDERR options from the default output.","type":"standalone"},{"name":"PSUMMARY","optional":true,"aliases":["SUMMARY","PSUM"],"description":"Displays the fit assessment table only.","type":"standalone"},{"name":"PWEIGHT","optional":true,"aliases":["PW"],"description":"Displays the weight matrix W used in the estimation. The weight matrix is displayed after the WRIDGE= and WPENALTY= options are applied to it.","type":"standalone"},{"name":"RADIUS=","optional":true,"description":"Is an alias for the INSTEP= option for Levenberg-Marquardt minimization.","help":"RADIUS=*r*","type":"value"},{"name":"RANDOM=","optional":true,"description":"Specifies a positive integer as a seed value for the pseudo-random number generator to generate initial values for the parameter estimates for which no other initial value assignments in the model definitions are made.","help":"RANDOM=*i*","type":"value"},{"name":"RDF=","optional":true,"aliases":["DFR="],"description":"Makes the effective number of observations the actual number of observations minus the RDF= value.","type":"value"},{"name":"READADDPARM","optional":true,"aliases":["READADD"],"description":"Inputs the generated default parameters (for example, observations with _TYPE_=ADDPCOV, ADDMEAN, or ADDPVAR) in the INMODEL= data set as if they were part of the original model specification.","type":"standalone"},{"name":"RESIDUAL=","optional":true,"aliases":["RES="],"description":"Displays the raw and normalized residual covariance matrices, the rank order of the largest residuals, and the bar charts of residual tallies. This information is displayed by default when you specify the PRINT option. Use the RESIDUAL(TALLY) or RESIDUAL(TALLY)= option if you don't want SAS to replace bar charts of residual tallies with graphical histograms showing residual distributions.","help":"RESIDUAL=NORM | VARSTAND | ASYSTAND","type":"choice","arguments":[{"name":"NORM","description":"Normalized residuals","type":"standalone"},{"name":"VARSTAND","description":"Variance standardized residuals","type":"standalone"},{"name":"ASYSTAND","description":"Asymptotically standardized residuals","type":"standalone"}]},{"name":"RIDGE=","optional":true,"description":"Defines a ridge factor r for the diagonal of the moment matrix S that is analyzed. If you do not specify r in the RIDGE option, PROC CALIS tries to ridge the covariance or correlation matrix S so that the smallest eigenvalue is about 10⁻³.","type":"value"},{"name":"SIMPLE","optional":true,"description":"Displays means, standard deviations, skewness, and univariate kurtosis if available.","type":"standalone"},{"name":"SINGULAR=","optional":true,"aliases":["SING="],"description":"Specifies the singularity criterion r, 0 < r < 1, used, for example, for matrix inversion.","type":"value"},{"name":"SLMW=","optional":true,"description":"Specifies the probability limit used for computing the stepwise multivariate Wald test. The process stops when the univariate probability is smaller than r. The default value is r=0.05.","help":"SLMW=*r*","type":"value"},{"name":"START=","optional":true,"description":"Specifies initial estimates for parameters as multiples of the r value. In all CALIS models, you can supply initial estimates individually as parenthesized values after each parameter name. Unspecified initial estimates are usually computed by various reasonable initial estimation methods in PROC CALIS.","help":"START=*r*","type":"value"},{"name":"STDERR","optional":true,"aliases":["SE"],"description":"Displays approximate standard errors if estimation methods other than unweighted least squares (ULS) or diagonally weighted least squares (DWLS) are used (and the NOSTDERR option is not specified).","type":"standalone"},{"name":"UCORR","optional":true,"description":"[Obsolete] Analyzes the uncorrected correlation matrix instead of the correlation matrix corrected for the mean.","type":"standalone"},{"name":"UCOV","optional":true,"description":"[Obsolete] Analyzes the uncorrected covariance matrix instead of the covariance matrix corrected for the mean.","type":"standalone"},{"name":"UPDATE=","optional":true,"aliases":["UPD="],"description":"Specifies the update method for the quasi-Newton or conjugate-gradient optimization technique.","help":"UPDATE=PB | FR | PR | CD | DBFGS | DDFP | BFGS | DFP","type":"choice","arguments":[{"name":"PB","description":"[For TECHNIQUE=CONGRA]--Performs the automatic restart update method of Powell (1977) and Beale (1972). This is the default.","type":"standalone"},{"name":"FR","description":"[For TECHNIQUE=CONGRA]--Performs the Fletcher-Reeves update (Fletcher 1980, p. 63).","type":"standalone"},{"name":"PR","description":"[For TECHNIQUE=CONGRA]--Performs the Polak-Ribiere update (Fletcher 1980, p. 66).","type":"standalone"},{"name":"CD","description":"[For TECHNIQUE=CONGRA]--Performs a conjugate-descent update of Fletcher (1987).","type":"standalone"},{"name":"DBFGS","description":"[For TECHNIQUE=DBLDOG|QUANEW]--Performs the dual Broyden-Fletcher-Goldfarb-Shanno (BFGS) update of the Cholesky factor of the Hessian matrix. This is the default.","type":"standalone"},{"name":"DDFP","description":"[For TECHNIQUE=DBLDOG|QUANEW]--Performs the dual Davidon-Fletcher-Powell (DFP) update of the Cholesky factor of the Hessian matrix.","type":"standalone"},{"name":"BFGS","description":"[For TECHNIQUE=QUANEW]--Performs original BFGS update of the inverse Hessian matrix. This is the default for earlier releases.","type":"standalone"},{"name":"DFP","description":"[For TECHNIQUE=QUANEW]--Performs the original DFP update of the inverse Hessian matrix.","type":"standalone"}]},{"name":"VARDEF=","optional":true,"description":"Specifies the divisor to use in the calculation of covariances and standard deviations.","help":"VARDEF=DF | N | WDF | WEIGHT","type":"choice","arguments":[{"name":"DF","description":"Degrees of freedom","type":"standalone"},{"name":"N","description":"Number of observations","type":"standalone"},{"name":"WDF","description":"Sum of weights DF","type":"standalone"},{"name":"WEIGHT","aliases":["WGT"],"description":"Sum of weights","type":"standalone"}]},{"name":"VSINGULAR=","optional":true,"aliases":["VSING="],"description":"Specifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, which is needed to compute the covariance matrix.","type":"value"},{"name":"WPENALTY=","optional":true,"aliases":["WPEN="],"description":"Specifies the penalty weight r ≥ 0 for the WLS and DWLS fit of the diagonal elements of a correlation matrix (constant 1s).","type":"value"},{"name":"WRIDGE=","optional":true,"description":"Defines a ridge factor r for the diagonal of the weight matrix W used in GLS, WLS, or DWLS estimation.","help":"WRIDGE=*r*","type":"value"}]},{"name":"ABORT","description":"Stops executing the current DATA step, SAS job, or SAS session. n is an integer value that enables you to specify a condition code: o when used with the CANCEL argument, the value is placed in the SYSINFO automatic macro variable o when not used with the CANCEL argument, the error code that is returned by SAS is ERROR. The value of ERROR depends on the operating system. The condition code n is returned to the operating system as the final SAS system exit code.","help":"ABORT &lt;ABEND&gt; &lt;CANCEL&gt; &lt;CANCEL FILE&gt; ...","arguments":[{"name":"ABEND","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the ABEND option of the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment; further action is based on how your operating environment and your site treat jobs that end abnormally. o windowing environment and interactive line mode","type":"standalone"},{"name":"CANCEL","optional":true,"description":"Causes the cancellation of the current submitted statements. The results depend on the method of operation: o batch mode and noninteractive mode o The entire SAS program and SAS system are terminated. o The error message is written to the SAS log. o windowing environment and interactive line mode o It only clears the current submitted program. o Other subsequent submitted programs are not affected. o The error message is written to the SAS log. o workspace server and stored process server o It only clears currently submitted program. o Other subsequent submit calls are not affected. o The error message is written to the SAS log. o SAS IntrNet application server","type":"standalone"},{"name":"CANCEL","optional":true,"description":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. Other submitted source statements will be executed after the autoexec or %INCLUDE file.","help":"CANCEL FILE","type":"standalone"},{"name":"NOLIST","optional":true,"description":"Suppresses the output of all variables to the SAS log. Requirement: NOLIST must be the last option in the ABORT statement.","type":"standalone"},{"name":"RETURN","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the RETURN option in the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment with a condition code indicating an error. o windowing environment and interactive line mode","type":"standalone"}]},{"name":"BOUNDS","description":"where constraint represents: < number operator > parameter-list < operator number > You can use the BOUNDS statement to define boundary constraints for any independent parameter that has its name specified in the main or subsidiary model specification statements, the PARAMETERS statement, or the INMODEL= data set. You cannot define boundary constraints for dependent parameters created in SAS programming statements or elsewhere. Valid operators are ≤, <, ≥, >, and = or, equivalently, LE, LT, GE, GT, and EQ.","help":"BOUNDS constraint &lt;, constraint ...&gt; "},{"name":"BY","description":"You can specify a BY statement with PROC CALIS to obtain separate analyses on observations in groups that are defined by the BY variables. When a BY statement appears, the procedure expects the input data set to be sorted in order of the BY variables. If you specify more than one BY statement, only the last one specified is used.","help":"BY &lt;DESCENDING&gt; &lt;NOTSORTED&gt; ","arguments":[{"name":"DESCENDING","optional":true,"description":"Specifies that the observations are sorted in descending order by the variable that immediately follows the word DESCENDING in the BY statement.","type":"standalone"},{"name":"NOTSORTED","optional":true,"description":"Specifies that observations are not necessarily sorted in alphabetic or numeric order.","type":"standalone"}]},{"name":"CALL","description":"Invokes a SAS CALL routine.","help":"CALL routine(parameter-1&lt;, ...parameter-n&gt;)"},{"name":"COSAN","description":"where variable-list is a list of observed variables and term represents either one of the following forms: matrix_definition < matrix_definition ...> <mean_definition> or mean_definition where matrix_definition is of the following form: matrix_name <( number_of_columns < , matrix_type < ,transformation >>)> and mean_definition is one of the following forms: [ / mean_vector ] or [ MEAN=mean_vector] where mean_vector is a vector name. The PROC CALIS statement invokes the COSAN modeling language. You can specify at most one COSAN statement in a model within the scope of either the PROC CALIS statement or a MODEL statement. To complete the COSAN model specification, you might need to add as many MATRIX statements as needed. Optionally, you can provide the variable names for the COSAN model matrices in the VARNAMES statement.","help":"COSAN &lt;VAR=variable-list&gt; ","arguments":[{"name":"VAR=","optional":true,"description":"where variable-list is a list of observed variables and term represents either one of the following forms: matrix_definition < matrix_definition ...> <mean_definition> or mean_definition where matrix_definition is of the following form: matrix_name <( number_of_columns < , matrix_type < ,transformation >>)> and mean_definition is one of the following forms: [ / mean_vector ] or [ MEAN=mean_vector] where mean_vector is a vector name. PROC CALIS supports the following keywords for matrix_type: IDE -- specifies an identity matrix. ZID -- specifies an identity matrix. DIA -- specifies a diagonal matrix. ZDI -- specifies a diagonal matrix. LOW -- specifies a lower triangular matrix. The matrix can be rectangular. UPP -- specifies an upper triangular matrix. The matrix can be rectangular. SYM -- specifies a symmetric matrix. The matrix cannot be rectangular. GEN -- specifies a general rectangular matrix (default).","help":"VAR=*variable-list*","type":"value"}]},{"name":"COV","description":"where assignment represents var_list < var_list2> <= parameter-spec> The COV statement is a subsidiary model specification statement for the confirmatory FACTOR and LINEQS models. In the LINEQS model, the COV statement defines the covariances among the exogenous variables, including errors and disturbances. In the confirmatory FACTOR model, the COV statement defines the factor covariances. In each assignment of the COV statement, you specify variables in the var_list and the var_list2 lists, followed by the covariance parameter specification in the parameter-spec list. The latter two specifications are optional. You can specify the following five types of the parameters for the covariances: o an unnamed free parameter o an initial value o a fixed value o a free parameter with a name provided o a free parameter with a name and initial value provided","help":"COV assignment &lt;, assignment ...&gt; "},{"name":"DELETE","description":"Stops processing the current observation.","help":"DELETE"},{"name":"DETERM","aliases":["STRUCTEQ"],"description":"where option represents: LABEL | NAME = name The DETERM statement is used to compute the determination coefficient of the listed dependent variables in the model. The precursor of the DETERM statement is the STRUCTEQ statement, which enables you to define the list of the dependent variables of the structural equations. Because the term structural equation is not defined in a unique way, a more generic concept of determination coefficients is revealed by the DETERM statement. You can specify the DETERM statement as many times as you want for computing determination coefficients for the sets of dependent variables of interest. You can label each set of dependent variables by using the LABEL= option. Note that you cannot use the DETERM statement in an MSTRUCT model because there are no dependent variables in this type of model.","help":"DETERM &lt;LABEL | NAME = name&gt; ","arguments":[{"name":"LABEL=","optional":true,"followsDelimiter":"/","aliases":["NAME="],"description":"Specifies to label each set of dependent variables.","type":"value"}]},{"name":"DO","description":"","help":"DO &lt;OVER&gt; &lt;&gt; &lt;&gt; ...","arguments":[{"name":"BY","optional":true,"description":"Precedes an increment integer (other than 0) or an expression that generates an integer to be added to the value of the index variable in each iteration of the DO loop.","type":"standalone"},{"name":"OVER","optional":true,"description":"","type":"standalone"},{"name":"TO","optional":true,"description":"Separates the start and stop integers or expressions that control the number of times the portion of the DATA step between the iterative DO and END statements is processed.","type":"standalone"},{"name":"UNTIL","optional":true,"description":"...more SAS statements... END","type":"standalone"},{"name":"WHILE","optional":true,"description":"","type":"standalone"}]},{"name":"EFFPART","description":"where effect represents: var_list < direction var_list2> and direction is the direction of the effect, as indicated by one of the following: --->, -->, ->, >, <---, <--, <-, or <. In the EFFPART statement, you select those effects you want to analyze by partitioning the total effects into direct and indirect effects, with estimated standard errors. The EFFPART or TOTEFF option of the PROC CALIS statement also enables you to analyze effects. The difference is that the EFFPART or TOTEFF option displays effects on all endogenous variables, while the EFFPART statement shows only the effects of interest. In addition, the EFFPART statement enables you to arrange the effects in any way you like. Hence, the EFFPART statement offers a more precise and organized way to present various results of effects.","help":"EFFPART effect &lt; , effect&gt; "},{"name":"ELSE","description":"If the condition in an IF-THEN statement is false and an ELSE statement is present, then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"FACTOR","description":"where EFA_options are options for the exploratory factor analysis. In the FACTOR statement, you can specify either EFA_options, CFA_spec, or neither of these. However, you cannot specify both EFA_options and CFA_spec at the same time. If no option is specified or there is at least one EFA_option (exploratory factor analysis option) specified in the FACTOR statement, an exploratory factor model is analyzed. Otherwise, a confirmatory factor model is analyzed with the CFA_spec.","help":"FACTOR &lt;COMPONENT&gt; &lt;GAMMA=p&gt; &lt;HEYWOOD&gt; ...","arguments":[{"name":"COMPONENT","optional":true,"aliases":["COMP"],"description":"Computes a component analysis instead of a factor analysis (the diagonal matrix U in the model is set to 0).","type":"standalone"},{"name":"GAMMA=","optional":true,"description":"Specifies the orthomax weight used with the option ROTATE=ORTHOMAX. Alternatively, you can use ROTATE=ORTHOMAX(p) with p representing the orthomax weight. There is no restriction on valid values for the orthomax weight, although the most common values are between 0 and the number of variables. The default GAMMA= value is one, resulting in the varimax rotation.","help":"GAMMA=*p*","type":"value"},{"name":"HEYWOOD","optional":true,"aliases":["HEY"],"description":"Constrains the diagonal elements of U to be nonnegative. Equivalently, you can constrain these elements to positive values by the BOUNDS statement.","type":"standalone"},{"name":"N=","optional":true,"description":"Specifies the number of first-order factors or components. The number of factors (n) should not exceed the number of variables (p) in the analysis.","help":"N=*n*","type":"value"},{"name":"NORM=","optional":true,"description":"Kaiser-normalizes the rows of the factor pattern for rotation. The default is KAISER.","help":"NORM=KAISER | NONE","type":"choice","arguments":[{"name":"KAISER","description":"Has exactly the same effect as the NORM option.","type":"standalone"},{"name":"NONE","description":"Turns off the normalization","type":"standalone"}]},{"name":"RCONVERGE=","optional":true,"aliases":["RCONV="],"description":"Specifies the convergence criterion for rotation cycles. Rotation stops when the scaled change of the simplicity function value is less than the RCONVERGE= value.","help":"RCONVERGE=*p*","type":"value"},{"name":"RITER=","optional":true,"description":"Specifies the maximum number of cycles i for factor rotation. The default i is the greater of 10 times the number of variables and 100.","help":"RITER=*i*","type":"value"},{"name":"ROTATE=","optional":true,"description":"Specifies an orthogonal or oblique rotation of the initial factor solution. Although ROTATE=PRINCIPAL is actually not a rotation method, it is put here for convenience. By default, ROTATE=NONE.","help":"ROTATE=BIQUARTIMAX | EQUAMAX | FACTORPARSIMAX | NONE | ORTHCF(p1,p2) | ORTHGENCF(p1,p2,p3,p4) | ORTHOMAX&lt;(p1)&gt; | PARSIMAX | PRINCIPAL | QUARTIMAX | VARIMAX | BIQUARTIMIN | COVARIMIN | OBBIQUARTIMAX | OBEQUAMAX | OBFACTORPARSIMAX | OBLICF(p1,p2) | OBLIGENCF(p1,p2,p3,p4) | OBLIMIN&lt;(p1)&gt; | OBPARSIMAX | OBQUARTIMAX | OBVARIMAX | QUARTIMIN|QMIN","type":"choice","arguments":[{"name":"BIQUARTIMAX","description":"Specifies orthogonal biquartimax rotation.","type":"standalone"},{"name":"EQUAMAX","description":"Specifies orthogonal equamax rotation.","type":"standalone"},{"name":"FACTORPARSIMAX","description":"Specifies orthogonal factor parsimax rotation.","type":"standalone"},{"name":"NONE","description":"Specifies that no rotation be performed,","type":"standalone"},{"name":"ORTHCF","description":"Specifies the orthogonal Crawford-Ferguson rotation with the weights p1 and p2 for variable parsimony and factor parsimony, respectively.","help":"ORTHCF(p1,p2)","type":"standalone"},{"name":"ORTHGENCF","description":"Specifies the orthogonal generalized Crawford-Ferguson rotation with the four weights p1, p2, p3, and p4.","help":"ORTHGENCF(p1,p2,p3,p4)","type":"standalone"},{"name":"ORTHOMAX","description":"Specifies the orthomax rotation with orthomax weight p1.","help":"ORTHOMAX&lt;(p1)&gt;","type":"standalone"},{"name":"PARSIMAX","description":"Specifies orthogonal parsimax rotation.","type":"standalone"},{"name":"PRINCIPAL","description":"Specifies a principal axis rotation.","type":"standalone"},{"name":"QUARTIMAX","description":"Specifies orthogonal quartimax rotation.","type":"standalone"},{"name":"VARIMAX","description":"Specifies orthogonal varimax rotation.","type":"standalone"},{"name":"BIQUARTIMIN","description":"Specifies biquartimin rotation.","type":"standalone"},{"name":"COVARIMIN","description":"Specifies covarimin rotation.","type":"standalone"},{"name":"OBBIQUARTIMAX","description":"Specifies oblique biquartimax rotation.","type":"standalone"},{"name":"OBEQUAMAX","description":"Specifies oblique equamax rotation.","type":"standalone"},{"name":"OBFACTORPARSIMAX","description":"Specifies oblique factor parsimax rotation.","type":"standalone"},{"name":"OBLICF","description":"Specifies the oblique Crawford-Ferguson rotation (Crawford and Ferguson 1970) with the weights p1 and p2 for variable parsimony and factor parsimony, respectively.","help":"OBLICF(p1,p2)","type":"standalone"},{"name":"OBLIGENCF","description":"Specifies the oblique generalized Crawford-Ferguson rotation with the four weights p1, p2, p3, and p4.","help":"OBLIGENCF(p1,p2,p3,p4)","type":"standalone"},{"name":"OBLIMIN","description":"Specifies the oblimin rotation with oblimin weight p1.","help":"OBLIMIN&lt;(p1)&gt;","type":"standalone"},{"name":"OBPARSIMAX","description":"Specifies oblique parsimax rotation.","type":"standalone"},{"name":"OBQUARTIMAX","description":"Specifies oblique quartimax rotation. This is the same as the QUARTIMIN method.","type":"standalone"},{"name":"OBVARIMAX","description":"Specifies oblique varimax rotation.","type":"standalone"},{"name":"QUARTIMIN","aliases":["QMIN"],"description":"Specifies quartimin rotation. It is the same as the oblique quartimax method.","type":"standalone"}]},{"name":"TAU=","optional":true,"description":"Specifies the oblimin weight used with the option ROTATE=OBLIMIN. Alternatively, you can use ROTATE=OBLIMIN(p) with p representing the oblimin weight. There is no restriction on valid values for the oblimin weight, although for practical purposes a negative or zero value is recommended. The default TAU= value is 0, resulting in the quartimin rotation.","help":"TAU=*p*","type":"value"}]},{"name":"FITINDEX","description":"You can use the FITINDEX statement to set the options for computing and displaying the fit indices, or to output the fit indices. All but the OFF= and ON= options of the FITINDEX statement are also available in the PROC CALIS statement. The options set in the FITINDEX statement will overwrite those set in the PROC CALIS statement.","help":"FITINDEX &lt;ALPHAECV=α&gt; &lt;ALPHARMS=α&gt; &lt;CHICORRECT=&lt;EQVARCOV | CIRCULARITY | EQCOVMAT&gt;&gt; ...","arguments":[{"name":"ALPHAECV=","optional":true,"description":"Specifies a (1 - α)100% confidence interval, 0 ≤ α ≤ 1, for the Browne and Cudeck (1993) expected cross validation index (ECVI). The default value is , which corresponds to a 90% confidence interval for the ECVI.","type":"value"},{"name":"ALPHARMS=","optional":true,"description":"Specifies a (1 - α)100% confidence interval, 0 ≤ α ≤ 1, for the Steiger and Lind (1980) root mean squared error of approximation (RMSEA) coefficient. The default value is , which corresponds to a 90% confidence interval for the RMSEA.","type":"value"},{"name":"CHICORRECT=","optional":true,"aliases":["CHICORR="],"description":"Specifies a correction factor c for the chi-square statistics for model fit.","help":"CHICORRECT=EQVARCOV | CIRCULARITY | EQCOVMAT","type":"choice","arguments":[{"name":"EQVARCOV","description":"Specifies the correction factor due to Box (1949) for testing equal variances and equal covariances in a covariance matrix.","type":"standalone"},{"name":"CIRCULARITY","description":"Specifies the correction factor due to Mauchly (1940) for testing circularity or Huynh and Feldt Type H matrix.","type":"standalone"},{"name":"EQCOVMAT","description":"Specifies the correction factor due to Box (1949) for testing equality of covariance matrices.","type":"standalone"}]},{"name":"CLOSEFIT=","optional":true,"description":"Defines the criterion value p for indicating a close fit. The smaller the better fit. The default value for close fit is 0.05.","help":"CLOSEFIT=*p*","type":"value"},{"name":"DFREDUCE=","optional":true,"aliases":["DFRED="],"description":"Reduces the degrees of freedom of the chi-square test by i.","type":"value"},{"name":"NOADJDF","optional":true,"description":"Turns off the automatic adjustment of degrees of freedom when there are active constraints in the analysis.","type":"standalone"},{"name":"NOINDEXTYPE","optional":true,"description":"Disables the display of index types in the fit summary table.","type":"standalone"},{"name":"OFFLIST=","optional":true,"aliases":["OFF="],"description":"Turns off the printing of one or more fit indices or modeling information as indicated by names, where a name represents a fit index, a group of fit indices, or modeling information.","type":"value"},{"name":"ONLIST=","optional":true,"aliases":["ON="],"description":"Turns on the printing of one or more fit indices or modeling information as indicated by names, where a name represents a fit index, a group of fit indices, or modeling information.","help":"ONLIST=ONLY","type":"choice","arguments":[{"name":"ONLY","type":"standalone"}]},{"name":"OUTFIT=","optional":true,"description":"Creates an output data set that contains the values of the fit indices.","help":"OUTFIT=*SAS-data-set*","type":"dataSet"}]},{"name":"FREQ","description":"If one variable in your data set represents the frequency of occurrence for the other values in the observation, specify the variable’s name in a FREQ statement. PROC CALIS then treats the data set as if each observation appears ni times, where ni is the value of the FREQ variable for observation i.","help":"FREQ variable"},{"name":"GOTO","description":"Jumps to a new statement.","help":"GOTO label"},{"name":"GROUP","description":"where i is an assigned group number between 1 and 9999, inclusively. The GROUP statement signifies the beginning of a group specification block and designates a group number for the group. All subsidiary group specification statements after a GROUP statement belong in that group until another MODEL or GROUP statement is used. The subsidiary group specification statements refer to one of the following four statements: o FREQ statement o PARTIAL statement o VAR statement o WEIGHT statement","help":"GROUP &lt;DATA=SAS-data-set&gt; &lt;INWGT&lt;(INV)&gt;=SAS-data-set&gt; &lt;LABEL= | NAME=name&gt; ...","arguments":[{"name":"BIASKUR","optional":true,"followsDelimiter":"/","description":"Computes univariate skewness and kurtosis by formulas uncorrected for bias.","type":"standalone"},{"name":"DATA=","optional":true,"followsDelimiter":"/","description":"Specifies an input data set that can be an ordinary SAS data set or a specially structured TYPE=CORR, TYPE=COV, TYPE=UCORR, TYPE=UCOV, TYPE=SSCP, or TYPE=FACTOR SAS data set.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"EDF=","optional":true,"followsDelimiter":"/","aliases":["DFE="],"description":"Makes the effective number of observations n+i, where i is 0 if the NOINT, UCORR, or UCOV option is specified without the AUGMENT option or where i is 1 otherwise.","type":"value"},{"name":"INWGT=","optional":true,"followsDelimiter":"/","description":"Specifies an input data set that contains the weight matrix W used in generalized least squares (GLS), weighted least squares (WLS, ADF), or diagonally weighted least squares (DWLS) estimation, if the INV option is specified.","type":"value"},{"name":"INWGTINV","optional":true,"followsDelimiter":"/","description":"Specifies that the INWGT= data set contains the inverse of the weight matrix, rather than the weight matrix itself. This option is effective only with an input weight matrix specified in the INWGT= data set and with the generalized least squares (GLS), weighted least squares (WLS or ADF), or diagonally weighted least squares (DWLS) estimation.","type":"standalone"},{"name":"KURTOSIS","optional":true,"followsDelimiter":"/","aliases":["KU"],"description":"Computes and displays univariate kurtosis and skewness, various coefficients of multivariate kurtosis, and the numbers of observations that contribute most to the normalized multivariate kurtosis.","type":"standalone"},{"name":"LABEL=","optional":true,"followsDelimiter":"/","description":"Specifies a label for the current group.","type":"value"},{"name":"NOBS=","optional":true,"followsDelimiter":"/","description":"Specifies the number of observations.","type":"value"},{"name":"OUTSTAT=","optional":true,"followsDelimiter":"/","description":"Creates an output data set containing the BY-group variables, the analyzed covariance or correlation matrices, and the predicted and residual covariance or correlation matrices of the analysis.","help":"OUTSTAT=*SAS-data-set*","type":"dataSet"},{"name":"OUTWGT=","optional":true,"followsDelimiter":"/","description":"Creates an output data set containing the weight matrix W (or its inverse) used in the estimation process.","help":"OUTWGT=*SAS-data-set*","type":"dataSet"},{"name":"PCORR","optional":true,"followsDelimiter":"/","description":"Displays the covariance or correlation matrix that is analyzed and the predicted model covariance or correlation matrix.","type":"standalone"},{"name":"PLOTS=","optional":true,"followsDelimiter":"/","aliases":["PLOT="],"description":"Syntax: PLOTS | PLOT <= plot-request> PLOTS | PLOT <= ( plot-request < ...plot-request> ) >","help":"PLOTS=ALL | NONE | RESIDUALS","type":"choice","arguments":[{"name":"ALL","followsDelimiter":"/","description":"All available plots","type":"standalone"},{"name":"NONE","followsDelimiter":"/","description":"No ODS graphical plots","type":"standalone"},{"name":"RESIDUALS","followsDelimiter":"/","description":"Distribution of residuals","type":"standalone"}]},{"name":"PWEIGHT","optional":true,"followsDelimiter":"/","description":"Displays the weight matrix W used in the estimation. The weight matrix is displayed after the WRIDGE= and WPENALTY= options are applied to it.","type":"standalone"},{"name":"RDF=","optional":true,"followsDelimiter":"/","aliases":["DFR="],"description":"Makes the effective number of observations the actual number of observations minus the RDF= value.","type":"value"},{"name":"RESIDUAL=","optional":true,"followsDelimiter":"/","aliases":["RES="],"description":"Displays the raw and normalized residual covariance matrices, the rank order of the largest residuals, and the bar charts of residual tallies. This information is displayed by default when you specify the PRINT option. Use the RESIDUAL(TALLY) or RESIDUAL(TALLY)= option if you don't want SAS to replace bar charts of residual tallies with graphical histograms showing residual distributions.","help":"RESIDUAL=NORM | VARSTAND | ASYSTAND","type":"choice","arguments":[{"name":"NORM","followsDelimiter":"/","description":"Normalized residuals","type":"standalone"},{"name":"VARSTAND","followsDelimiter":"/","description":"Variance standardized residuals","type":"standalone"},{"name":"ASYSTAND","followsDelimiter":"/","description":"Asymptotically standardized residuals","type":"standalone"}]},{"name":"RIDGE=","optional":true,"followsDelimiter":"/","description":"Defines a ridge factor r for the diagonal of the correlation matrix S that is analyzed.","type":"value"},{"name":"SIMPLE","optional":true,"followsDelimiter":"/","description":"Displays means, standard deviations, skewness, and univariate kurtosis if available.","type":"standalone"},{"name":"VARDEF=","optional":true,"followsDelimiter":"/","description":"Specifies the divisor to use in the calculation of covariances and standard deviations.","help":"VARDEF=DF | N | WDF | WEIGHT","type":"choice","arguments":[{"name":"DF","followsDelimiter":"/","description":"Degrees of freedom","type":"standalone"},{"name":"N","followsDelimiter":"/","description":"Number of observations","type":"standalone"},{"name":"WDF","followsDelimiter":"/","description":"Sum of weights minus one","type":"standalone"},{"name":"WEIGHT","followsDelimiter":"/","description":"Sum of weights","type":"standalone"}]},{"name":"WPENALTY=","optional":true,"followsDelimiter":"/","aliases":["WPEN="],"description":"Specifies the penalty weight r ≥ 0 for the WLS and DWLS fit of the diagonal elements of a correlation matrix (constant 1s).","type":"value"},{"name":"WRIDGE=","optional":true,"followsDelimiter":"/","description":"Defines a ridge factor r for the diagonal of the weight matrix W used in GLS, WLS, or DWLS estimation.","help":"WRIDGE=*r*","type":"value"}]},{"name":"IF","description":"","help":"IF &lt;DO&gt; &lt;THEN&gt; &lt;WHEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"GO","optional":true,"aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GO TO","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"PUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"SET","optional":true,"description":"Reads an observation from one or more SAS data sets.","type":"standalone"},{"name":"STOP","optional":true,"description":"Action statement in an IF-THEN construct. Stops execution of the current DATA step.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"},{"name":"WHEN","optional":true,"description":"WHEN statement in an IF-THEN-WHEN construct.","type":"standalone"}]},{"name":"LINCON","description":"where constraint represents one of the following: o number operator linear-term o linear-term operator number and linear-term is <+|-><coefficient*> parameter <<+|-><coefficient*> parameter ...> The LINCON statement specifies a set of linear equality or inequality constraints, which must be separated by commas. Each linear constraint i in the statement consists of a linear combination ∑jaijxj of a subset of the n parameters xj, j=1,...,n and a constant value bi separated by a comparison operator. Valid operators are ≤, <, ≥, >, and = or, equivalently, LE, LT, GE, GT, and EQ. PROC CALIS cannot enforce the strict inequalities < or >. Note that the coefficients aij in the linear combination must be constant numbers and must be followed by an asterisk and the name of a parameter (that is, listed in the PARMS, main, or subsidiary model specification statements). The following is an example of the LINCON statement that sets a linear constraint on parameters x1 and x2: lincon x1 + 3 * x2 <= 1; Although you can easily express boundary constraints in LINCON statements, for many applications it is much more convenient to specify both the BOUNDS and the LINCON statements in the same PROC CALIS call.","help":"LINCON constraint &lt;, constraint ...&gt; "},{"name":"LINEQS","description":"where equation represents dependent = term < + term ...> and each term represents one of the following: o coefficient-name < (number) > variable-name o prefix-name < (number) > variable-name o < number > variable-name The LINEQS statement is a main model specification statement that invokes the LINEQS modeling language. You can specify at most one LINEQS statement in a model, within the scope of either the PROC CALIS statement or a MODEL statement. To completely specify a LINEQS model, you might need to add some subsidiary model specification statements such as the VARIANCE, COV, and MEAN statements.","help":"LINEQS equation &lt;, equation ...&gt; "},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK statement-label"},{"name":"LISMOD","description":"where var_lists represent one or more of the following: YVAR | YV | Y = variables XVAR | XV | X = variables ETAVAR | ETAV | ETA = variables XIVAR | XIV | XI | KSIVAR | KSIV | KSI = variables LISMOD stands for LISrel MODeling, where LISREL is the program developed by Jöreskog and Sörbom (1988). Like the original implementation of LISREL, LISMOD uses a matrix specification interface. To complete the LISMOD specification, you might need to add as many MATRIX statements as needed, as shown in the following statement structure for the LISMOD model: LISMOD var_lists ; MATRIX matrix-name parameters-in-matrix ; Repeat the MATRIX statement as needed ;","help":"LISMOD &lt;var_lists&gt; "},{"name":"LMTESTS","description":"where option represents one of the following: display-option test-set and test-set represents one of the following: set-name = regions set-name = regions where set-name is the name of the set of Lagrange multiplier (LM) tests defined by the regions that follow after the equal sign and regions are keywords denoting specific sets of parameters in the model. You can use the LMTESTS statement to set display-options or to customize the test-sets for the LM tests. The LMTESTS statement is one of the model analysis statements. It can be used within the scope of the CALIS statement so that the options will apply to all models. It can also be used within the scope of each MODEL statement so that the options will apply only locally. Therefore, different models within a CALIS run can have very different LMTESTS options.","help":"LMTESTS &lt;DEFAULT&gt; &lt;MAXRANK&gt; &lt;NODEFAULT&gt; ...","arguments":[{"name":"DEFAULT","optional":true,"description":"Conducts the default sets of LM tests for freeing fixed parameters in the model.","type":"standalone"},{"name":"LMMAT","optional":true,"description":"Prints the sets of LM tests in matrix form, in addition to the normal LM test results.","type":"standalone"},{"name":"MAXRANK","optional":true,"description":"Sets the maximum number of rankings within a set of LM tests.","type":"standalone"},{"name":"NODEFAULT","optional":true,"description":"Turns off the default sets of LM tests for freeing fixed parameters in the model.","type":"standalone"},{"name":"NORANK","optional":true,"description":"Turns off the ranking of the LM tests.","type":"standalone"}]},{"name":"MATRIX","description":"MATRIX statement specifies the matrix elements (locations) and their parameters. Parameters can be fixed or free, with or without initial estimates. The matrix-name indicates the matrix to specify in the MATRIX statement. The location indicates the starting row and column numbers of the matrix being specified and the parameter-spec is a list of free or fixed parameters for the elements that are indicated by the location. The MATRIX statement is a subsidiary model specification statement of the COSAN, LISMOD, and MSTRUCT modeling languages. You might need to use the MATRIX statements as many times as needed for specifying your model. However, you can use the MATRIX statement at most once for each distinct model matrix.","help":"MATRIX matrix-name &lt;location&gt; = list &lt;, location = list ...&gt; "},{"name":"MEAN","description":"where assignment represents: var_list <= parameter-spec> The MEAN statement specifies the mean or intercept parameters in connection with the FACTOR, LINEQS, and PATH modeling languages. With the MEAN statement specification, PROC CALIS analyzes the mean structures in addition to the covariance structures. In each assignment of the MEAN statement, you list the var_list that you want to specify for their means or intercepts. Optionally, you can provide a list of parameter specifications in a parameter-spec after an equal sign for each var_list. The syntax of the MEAN statement is exactly the same as that of the VARIANCE statement.","help":"MEAN assignment &lt;, assignment ...&gt; "},{"name":"MODEL","description":"where i is an assigned model number between 1 and 9999, inclusively. A MODEL statement signifies the beginning of a model specification block and designates a model number for the model. All main and subsidiary model specification statements after a MODEL statement belong in that model until another MODEL or GROUP statement is encountered.","help":"MODEL &lt;CORRELATION&gt; &lt;GROUP= | GROUPS=int-list&gt; &lt;LABEL= | NAME=name&gt; ...","arguments":[{"name":"BIASKUR","optional":true,"followsDelimiter":"/","description":"Computes univariate skewness and kurtosis by formulas uncorrected for bias.","type":"standalone"},{"name":"CORRELATION","optional":true,"followsDelimiter":"/","aliases":["CORR"],"description":"Analyzes the correlation matrix instead of the default covariance matrix.","type":"standalone"},{"name":"COVARIANCE","optional":true,"followsDelimiter":"/","aliases":["COV"],"description":"Analyzes the covariance matrix.","type":"standalone"},{"name":"DEMPHAS=","optional":true,"followsDelimiter":"/","aliases":["DE="],"description":"Changes the initial values of all variance parameters by the relationship: snew = r(sold|+1) where snew is the new initial value and sold is the original initial value.","type":"value"},{"name":"EDF=","optional":true,"followsDelimiter":"/","aliases":["DFE="],"description":"Makes the effective number of observations n+i, where i is 0 if the NOINT, UCORR, or UCOV option is specified without the AUGMENT option or where i is 1 otherwise.","type":"value"},{"name":"EFFPART","optional":true,"followsDelimiter":"/","aliases":["PARTEFF","TOTEFF","TE"],"description":"Computes and displays total, direct, and indirect effects for the unstandardized and standardized estimation results.","type":"standalone"},{"name":"EXTENDPATH","optional":true,"followsDelimiter":"/","aliases":["GENPATH"],"description":"Displays the extended path estimates such as the variances, covariances, means, and intercepts in the table that contains the ordinary path effect (coefficient) estimates. This option applies to the PATH model only.","type":"standalone"},{"name":"GROUP=","optional":true,"followsDelimiter":"/","aliases":["GROUPS="],"description":"Specifies a list of integers int-list of group numbers representing the groups to be fitted by the model.","type":"value"},{"name":"INEST=","optional":true,"followsDelimiter":"/","description":"Specifies an input data set that contains initial estimates for the parameters used in the optimization process and can also contain boundary and general linear constraints on the parameters.","type":"value"},{"name":"INMODEL=","optional":true,"followsDelimiter":"/","aliases":["INRAM="],"description":"Specifies an input data set that contains in RAM list form all information needed to specify an analysis model.","type":"value"},{"name":"INWGTINV","optional":true,"followsDelimiter":"/","description":"Specifies that the INWGT= data set contains the inverse of the weight matrix, rather than the weight matrix itself. This option is effective only with an input weight matrix specified in the INWGT= data set and with the generalized least squares (GLS), weighted least squares (WLS or ADF), or diagonally weighted least squares (DWLS) estimation.","type":"standalone"},{"name":"KURTOSIS","optional":true,"followsDelimiter":"/","aliases":["KU"],"description":"Computes and displays univariate kurtosis and skewness, various coefficients of multivariate kurtosis, and the numbers of observations that contribute most to the normalized multivariate kurtosis.","type":"standalone"},{"name":"LABEL=","optional":true,"followsDelimiter":"/","aliases":["NAME="],"description":"Specifies a label for the model. You can use any valid SAS names up to 256 characters for labels. You can also use quote strings for labels.","type":"value"},{"name":"MEANSTR","optional":true,"followsDelimiter":"/","description":"Invokes the analysis of mean structures.","type":"standalone"},{"name":"MODIFICATION","optional":true,"followsDelimiter":"/","aliases":["MOD"],"description":"Computes and displays Lagrange multiplier test indices for constant parameter constraints, equality parameter constraints, and active boundary constraints, as well as univariate and multivariate Wald test indices.","type":"standalone"},{"name":"NOBS=","optional":true,"followsDelimiter":"/","description":"Specifies the number of observations.","type":"value"},{"name":"NOMEANSTR","optional":true,"followsDelimiter":"/","description":"Deactivates the inherited MEANSTR option.","type":"standalone"},{"name":"NOMOD","optional":true,"followsDelimiter":"/","description":"Suppresses the computation of modification indices. The NOMOD option is useful in connection with the PALL option because it saves computing time.","type":"standalone"},{"name":"NOORDERSPEC","optional":true,"followsDelimiter":"/","description":"Prints the model results in the order they appear in the input specifications.","type":"standalone"},{"name":"NOPARMNAME","optional":true,"followsDelimiter":"/","description":"Suppresses the printing of parameter names in the model results.","type":"standalone"},{"name":"NOSTAND","optional":true,"followsDelimiter":"/","description":"Suppresses the printing of standardized results. The default is to print the standardized results.","type":"standalone"},{"name":"NOSTDERR","optional":true,"followsDelimiter":"/","description":"Specifies that standard errors should not be computed. Standard errors are not computed for unweighted least squares (ULS) or diagonally weighted least squares (DWLS) estimation.","type":"standalone"},{"name":"ORDERSPEC","optional":true,"followsDelimiter":"/","description":"Arranges some model results by the types of parameters.","type":"standalone"},{"name":"OUTEST=","optional":true,"followsDelimiter":"/","description":"Creates an output data set containing the parameter estimates, their gradient, Hessian matrix, and boundary and linear constraints.","help":"OUTEST=*SAS-data-set*","type":"dataSet"},{"name":"OUTMODEL=","optional":true,"followsDelimiter":"/","aliases":["OUTRAM="],"description":"Creates an output data set that contains the model information for the analysis, the parameter estimates, and their standard errors.","type":"value"},{"name":"PARMNAME","optional":true,"followsDelimiter":"/","description":"Prints the parameter names in the model results.","type":"standalone"},{"name":"PCORR","optional":true,"followsDelimiter":"/","description":"Displays the covariance or correlation matrix that is analyzed and the predicted model covariance or correlation matrix.","type":"standalone"},{"name":"PDETERM","optional":true,"followsDelimiter":"/","description":"Displays three coefficients of determination: the determination of all equations (DETAE), the determination of the structural equations (DETSE), and the determination of the manifest variable equations (DETMV).","type":"standalone"},{"name":"PESTIM","optional":true,"followsDelimiter":"/","description":"Displays the parameter estimates. In some cases, this includes displaying the standard errors and t values.","type":"standalone"},{"name":"PINITIAL","optional":true,"followsDelimiter":"/","description":"Displays the model specification with initial estimates and the vector of initial values.","type":"standalone"},{"name":"PLATCOV","optional":true,"followsDelimiter":"/","description":"Displays the following: o the estimates of the covariances among the latent variables o the estimates of the covariances between latent and manifest variables","type":"standalone"},{"name":"PLOTS=","optional":true,"followsDelimiter":"/","aliases":["PLOT="],"description":"Syntax: PLOTS | PLOT <= plot-request> PLOTS | PLOT <= ( plot-request < ...plot-request> ) >","help":"PLOTS=ALL | NONE | RESIDUALS","type":"choice","arguments":[{"name":"ALL","followsDelimiter":"/","description":"All available plots","type":"standalone"},{"name":"NONE","followsDelimiter":"/","description":"No ODS graphical plots","type":"standalone"},{"name":"RESIDUALS","followsDelimiter":"/","description":"Distribution of residuals","type":"standalone"}]},{"name":"PRIMAT","optional":true,"followsDelimiter":"/","description":"Displays parameter estimates, approximate standard errors, and t values in matrix form if you specify the analysis model in the RAM or LINEQS statement.","type":"standalone"},{"name":"PWEIGHT","optional":true,"followsDelimiter":"/","description":"Displays the weight matrix W used in the estimation. The weight matrix is displayed after the WRIDGE= and WPENALTY= options are applied to it.","type":"standalone"},{"name":"RDF=","optional":true,"followsDelimiter":"/","aliases":["DFR="],"description":"Makes the effective number of observations the actual number of observations minus the RDF= value.","type":"value"},{"name":"READADDPARM","optional":true,"followsDelimiter":"/","aliases":["READADD"],"description":"Inputs the generated default parameters (for example, observations with _TYPE_=ADDPCOV, ADDMEAN, or ADDPVAR) in the INMODEL= data set as if they were part of the original model specification.","type":"standalone"},{"name":"RESIDUAL=","optional":true,"followsDelimiter":"/","aliases":["RES="],"description":"Displays the raw and normalized residual covariance matrices, the rank order of the largest residuals, and the bar charts of residual tallies. This information is displayed by default when you specify the PRINT option. Use the RESIDUAL(TALLY) or RESIDUAL(TALLY)= option if you don't want SAS to replace bar charts of residual tallies with graphical histograms showing residual distributions.","help":"RESIDUAL=NORM | VARSTAND | ASYSTAND","type":"choice","arguments":[{"name":"NORM","followsDelimiter":"/","description":"Normalized residuals","type":"standalone"},{"name":"VARSTAND","followsDelimiter":"/","description":"Variance standardized residuals","type":"standalone"},{"name":"ASYSTAND","followsDelimiter":"/","description":"Asymptotically standardized residuals","type":"standalone"}]},{"name":"RIDGE=","optional":true,"followsDelimiter":"/","description":"Defines a ridge factor r for the diagonal of the correlation matrix S that is analyzed.","type":"value"},{"name":"SIMPLE","optional":true,"followsDelimiter":"/","description":"Displays means, standard deviations, skewness, and univariate kurtosis if available.","type":"standalone"},{"name":"STDERR","optional":true,"followsDelimiter":"/","description":"Displays approximate standard errors if estimation methods other than unweighted least squares (ULS) or diagonally weighted least squares (DWLS) are used (and the NOSTDERR option is not specified).","type":"standalone"},{"name":"VARDEF=","optional":true,"followsDelimiter":"/","description":"Specifies the divisor to use in the calculation of covariances and standard deviations.","help":"VARDEF=DF | N | WDF | WEIGHT","type":"choice","arguments":[{"name":"DF","followsDelimiter":"/","description":"Degrees of freedom","type":"standalone"},{"name":"N","followsDelimiter":"/","description":"Number of observations","type":"standalone"},{"name":"WDF","followsDelimiter":"/","description":"Sum of weights minus one","type":"standalone"},{"name":"WEIGHT","followsDelimiter":"/","description":"Sum of weights","type":"standalone"}]},{"name":"WPENALTY=","optional":true,"followsDelimiter":"/","aliases":["WPEN="],"description":"Specifies the penalty weight r ≥ 0 for the WLS and DWLS fit of the diagonal elements of a correlation matrix (constant 1s).","type":"value"},{"name":"WRIDGE=","optional":true,"followsDelimiter":"/","description":"Defines a ridge factor r for the diagonal of the weight matrix W used in GLS, WLS, or DWLS estimation.","help":"WRIDGE=*r*","type":"value"}]},{"name":"MSTRUCT","description":"MSTRUCT stands for matrix structures. As opposed to other modeling languages, in which the mean and covariance structures are implied from paths, equations, or complicated model matrix computations, the MSTRUCT language is for direct structured mean and covariance models. In the MSTRUCT statement, you define the list of variables. You can use MATRIX statements to specify the parameters in the mean and covariance structures: MSTRUCT variables ; MATRIX _COV_ parameters-in-matrix ; MATRIX _MEAN_ parameters-in-matrix ; You use the MATRIX _COV_ statement to specify the covariance and variance parameters in the structured covariance matrix. When applicable, you use the MATRIX _MEAN_ statement to specify the parameters in the structured mean vector. Each of these matrices can be specified no more than once within a model.","help":"MSTRUCT &lt;VAR=&gt; ","arguments":[{"name":"VAR=","optional":true,"description":"Defines a list of variables.","type":"value"}]},{"name":"NLINCON","description":"where constraint represents one of the following: o number operator variable-list number operator o variable-list operator number o number operator variable-list You can specify nonlinear equality and inequality constraints with the NLINCON or NLC statement. The QUANEW optimization subroutine is used when you specify nonlinear constraints by using the NLINCON statement. The syntax of the NLINCON statement is similar to that of the BOUNDS statement, except that the NLINCON statement must contain the names of variables that are defined in the program statements and are defined as continuous functions of parameters in the model. They must not be confused with the variables in the data set.","help":"NLINCON | NLC constraint &lt;, constraint ...&gt; "},{"name":"NLOPTIONS","description":"Many options that are available in SAS/OR PROC NLP can be specified for the optimization subroutines in PROC CALIS by using the NLOPTIONS statement. The NLOPTIONS statement provides more displayed and file output control on the results of the optimization process, and it permits the same set of termination criteria as in PROC NLP.","help":"NLOPTIONS &lt;ABSCONV= | ABSTOL=r&gt; &lt;ABSFCONV=r &lt;n&gt; | ABSFTOL=r&lt;n&gt;&gt; &lt;ABSGCONV= | ABSGTOL=r &lt;n&gt;&gt; ...","arguments":[{"name":"ABSCONV=","optional":true,"aliases":["ABSTOL="],"description":"Specifies an absolute function convergence criterion.","type":"value"},{"name":"ABSFCONV=","optional":true,"aliases":["ABSFTOL="],"description":"Specifies an absolute function convergence criterion.","type":"value"},{"name":"ABSGCONV=","optional":true,"aliases":["ABSGTOL="],"description":"Specifies an absolute gradient convergence criterion. Termination requires the maximum absolute gradient element to be small.","type":"value"},{"name":"ABSXCONV=","optional":true,"aliases":["ABSXTOL="],"description":"Specifies the absolute parameter convergence criterion. Termination requires a small Euclidean distance between successive parameter vectors.","type":"value"},{"name":"ASINGULAR=","optional":true,"aliases":["ASING="],"description":"Specifies an absolute singularity criterion r, r > 0, for the inversion of the information matrix, which is needed to compute the covariance matrix.","type":"value"},{"name":"DAMPSTEP=","optional":true,"aliases":["DS="],"description":"Specifies that the initial step-size value aⁿ (where n=0) for each line search (used by the QUANEW, CONGRA, or NEWRAP technique) cannot be larger than r times the step-size value used in the former iteration.","type":"value"},{"name":"FCONV2=","optional":true,"aliases":["FTOL2="],"description":"Specifies a second function convergence criterion.","type":"value"},{"name":"FCONV=","optional":true,"aliases":["FTOL="],"description":"Specifies the relative function convergence criterion.","type":"value"},{"name":"FSIZE=","optional":true,"description":"Specifies the FSIZE parameter of the relative function and relative gradient termination criteria. The default value is r=0.","help":"FSIZE=*r*","type":"value"},{"name":"GCONV2=","optional":true,"description":"Specifies another relative gradient convergence criterion.","type":"value"},{"name":"GCONV=","optional":true,"aliases":["GTOL="],"description":"Specifies the relative gradient convergence criterion.","type":"value"},{"name":"HESCAL=","optional":true,"aliases":["HS="],"description":"Specifies the scaling version of the Hessian or crossproduct Jacobian matrix used in NRRIDG, TRUREG, LEVMAR, NEWRAP, or DBLDOG optimization.","help":"HESCAL=0 | 1 | 2 | 3","type":"choice","arguments":[{"name":"0","description":"Specifies that no scaling is done.","type":"standalone"},{"name":"1","description":"Specifies the Moré (1978) scaling update","type":"standalone"},{"name":"2","description":"Specifies the Dennis, Gay, and Welsch (1981) scaling update","type":"standalone"},{"name":"3","description":"Specifies that di is reset in each iteration","type":"standalone"}]},{"name":"INHESSIAN=","optional":true,"description":"Specifies how the initial estimate of the approximate Hessian is defined for the quasi-Newton techniques QUANEW and DBLDOG.","type":"value"},{"name":"INSTEP=","optional":true,"aliases":["SALPHA=","RADIUS="],"description":"Reduces the length of the first trial step during the line search of the first iterations.","help":"INSTEP=*r*","type":"value"},{"name":"LCDEACT=","optional":true,"aliases":["LCD="],"description":"Specifies a threshold r for the Lagrange multiplier that decides whether an active inequality constraint remains active or can be deactivated.","type":"value"},{"name":"LCEPSILON=","optional":true,"aliases":["LCEPS=","LCE="],"description":"Specifies the range r, r ≥ 0, for active and violated boundary and linear constraints.","type":"value"},{"name":"LCSINGULAR=","optional":true,"aliases":["LCSING=","LCS="],"description":"Specifies a criterion r, r ≥ 0, used in the update of the QR decomposition that decides whether an active constraint is linearly dependent on a set of other active constraints.","type":"value"},{"name":"LINESEARCH=","optional":true,"aliases":["LIS=","SMETHOD=","SM="],"description":"Specifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques.","help":"LINESEARCH=1 | 2 | 3 | 4 | 5 | 6 | 7 | 8","type":"choice","arguments":[{"name":"1","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is similar to one used by the Harwell subroutine library.","type":"standalone"},{"name":"2","description":"Specifies a line-search method that needs more function calls than gradient calls for quadratic and cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"3","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"4","description":"Specifies a line-search method that needs the same number of function and gradient calls for stepwise extrapolation and cubic interpolation","type":"standalone"},{"name":"5","description":"Specifies a line-search method that is a modified version of LIS=4.","type":"standalone"},{"name":"6","description":"Specifies golden section line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"7","description":"Specifies bisection line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"8","description":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for linear approximation.","type":"standalone"}]},{"name":"LSPRECISION=","optional":true,"aliases":["LSP=","SPRECISION=","SP="],"description":"Specifies the degree of accuracy that should be obtained by the line-search algorithms LIS=2 and LIS=3. The default LSPRECISION= values are:","type":"value"},{"name":"MAXFUNC=","optional":true,"aliases":["MAXFU="],"description":"Requires the number of function calls to be no larger than i. The default values are:","type":"value"},{"name":"MAXITER=","optional":true,"aliases":["MAXIT="],"description":"Requires the number of iterations to be no larger than i. The default values are: o For TECH= LEVMAR, NEWRAP, NRRIDG, TRUREG: i=50 o For TECH= DBLDOG, QUANEW: i=200 o For TECH= CONGRA: i=400","type":"value"},{"name":"MAXSTEP=","optional":true,"description":"Specifies an upper bound for the step length of the line-search algorithms during the first n iterations.","type":"value"},{"name":"MAXTIME=","optional":true,"description":"Requires the CPU time to be no larger than r. The default value of the MAXTIME= option is the largest double floating-point number on your computer.","help":"MAXTIME=*r*","type":"value"},{"name":"MINITER=","optional":true,"aliases":["MINIT="],"description":"Specifies the minimum number of iterations. The default value is 0.","type":"value"},{"name":"MSINGULAR=","optional":true,"aliases":["MSING="],"description":"Specifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, which is needed to compute the covariance matrix.","type":"value"},{"name":"NOPRINT","optional":true,"description":"Suppresses output related to optimization such as the iteration history.","type":"standalone"},{"name":"PALL","optional":true,"aliases":["ALL"],"description":"[Displays information about the starting values and final values of the optimization process.","type":"standalone"},{"name":"PHISTORY","optional":true,"aliases":["PHIS"],"description":"Displays the optimization history. The PHISTORY option is set automatically if the PALL or PRINT option is set.","type":"standalone"},{"name":"RESTART=","optional":true,"aliases":["REST="],"description":"Specifies that the QUANEW or CONGRA algorithm is restarted with a steepest descent/ascent search direction after at most i iterations, i > 0.","type":"value"},{"name":"SINGULAR=","optional":true,"description":"Specifies the singularity criterion r, 0 < r < 1, used, for example, for matrix inversion.","type":"value"},{"name":"SOCKET=","optional":true,"description":"Specifies the fileref that contains the information needed for remote monitoring.","type":"value"},{"name":"TECHNIQUE=","optional":true,"aliases":["TECH=","OMETHOD=","OM="],"description":"Specifies the optimization technique.","help":"TECHNIQUE=CONGRA | DBLDOG | LEVMAR | NEWRAP | NRRIDG | QUANEW | TRUREG | NONE","type":"choice","arguments":[{"name":"CONGRA","description":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"DBLDOG","description":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation of the Cholesky factor of the Hessian.","type":"standalone"},{"name":"LEVMAR","description":"Performs a highly stable but, for large problems, memory- and time-consuming Levenberg-Marquardt optimization technique, a slightly improved variant of the Moré (1978) implementation. This is the default optimization technique if there are fewer than 40 parameters to estimate.","type":"standalone"},{"name":"NEWRAP","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. The algorithm combines a line-search algorithm with ridging, and it can be modified with the LINESEARCH= option.","type":"standalone"},{"name":"NRRIDG","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. This algorithm does not perform a line search.","type":"standalone"},{"name":"QUANEW","description":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"TRUREG","description":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region optimization technique. The algorithm is implemented similar to Gay (1983) and Moré and Sorensen (1983).","type":"standalone"},{"name":"NONE","description":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also computes and displays residuals and goodness of fit statistics.","type":"standalone"}]},{"name":"UPDATE=","optional":true,"description":"Specifies the update method for the quasi-Newton, double-dogleg, or conjugate-gradient optimization technique.","help":"UPDATE=BFGS | DBFGS | DDFP | DFP | PB | FR | PR | CD","type":"choice","arguments":[{"name":"BFGS","description":"Performs the original Broyden, Fletcher, Goldfarb, and Shanno (BFGS) update of the inverse Hessian matrix.","type":"standalone"},{"name":"DBFGS","description":"Performs the dual BFGS update of the Cholesky factor of the Hessian matrix. This is the default update method.","type":"standalone"},{"name":"DDFP","description":"Performs the dual Davidon, Fletcher, and Powell (DFP) update of the Cholesky factor of the Hessian matrix.","type":"standalone"},{"name":"DFP","description":"Performs the original DFP update of the inverse Hessian matrix.","type":"standalone"},{"name":"PB","description":"Performs the automatic restart update method of Powell (1977) and Beale (1972).","type":"standalone"},{"name":"FR","description":"Performs the Fletcher-Reeves update (Fletcher 1987).","type":"standalone"},{"name":"PR","description":"Performs the Polak-Ribiere update (Fletcher 1987).","type":"standalone"},{"name":"CD","description":"Performs a conjugate-descent update of Fletcher (1987).","type":"standalone"}]},{"name":"VERSION=","optional":true,"aliases":["VS="],"description":"Specifies the version of the quasi-Newton optimization technique with nonlinear constraints.","help":"VERSION=1 | 2","type":"choice","arguments":[{"name":"1","description":"Specifies the update of the U vector as in Powell (1978a, 1978b) (update like VF02AD).","type":"standalone"},{"name":"2","description":"Specifies the update of the U vector as in Powell (1982a, 1982b) (update like VMCWD).","type":"standalone"}]},{"name":"VSINGULAR=","optional":true,"aliases":["VSING="],"description":"Specifies a relative singularity criterion r, r > 0, for the inversion of the information matrix, which is needed to compute the covariance matrix.","type":"value"},{"name":"XCONV=","optional":true,"aliases":["XTOL="],"description":"Specifies the relative parameter convergence criterion. Termination requires a small relative parameter change in subsequent iterations.","type":"value"},{"name":"XSIZE=","optional":true,"description":"Specifies the XSIZE parameter of the relative function and relative gradient termination criteria. The default value is r=0.","help":"XSIZE=*r*","type":"value"}]},{"name":"OTHERWISE","description":">","help":""},{"name":"OUTFILES","aliases":["OUTFILE"],"description":"where file_option represents one of the following: OUTMODEL | OUTRAM= file_name [ MODEL= int_list < , int_list > ] OUTSTAT= file_name [ GROUP= int_list < , int_list > ] OUTWGT= file_name [ GROUP= int_list < , int_list > ] with file_name representing an output file name and int_list representing list of model or group numbers Use the OUTFILES statement when you need to output multiple-group or multiple-model information to output files in a complex way. In each OUTFILES statement, each possible file_option should appear no more than once. However, as needed, you can use the OUTFILES statement more than once.","help":"OUTFILES | OUTFILE file_option &lt;file_option ...&gt; "},{"name":"PARAMETERS","aliases":["PARMS"],"description":"The number of parameters and the number of values do not have to match. When there are fewer values than parameter names, either the RANDOM= or START= option is used. When there are more values than parameter names, the extra values are dropped. Parameters listed in the PARAMETERS statement can be assigned initial values by program statements or by the START= or RANDOM= option in the PROC CALIS statement.","help":"PARAMETERS | PARMS parameter(s) &lt;&lt; = &gt; number(s) &gt;"},{"name":"PARTIAL","description":"If you want the analysis to be based on a partial correlation or covariance matrix, use the PARTIAL statement to list the variables used to partial out the variables in the analysis. You can specify only one PARTIAL statement within the scope of each GROUP or PROC CALIS statement.","help":"PARTIAL variables "},{"name":"PATH","description":"where path represents: var_listarrowvar_list2<= parameter-spec> and arrow represents either a left-arrow or a right-arrow. A left-arrow is one of the following: <---, <--, <-, or < A right-arrow is one of the following: --->, -->, ->, or > The PATH statement specifies the paths in your structural equation model. You can specify at most one PATH statement in a model within the scope of either the PROC CALIS statement or a MODEL statement. To complete the PATH model specifications, you might need to add some subsidiary model specification statements such as the PVAR, PCOV, and the MEAN statements. The following is the syntax for the PATH modeling language: PATH path < , path ...> ; PVAR partial-variance-parameters ; PCOV partial-covariance-parameters ; MEAN mean-parameters ;","help":"PATH path &lt; , path ...&gt; "},{"name":"PCOV","description":"where assignment represents: var_list < var_list2> <= parameter-spec> The PCOV statement is a subsidiary model specification statement for the PATH model. You can use the PCOV statement only with the PATH modeling language. The PCOV statement specifies the covariances of exogenous variables, or the error covariances of endogenous variables in the PATH model. It can also specify the covariance between an exogenous variable and the error term of an endogenous variables, although this usage is rare in practice.","help":"PCOV assignment &lt;, assignment ...&gt; "},{"name":"PUT","description":"The PUT statement writes text data to the current output file.","help":"PUT &lt;_PAGE_&gt; ","arguments":[{"name":"_PAGE_","optional":true,"description":"Outputs any pending line data and moves to the top of the next page.","type":"standalone"}]},{"name":"PVAR","description":"where assignment represents: var_list <= parameter-spec> The PVAR statement specifies the variance or error (partial) variance parameters in connection with the confirmatory FACTOR and PATH models. In each assignment of the PVAR statement, you list the var_list that you want to specify for their variances or error (partial) variances. Optionally, you can provide a list of parameter specifications (parameter-spec) after an equal sign for each var_list list. The syntax of the PVAR statement is exactly the same as that of the VARIANCE statement.","help":"PVAR assignment &lt; , assignment ...&gt; "},{"name":"RAM","description":"where variable-list is a list of variables for the rows and columns of the _A_ and _P_ matrices and the rows of the _W_ vector of the RAM model, number-list is a list of positive integers that denote the order of the specified variables, and ram-entry is a parameter specification for an element in one of the three RAM model matrices. You can specify latent variables in addition to observed variables in the VAR= option.","help":"RAM &lt;VAR=variable-list | variable-list=number-list &lt;,"},{"name":"REFMODEL","description":"where model_number represents a model number between 1 and 9999, inclusively, and options are for renaming parameters. The REFMODEL statement is not a modeling language itself. It is a tool for referencing and modifying models. It is classified into one of the modeling languages because its role is similar to other modeling languages. REFMODEL model_number </ options> ; RENAMEPARM parameter renaming ; main model specification statement ; subsidiary model specification statements ;","help":"REFMODEL &lt;ALLNEWPARMS&gt; &lt;PARM_PREFIX=prefix&gt; &lt;PARM_SUFFIX=suffix&gt; ...","arguments":[{"name":"ALLNEWPARMS","optional":true,"followsDelimiter":"/","description":"Appends to the parameter names in the reference model with _mdl and then an integer suffix denoting the model number of the current model. For example, if qq is a parameter in the reference model for a current model with model number 3, then this option creates qq_mdl3 as a new parameter name.","type":"standalone"},{"name":"PARM_PREFIX=","optional":true,"followsDelimiter":"/","description":"Inserts to all parameter names in the reference model with the prefix provided. For example, if qq is a parameter in the reference model for a current model, then PARM_PREFIX=pre_ creates pre_qq as a new parameter name.","help":"PARM_PREFIX=*prefix*","type":"value"},{"name":"PARM_SUFFIX=","optional":true,"followsDelimiter":"/","description":"Appends to all parameter names in the reference model with the suffix provided. For example, if qq is a parameter in the reference model for a current model, then PARM_SUFFIX=_suf creates qq_suf as a new parameter name.","help":"PARM_SUFFIX=*suffix*","type":"value"}]},{"name":"RENAMEPARM","description":"where assignment represents: old_parameters = parameter-spec You can use the RENAMEPARM statement to rename parameters or to change the types of parameters of a reference model so that new parameters are transferred to the new model in question. The RENAMEPARM statement is a subsidiary model specification statement that should be used together with the REFMODEL statement. The syntax of the RENAMEPARM statement is similar to that of the VARIANCE statement—except that in the RENAMEPARM statement, you put parameter names on the left-hand side of equal signs, whereas you put variable names on the left-hand side in the VARIANCE statement. You can use no more than one RENAMEPARM statement within the scope of each REFMODEL statement.","help":"RENAMEPARM assignment &lt;, assignment ...&gt; "},{"name":"RETURN","description":"Stops executing statements at the current point and returns to a predetermined point in the step.","help":"RETURN"},{"name":"SELECT","description":"","help":""},{"name":"SIMTESTS","aliases":["SIMTEST"],"description":"where sim_test represents one of the following: test_name = [ functions ] test_name = { functions } and functions are either parameters in the model or parametric functions computed in the SAS programming statements. When the estimates in a model are asymptotically multivariate-normal, continuous and differentiable functions of the estimates are also multivariate-normally distributed. In the SIMTEST statement, you can test these parametric functions simultaneously.","help":"SIMTESTS sim_test &lt;sim_test ...&gt; "},{"name":"STD","description":"where assignment represents: var_list = parameter-spec The STD statement functions exactly the same as the VARIANCE statement. The STD statement is obsolete and might not be supported in future versions of PROC CALIS. Use the VARIANCE statement instead.","help":"STD assignment &lt;, assignment ...&gt; "},{"name":"STOP","description":"The STOP statement halts the execution of all statements that contain it, including DO statements and other control or looping statements. Execution continues with the next top-level source statement.","help":"STOP "},{"name":"STRUCTEQ","description":"where label represents: LABEL | NAME = name The STRUCTEQ statement functions exactly the same as the DETERM statement.","help":"STRUCTEQ variables &lt;/ label&gt; "},{"name":"TESTFUNC","description":"where functions are either parameters in the model or parametric functions computed in the SAS programming statements. When the estimates in a model are asymptotically multivariate-normal, any continuous and differentiable function of the estimates is also normally distributed. In the TESTFUNC statement, you can test these parametric functions using z-tests.","help":"TESTFUNC functions "},{"name":"VAR","description":"VAR variables; The VAR statement defines and limits the set of observed variables that are available for the corresponding model analysis. It is one of the subsidiary group specification statements. You can use the VAR statement no more than once within the scope of each GROUP or the PROC CALIS statement. The set of variables in the VAR statement must be present in the data set specified in the associated GROUP or the PROC CALIS statement.","help":"VAR"},{"name":"VARIANCE","description":"where assignment represents: var_list <=parameter-spec> The VARIANCE statement specifies the variance parameters in connection with the LINEQS model. Notice that the VARIANCE statement is different from the VAR statement, which specifies variables for analysis. In previous versions of PROC CALIS, the STD statement name was used instead of the VARIANCE statement name. Although these two names result in the same functionalities, the VARIANCE statement name reflects the intended usages better. In each assignment of the VARIANCE statement, you list the var_list whose variances you want to specify. Optionally, you can provide a list of parameter specifications (parameter-spec) after an equal sign for each var_list list. You can specify the following five types of the parameters for the variances of the exogenous variables in the VARIANCE statement: o an unnamed free parameter o an initial value o a fixed value o a free parameter with a name provided o a free parameter with a name and initial value provided","help":"VARIANCE assignment &lt;, assignment ...&gt; "},{"name":"VARNAMES","aliases":["VARNAME","VNAMES"],"description":"where name_assignment represents one of the following forms: matrix_name variable_names matrix_name = [variable_names] matrix_name = matrix_name You can use the VARNAMES statement in connection with the COSAN modeling language to assign variable names for matrices. The matrix_name refers to any matrix you define in the COSAN statement. The variable_names that follow the matrix_name are assigned to the column variables of the matrix of interest. This applies to the first two types of VARNAMES specifications. For example, varnames F f1-f3; is exactly the same as varnames F = [ f1-f3 ]; Both of these assign f1, f2, and f3 as the names for the first three column variables of matrix F.","help":"VARNAMES | VNAMES assignment &lt;, assignment ...&gt; "},{"name":"WEIGHT","description":"The WEIGHT statement specifies the weight variable for the observations. It is one of the subsidiary group specification statements. You can use the WEIGHT statement no more than once within the scope of each GROUP statement or the PROC CALIS statement. Weighting is often done when the error variance associated with each observation is different and the values of the weight variable are proportional to the reciprocals of the variances. The WEIGHT and FREQ statements have a similar effect, except the WEIGHT statement does not alter the number of observations unless VARDEF=WGT or VARDEF=WDF. An observation is used in the analysis only if the WEIGHT variable is greater than 0 and is not missing.","help":"WEIGHT variable"},{"name":"WHEN","description":"","help":"WHEN &lt;DO&gt; ","arguments":[{"name":"DO","optional":true,"description":"","type":"standalone"}]}],"supportSiteInformation":{"docsetId":"statug","docsetVersion":"latest","docsetTargetFile":"statug_calis_toc.htm"}}