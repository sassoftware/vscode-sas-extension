{"name":"CAS","statements":[{"name":"PROC CAS","description":"Enables you to program and schedule SAS Cloud Analytic Services actions from the SAS client.","help":"PROC             CAS ;\n\tACTION \n          <action-set-name.action-name><RESULT=<variable>><STATUS=<rc>><ASYNC=name>\n\t\t /           <parameters>;\n        \n\t \n          target =           expression;\n        \n\tCALL \n          function            (argument1,           argument2...);\n        \n\tCONTINUE ;\n        \n\tDEFAULT \n          RESULT=variable-expression\n          STATUS=variable-expression           | CLEAR\n          <clear-option-1<clear-option-2< ...clear-option-N>>>;\n        \n\tDELETE \n          value;\n        \n\tDESCRIBE \n          variable;\n        \n\tDO ;\n\t\t\n            ... more CASL statements                 ...;\n          \n          \n\t\tEND ;\n        \n        \n\tDO             UNTIL \n\t\tcondition; \n          \n\t\t... more CASL                 statements ...; \n          \n\t\tEND ;\n        \n        \n\tDO WHILE \n          condition;             \n\t\t... more CASL statements                 ...;\n          \n\t\tEND ;\n        \n        \n\tDO            [<key,>] <var>\n          OVER \n          <value>;             \n\t\t... more                 CASL statements ...;\n          \n\t\tEND ;\n        \n        \n\tDO \n          <var>           =           <start>             [TO \n          <stop>]             [BY \n          <increment>]\n\t\t[WHILE \n            <condition> |               UNTIL \n            <condition>];\n          \n\t\t... more CASL statements             ...;\n          \n\t\tEND ;\n        \n        \n\tENDEXTERNALSOURCE ;\n        \n\tENDSOURCE ;\n        \n\tEXIT \n          expression;\n        \n\tEXTERNALSOURCE \n          variable-expression;\n\t\t<embedded-text>\n\t\tENDEXTERNALSOURCE ;\n        \n\tFILE \n          fileref;\n        \n\tFNC \n          <category-name>;\n        \n\tFORMAT \n          variable-1...variable-N\n          format;\n        \n\tFUNCTION \n          function name\n          ( [argument 1 [, argument 2...] ]             );             \n\t\t... more CASL statements             ...;\n          \n\t\tEND ;\n        \n        \n\tFUNCTIONLIST \n          <name>;\n\t\tFLIST \n            <name>;\n        \n        \n\tGLOBAL \n          variable;\n        \n\tGOTO \n          label;\n        \n\tIF \n          condition\n          \n\t\tTHEN \n            statement;\n          \n\t\tELSE              <statement>;\n        \n        \n\tLabel \n          statement\n        \n\tLOCAL \n          variable;\n        \n\tLEAVE ;\n        \n\tLOADACTIONSET \n          actionsetname;\n        \n\tNULL ;\n        \n        \n\tOUTPUT  \n          <ODS | LOG>;\n        \n\tPRINT \n          value-1...value-N;\n        \n\tPRINTLIST \n          expression;\n        \n\tRETURN \n          <expression | value>;\n        \n\tSAVERESULT \n          variable-name\n          <NOREPLACE >\n          \n\t\t\n          <DATAOUT =<libref.>               data-set-name> |           <LIB =libref>           |           \n\t\t<FILE =<pathname> | <filename>>\n\t\t<<CASLIB= casref> | <CASOUT= name>>;\n        \n\tSELECT \n          <(select-expression)>;\n\t\tWHEN -1 <(when-expression-1 ...,                   when-expression-n> )                statement;\n\t\t\t<...WHEN -n                 (when-expression-1 ..., when-expression-n) >\n            statement;\n          \n\t\t<OTHERWISE statement>;END ;\n        \n        \n\tSESSION \n          session-reference;\n        \n\tSET   (DISP\n          <ECHOEXTSRC><LOGS><LOGS=DEBUG | NOTE | TRACE | WARN><STDJSON><WARNINGDUP><USEWIDTH>)           ;\n        \n\tSOURCE \n          variable;           text;           endsource;\n        \n\tUNSET \n          DISP\n          <ECHOEXTSRC><LOGS><STDJSON><USEWIDTH ><WARNINGDUP>\n        \n\tUPLOAD \n          \n\t\tPATH= path-to-file\n          \n\t\t<CASOUT= {output-table-options>}\n          \n\t\t<IMPORTOPTIONS= {FILETYPE=                  “BASESAS | ”                  “CSV” | “DTA” | “ESP” | “EXCEL” | “FMT” | “EXCEL” | “HDAT” | “JMP” | “LASR” | “SPSS” | “XLSX”,fileType-specific-parameters}>;\n        \n        \n\tRUN; \n      QUIT ;","supportSiteTargetFile":"p14hvzwg57dkg5n1fgrugckkgerl.htm"},{"name":"ACTION","description":"Runs SAS Cloud Analytic Services actions.","help":"<ACTION >\n            <action-set-name.>action-name\n            <RESULT= <variable>\n            <STATUS = <rc>\n            <ASYNC = name>\n            \n\t<parameters>;","arguments":[{"name":"action-set-name","placeholder":true,"description":"specifies the name of the action set that contains the action to run. Examples are table, simple, and network.","type":"value","supportSiteTargetFragment":"p09r53wzt9mal0n19g2jk8aklot1"},{"name":"action-name","placeholder":true,"description":"specifies the name of the action to run. Examples are loadTable, listActions, and serverStatus.","type":"value","supportSiteTargetFragment":"p1g4wcqp8sbxlqn1vi83uisraeq7"},{"name":"parameter","optional":true,"placeholder":true,"description":"the specified action’s parameters. You can discover the parameters for an action with the help action.","type":"value","supportSiteTargetFragment":"p0bstoxn5ovcd1n1fuminb37o2c1"},{"name":"RESULT=","optional":true,"aliases":["R="],"description":"stores the results of the action in a variable. You can then use the variable in other CASL statements and actions. You can use the variable with statements such as DESCRIBE and with a selected set of SAS statements within the scope of the CAS procedure invocation.","help":"RESULT=*variable-name*","type":"value","supportSiteTargetFragment":"n19wjy6gfqzg27n0zanxu4qzeaq4"},{"name":"STATUS=","optional":true,"description":"stores the status code of the action in a variable. You can examine the status code to determine if an action completed with or without any errors. If you do not specify a variable-name, a variable named _status that contains the status codes is created.","help":"STATUS=&lt;*variable-name*&gt;","type":"standaloneOrValue","supportSiteTargetFragment":"p1j7xtoqhv7ec5n10mxi39gpmdx0"},{"name":"ASYNC=","optional":true,"description":"enables you to submit multiple requests to the server. If your requests are in the same session, the requests are queued in the order received. If your requests are in separate sessions, the requests are executed in parallel.","help":"ASYNC=*result                      name*","type":"value","supportSiteTargetFragment":"p0azf021ht7vqcn10tuddbbd1q4k"}],"supportSiteTargetFile":"n0w3x61bw2s5a3n1i2oywybloafc.htm"},{"name":"CALL","description":"Calls a function with the specified argument. If the function returns a value, it is ignored.","help":"<CALL >\n                function                 (<argument-1, argument-2...>);","arguments":[{"name":"function","optional":true,"placeholder":true,"description":"the name of the built in or user defined function.","type":"value","supportSiteTargetFragment":"n0u2qyofzsrqp6n13oghe0buf6fw"},{"name":"argument","optional":true,"placeholder":true,"description":"specifies values that are passed to a function when it is called.","type":"value","supportSiteTargetFragment":"n0uz758i8jlu07n0zcnfewdffl30"}],"supportSiteTargetFile":"p1fzqq9cmxen1xn0zmsxo8k6s3ty.htm"},{"name":"CONTINUE","description":"Stops processing the current DO loop iteration and resumes with the next iteration.","help":"CONTINUE ;","supportSiteTargetFile":"p12wh7lcf2issen1c6gt7435xaba.htm"},{"name":"DEFAULT","description":"Enables you to control how CASL returns action results and action processing status.","help":"Form 1: \nDEFAULT \n            RESULT=variable-expression;\nForm 2: \nDEFAULT \n            STATUS=variable-expression;\nForm 3: \nDEFAULT \n            CLEAR\n            <clear-option-1<clear-option-2< ...clear-option-N>>>","arguments":[{"name":"CLEAR","optional":true,"description":"removes the default variable assignment in which an action’s result and status are saved.","type":"standalone","arguments":[{"name":"RESULT","description":"removes the default variable assignment where the RESULT of an action is saved.","type":"standalone","supportSiteTargetFragment":"p0nndhk39qe011n1kouxzs7g75hp"},{"name":"STATUS","description":"removes the default variable assignment where the status of an action is saved.","type":"standalone","supportSiteTargetFragment":"p0j0icerlrq761n1nf9cpezl8tg6"}],"supportSiteTargetFragment":"p0q1g8rv06w1tjn1nulhp00sqkla"},{"name":"RESULT=","optional":true,"aliases":["R"],"description":"sets the default variable where results from an action are saved. variable-expression is any expression that results in either a variable or data structure element into which a value can be stored.","help":"RESULT=*variable-expression*","type":"value","supportSiteTargetFragment":"p0rgjkvdh0xgegn10pktytpz0epg"},{"name":"STATUS=","optional":true,"description":"sets the default variable where the status of an action is saved. variable-expression is any expression that results in either a variable or data structure element into which a value can be stored.","help":"STATUS=*variable-expression*","type":"value","supportSiteTargetFragment":"p0j4s44vqkwhncn12404ebldd64o"}],"supportSiteTargetFile":"n1d5ahu5v6sgmmn1d6fkuimrvso8.htm"},{"name":"DELETE","description":"Deletes the specified value from memory.","help":"DELETE  *value*","arguments":[{"name":"value","placeholder":true,"description":"definition of the location for the value that is to be deleted. The value can be a variable, list, array, or a dictionary.","type":"value","supportSiteTargetFragment":"p0khep2axbtm1zn1mrlfrz4wi7hz"}],"supportSiteTargetFile":"p1mkua7u6d7woan1mgibotut2tvt.htm"},{"name":"DESCRIBE","description":"Enables you to view the structure and data type of CASL variables and expressions.","help":"DESCRIBE \n        variable-name | expression;","arguments":[{"name":"variable-name","placeholder":true,"description":"The name of the variable that you want to view structure and data types for.","type":"value","supportSiteTargetFragment":"n0jka9qtti3n09n18qeyxt461e59"},{"name":"expression","placeholder":true,"description":"A combination of one or more values, constants, variables, operators, and functions that are evaluated using rules and precedence to compute a result.","type":"value","supportSiteTargetFragment":"p0icngnq9jv6osn10yocigxgpb1j"}],"supportSiteTargetFile":"p0ogfmq148qrwfn1cs3o0i3i6ace.htm"},{"name":"DO","description":"Creates a block of code that executes as one statement.","help":"DO ;\n\t... more CASL statements ...;END ;","supportSiteTargetFile":"p0xubfe3yuw8ryn1ptotnl0znj22.htm"},{"name":"DO OVER","description":"Iterates over an array, dictionary, or table.","help":"DO  <key>, <var> OVER  <value>;\n\t... more CASL statements ...;END ;","arguments":[{"name":"key","optional":true,"placeholder":true,"description":"specifies the variable that is assigned the key value for a dictionary element.","type":"value","supportSiteTargetFragment":"p1wfzlyxxfl9acn11lbu2en4os9l"},{"name":"var","optional":true,"placeholder":true,"description":"specifies the variable that is assigned the value associated with the key for an array or dictionary element.","type":"value","supportSiteTargetFragment":"n05hg5be5l9dcdn1jfkbthx9dolu"},{"name":"value","optional":true,"placeholder":true,"description":"specifies the array, dictionary, or table.","type":"value","supportSiteTargetFragment":"p0euy8zllbw3zsn1puplp7bywxnf"}],"supportSiteTargetFile":"n1enf8paum6q19n1cascbj8z5kpc.htm"},{"name":"DO UNTIL","description":"Executes statements in a DO loop repetitively until a condition is true.","help":"DO UNTIL  (condition);\n\t... more CASL statements ...;END ;","arguments":[{"name":"condition","placeholder":true,"description":"specifies one numeric or character expression evaluation that results in a Boolean result. The result is used to decide to which code path to execute next. The condition is executed at the bottom of the loop. This means that the body of the loop always executes at least once. When the expression evaluate is true, it stops the iteration of the loop.","type":"value","supportSiteTargetFragment":"p1u8wwfprqfvown1ansfa9z1aj2f"}],"supportSiteTargetFile":"n0m6k62uodw464n1wilj792d4h6f.htm"},{"name":"DO WHILE","description":"Executes statements in a DO loop repetitively while a condition is true.","help":"DO WHILE  (condition);\n\t... more CASL statements ...;END ;","arguments":[{"name":"condition","placeholder":true,"description":"specifies one numeric or character expression evaluation that results in a Boolean result. The result is used to decide to which code path to execute next. The condition is evaluated prior to executing the body of the loop. This means the body of the loop may not execute.","type":"value","supportSiteTargetFragment":"n1mfonp99xd5wxn1eh2gaqjbtn5a"}],"supportSiteTargetFile":"n1eluc8475qg91n19c929wmapo9l.htm"},{"name":"ELSE","description":"If the expression specified by an IF statement results in a false value, the statement immediately after the ELSE statement is executed.","help":"\n                ELSE\n                statement;","supportSiteTargetFile":"n0umsovbofbxo3n13ca6wvlzp2k2.htm"},{"name":"END","description":"Ends a DO group, FUNCTION, or SELECT group processing.","help":"END ;","supportSiteTargetFile":"p0xs7yij8yqryin11ywyierymzed.htm"},{"name":"ENDEXTERNALSOURCE","description":"Marks the end of the EXTERNALSOURCE statement.","help":"ENDEXTERNALSOURCE; ","supportSiteTargetFile":"n0x7f3vzwv5bgln13p041n9uir6u.htm"},{"name":"ENDSOURCE","description":"Marks the end of the SOURCE statement.","help":"ENDSOURCE ;","supportSiteTargetFile":"n11xljv2nm1tlwn12vhi1rkmm6ob.htm"},{"name":"EXIT","description":"Exits the current block of CASL code.","help":"EXIT  *expression*;","arguments":[{"name":"expression","placeholder":true,"description":"a combination of one or more values, constants, variables, operators, and functions that are evaluated using rules and precedence to compute a result.","type":"value","supportSiteTargetFragment":"n0emmq8jsad19yn1npaqiuitjul0"}],"supportSiteTargetFile":"n0s7pf6jzbj7xon1ucv9s67vum80.htm"},{"name":"EXTERNALSOURCE","description":"Enables you to embed text in the program as a block of code and then assign the code to a given variable.","help":"EXTERNALSOURCE \n        variable-expression;\n\t<embedded-text>\n\tENDEXTERNALSOURCE ; ","arguments":[{"name":"variable-expression","placeholder":true,"description":"specifies the variable to assign the embedded text to, or an expression yielding the variable to which the text is assigned.","type":"value","supportSiteTargetFragment":"n062a33huqk7qvn1kxsygp7qhdpk"},{"name":"ENDEXTERNALSOURCE;","description":"specifies the end of the EXTERNALSOURCE statement.","type":"standalone","supportSiteTargetFragment":"n0d0lcpxdro0i4n1ab2ly555flvj"},{"name":"embedded-text","optional":true,"placeholder":true,"description":"specifies a string representation of the value.","type":"value","supportSiteTargetFragment":"p1i6pjtgp1bnnln1kdazns06o6p2"}],"supportSiteTargetFile":"p0bb3sz7wq78isn1kphb4ek0b5ni.htm"},{"name":"FILE","description":"The FILE statement changes the default output location for the PRINT statement. You can choose to write the output to an external file, the log, or ODS.","help":"FILE \n                file specification;","arguments":[{"name":"name","placeholder":true,"description":"assigns a user-supplied name to an external file at the specified location. This name can then be used to redirect the output of the PRINT statement to the specified external file. Once a name is assigned, it can be reused in future FILE statements without the need to re-specify the file path, as long as the PROC CAS session remains active.","help":"*name* *\"path to file\"*","type":"value","supportSiteTargetFragment":"p0ia5ty3ftgiten1nx3ncmm2aem5"},{"name":"ODS","description":"a predefined system name that directs tabular output to the Output Delivery System (ODS) and non-tabular data to the SAS log. This is the default behavior for the PRINT statement when no other file specification is provided.","type":"standalone","supportSiteTargetFragment":"p11awpxvbj4d95n1233wkpvht4ew"},{"name":"LOG","description":"a predefined fileref referencing the SAS log that directs all PRINT statement output, regardless of its data type, to the SAS log.","type":"standalone","supportSiteTargetFragment":"n0010h0zufgoggn1h7c5b89tf30w"}],"supportSiteTargetFile":"n069utvgdj0z4gn13ldaayhn2zc0.htm"},{"name":"FNC","description":"Lists all common functions by name and category with simple descriptions.","help":"FNC \n                category-name;","arguments":[{"name":"category-name","placeholder":true,"description":"specifies the name of the category to display functions from. For a list of category names, see .","type":"value","supportSiteTargetFragment":"p15l79uy28br50n1xbkha217rvwu"}],"supportSiteTargetFile":"p09yr5y7jtntnqn1nxs5ma6txyia.htm"},{"name":"FORMAT","description":"Associates a format with a single variable or a list of variables.","help":"FORMAT \n                variable-1...variable-N\n                format;","supportSiteTargetFile":"p1vhq3gw7jywywn1g98ehfrkfsuc.htm"},{"name":"FUNCTION","description":"Creates a new function that can be called in an expression.","help":"FUNCTION  function- name (<parameter–1><, parameter–2><, ..., parameter–n>); \n\tstatements;END ;","arguments":[{"name":"function-","placeholder":true,"description":"specifies a user-defined function name.","help":"*function- name*","type":"value","supportSiteTargetFragment":"p0ku1vbrhsws78n1rao3lu4yjy14"},{"name":"statement","placeholder":true,"description":"is any series of CASL statement.","type":"value","supportSiteTargetFragment":"n14l4ctyr3lbksn1lg98vpfsjlhd"},{"name":"parameter","optional":true,"placeholder":true,"description":"specifies a variable name that holds an argument value passed to the function when it is called.","type":"value","supportSiteTargetFragment":"n1p09faihud4u8n1lxba8lf84hra"}],"supportSiteTargetFile":"n0b36rhlbv3mnmn1j5rqeduwnbso.htm"},{"name":"FUNCTIONLIST","description":"Lists all CASL built-in functions and user defined functions by name with simple descriptions.","help":"FUNCTIONLIST  &lt;*name*&gt;;FLIST  &lt;*name*&gt;;","arguments":[{"name":"name","optional":true,"placeholder":true,"description":"specifies the name of the function to list information about.","type":"value","supportSiteTargetFragment":"n0gnd4mpchtwc2n1x15fft7rv8vr"}],"supportSiteTargetFile":"p1r5kztjknq3acn1fxrc9tk0p30c.htm"},{"name":"GLOBAL","description":"Creates a variable that can be accessed and used anywhere within a CASL program.","help":"GLOBAL  *variable*;","arguments":[{"name":"variable","placeholder":true,"description":"specifies a variable name.","type":"value","supportSiteTargetFragment":"p1h68tkl8u5lf2n1u71udpp0kf0u"}],"supportSiteTargetFile":"n1ws9zgvgn9yf1n13d5itgr0l7vn.htm"},{"name":"GOTO","description":"Transfers execution immediately to a labeled statement.","help":"GOTO  \n            label;","arguments":[{"name":"label","placeholder":true,"description":"specifies a statement label that identifies the GOTO destination. Statement labels are defined by using the Label statement.","type":"value","supportSiteTargetFragment":"p0nya8e6qjt8nxn14p5q6jpd04e9"}],"supportSiteTargetFile":"n0h7za3ud6xnrcn18bgw04kjjhhe.htm"},{"name":"IF","description":"Conditionally executes a statement based on the value of an expression.","help":"IF \n                condition\n                THEN\n                statement;\n                ELSE\n                statement;","arguments":[{"name":"THEN","description":"If the expression results in a true value, the statement immediately after the THEN argument is executed.","type":"standalone","supportSiteTargetFragment":"p1pzvi0s4cr9xvn17zmfp0vhs4pj"},{"name":"condition","placeholder":true,"description":"determines which statement executes next.","type":"value","supportSiteTargetFragment":"p1s87z1jd5d5yhn1jc29jtiigxl5"},{"name":"statement","placeholder":true,"description":"specifies any CASL statement.","type":"value","supportSiteTargetFragment":"n106cnxnbk65vjn1i571o2g4m6dk"}],"supportSiteTargetFile":"p1mbg6emq7sjwan1qaki9fwi0o3r.htm"},{"name":"Label","description":"Specifies a label target for the GOTO statement. No semicolon is required.","help":"*label*:*statement*;","arguments":[{"name":"label","placeholder":true,"description":"specifies any identifier, which is followed by a colon (:). You must specify the label argument.","type":"value","supportSiteTargetFragment":"n0uu7jhzbj0elwn1cnjqbu03e0sc"},{"name":"statement","placeholder":true,"description":"specifies any executable statement, including a null statement (;). You must specify the statement argument.","type":"value","supportSiteTargetFragment":"p1wbnsgimvlw7pn15cize3297yp0"}],"supportSiteTargetFile":"p13ji01tcuyoq8n1pi67zo9ql0kq.htm"},{"name":"LEAVE","description":"Stops processing the current loop and resumes with the next statement in the sequence.","help":"LEAVE ;","supportSiteTargetFile":"n1x5wk3xtoa6xrn1j5vuf2e4wyzg.htm"},{"name":"LOADACTIONSET","description":"Loads a SAS Cloud Analytic Services action set.","help":"LOADACTIONSET \n                “action-set-name”;","arguments":[{"name":"action-set-name","placeholder":true,"description":"specifies the name of a SAS Cloud Analytic Services action set.","type":"value","supportSiteTargetFragment":"n12prlz9f53rtqn12jrugszz1wco"}],"supportSiteTargetFile":"p024yh4rbnnxj2n1x9jrzre0up5a.htm"},{"name":"LOCAL","description":"Creates a variable that is local to a CASL function.","help":"LOCAL  *variable*;","arguments":[{"name":"variable","placeholder":true,"description":"specifies a variable name.","type":"value","supportSiteTargetFragment":"p0z40jfxpda8yfn102ay1hiqoxk9"}],"supportSiteTargetFile":"n1nq8kgyh18j2vn11agtpqc4ig1i.htm"},{"name":"Null","description":"A statement that performs no operation.","help":";","supportSiteTargetFile":"n1xqdwnm8la7vpn1t98lwvpqjx5q.htm"},{"name":"OUTPUT","description":"Sets the active output location.","help":"OUTPUT  &lt;ODS | LOG&gt;;","arguments":[{"name":"ODS","optional":true,"description":"specifies that the output is sent to an ODS destination.","type":"standaloneOrValue","supportSiteTargetFragment":"p03k4cafg0hol5n1xoam1eqqd9qz"},{"name":"LOG","optional":true,"description":"specifies that the output is sent to the SAS log.","type":"standaloneOrValue","supportSiteTargetFragment":"n00jesi5g9paihn184dfiyoskgqp"}],"supportSiteTargetFile":"p1uzyq8m6ubj01n1c4umerrtbygp.htm"},{"name":"PRINT","description":"Writes the values of constants, variables, and expressions to the current output location.","help":"PRINT  &lt;(*level*)&gt;*value-1*&lt;*value-2*&gt;...&lt;*value-N*&gt;;","arguments":[{"name":"TRACE","description":"specifies a trace level message.","type":"standalone","supportSiteTargetFragment":"p0tmruuz40xrdan1cjk2bmqd9eq7"},{"name":"DEBUG","description":"specifies a debug level message.","type":"standalone","supportSiteTargetFragment":"p0uo01fhff924gn1jdagg9gdjudi"},{"name":"INFO","description":"specifies an info level message.","type":"standalone","supportSiteTargetFragment":"p1jvdg88kh5zg4n1peup52e8y5a8"},{"name":"NOTE","description":"specifies a note level message.","type":"standalone","supportSiteTargetFragment":"n045hn7ox0k3gjn1p3sp9bwtk9h3"},{"name":"WARN","description":"specifies a warn level message.","type":"standalone","supportSiteTargetFragment":"p1wzmy7c4uve7rn1ws57gp7v1ais"},{"name":"ERROR","description":"specifies an error level message.","type":"standalone","supportSiteTargetFragment":"p0g16wbbkqt24vn1wgtfyba0xkie"},{"name":"value","optional":true,"placeholder":true,"description":"can be a constant, variable, or expression.","type":"value","supportSiteTargetFragment":"n0ibl1o1v3grlvn1i0jumtlokf21"}],"supportSiteTargetFile":"n1aqfgyttlq72xn1e5p9a6ors1sw.htm"},{"name":"PRINTLST","aliases":["plist"],"description":"Prints to the listing file defined by the application. If the value is a list, the list will be transverse and each item will be displayed. If the item is a table, it will be printed to the current output location.","help":"PRINTLST \n                expression;","arguments":[{"name":"expression","placeholder":true,"description":"A combination of one or more values, constants, variables, operators, and functions that are evaluated using rules and precedence to compute a result.","type":"value","supportSiteTargetFragment":"p0w34if0ijgwiyn1n4qqdhjhdtom"}],"supportSiteTargetFile":"p1ljndkezchi0sn178igyqr4xmn4.htm"},{"name":"RETURN","description":"Returns a value from the current function.","help":"RETURN \n            expression | value;","arguments":[{"name":"expression","placeholder":true,"description":"The result of the expression is the value returned by the function to the calling environment (or to the caller).","type":"value","supportSiteTargetFragment":"n0mxeulxvd1wkrn1k7gwfgu7fdro"},{"name":"value","placeholder":true,"description":"specifies the value that is returned from a function.","type":"value","supportSiteTargetFragment":"p15q32cuvfmn6on10rcfbq9np42o"}],"supportSiteTargetFile":"n14ex139al6rp6n1y0z3oci87mbm.htm"},{"name":"RUN","description":"Executes the previously entered SAS statements.","help":"RUN ;","supportSiteTargetFile":"n0g4upuzexr4dzn1b02318v8m1e7.htm"},{"name":"SAVERESULT","description":"Saves a result table in the variable in the form specified.","help":"Form 1: \nSAVERESULT  variable-name  <DATAOUT=<libref.>data-set-name | LIB=libref> <REPLACE | NOREPLACE>;\nForm 2: \nSAVERESULT  variable-name <CSV=\"file-name\" | FILE=output-file>  <REPLACE | NOREPLACE>;\nForm 3: \nSAVERESULT  variable-name <CASLIB=caslib-reference-name> <CASOUT=\"table-name\"> <REPLACE | NOREPLACE>;","arguments":[{"name":"variable-name","placeholder":true,"description":"specifies a variable that includes one or more result tables.","type":"value","supportSiteTargetFragment":"p1ieppd35uukobn1mac4e9s9lxer"},{"name":"CASLIB=","optional":true,"description":"specifies which caslib to use.","help":"CASLIB=*caslib-reference-name*","type":"value","supportSiteTargetFragment":"p1vvfira2ruekmn1ke6h79urqawj"},{"name":"CASOUT=","optional":true,"description":"specifies to transfer the result table to the server and store it as an in-memory table. By default, the active caslib is used but it can be overridden with the CASLIB= argument.","help":"CASOUT=\"*table-name*\"","type":"dataSet","supportSiteTargetFragment":"p12jqxvs0xmjfjn1rf1u0bx5c0tl"},{"name":"CSV=","optional":true,"description":"specifies the CSV file name. The best practice is to specify a fully qualified path. If you do not specify a fully qualified path, then SAS attempts to create the file in the current working directory for the SAS process.","help":"CSV=\"*file-name*\"","type":"value","supportSiteTargetFragment":"p0zanv03r3ryrqn1edvxmipz5yio"},{"name":"DATAOUT=","optional":true,"description":"specifies the SAS library and data set name. The default libref is Work.","help":"DATAOUT=&lt;*libref.*.&gt;*data-set-name*","type":"dataSet","supportSiteTargetFragment":"p09pk9dlp4bj2dn179opykd5hjro"},{"name":"FILE=","optional":true,"description":"specifies the external file or file reference to use.","help":"FILE=\"*external-file*\" | *fileref*","type":"choice","arguments":[{"name":"\"external-file\"","placeholder":true,"description":"specifies the file path. The best practice is to specify a fully qualified path. If you do not specify a fully qualified path, then SAS attempts to create the file in the current working directory for the SAS process.","type":"value","supportSiteTargetFragment":"n1ttokznq39rt7n1jjyfspovivh9"},{"name":"fileref","placeholder":true,"description":"specifies a SAS file reference.","type":"value","supportSiteTargetFragment":"n1m35e37w85l8an1aa6lrfxwds71"}],"supportSiteTargetFragment":"n1qo3jre8agg6kn15l9sgbibxm6b"},{"name":"LIB=","optional":true,"description":"specifies which SAS library to use. The specified libref must be a V9 engine libref.","help":"LIB=*libref*","type":"dataSet","supportSiteTargetFragment":"p1eq9acy04nby8n1ugntrmdgtpyc"},{"name":"REPLACE","optional":true,"description":"specifies to overwrite existing files or to prevent overwriting existing files. By default, SAS data sets, external files, and in-memory tables are not overwritten. Specify REPLACE to overwrite existing files.","type":"standalone","supportSiteTargetFragment":"n15v2af5pq8su3n1j2i0ascnuwjy"},{"name":"NOREPLACE","optional":true,"description":"specifies to overwrite existing files or to prevent overwriting existing files. By default, SAS data sets, external files, and in-memory tables are not overwritten. Specify REPLACE to overwrite existing files.","type":"standalone","supportSiteTargetFragment":"n15v2af5pq8su3n1j2i0ascnuwjy"}],"supportSiteTargetFile":"n0gzmqzg05qgmon1dg4fyxpq46zc.htm"},{"name":"SELECT","description":"Executes one of several statements or groups of statements.","help":"SELECT  <(select-expression)>;\n\tWHEN -1 <(when-expression-1 ..., when-expression-n> )  statement;\n\t\t<...WHEN -n (when-expression-1 ..., when-expression-n) > statement;\n\t<OTHERWISE statement>;END ;","arguments":[{"name":"(select-expression)","placeholder":true,"description":"specifies an expression that evaluates to a single value.","type":"value","supportSiteTargetFragment":"p09f47pj3fiwlcn1uf89krnc2t38"},{"name":"(when-expression)","placeholder":true,"description":"specifies any SAS expression, including a compound expression. SELECT requires you to specify at least one when-expression.","type":"value","supportSiteTargetFragment":"n0hhcar3a0acd6n1wptt1sl1tezm"},{"name":"statement","placeholder":true,"description":"specifies any executable SAS statement, including DO, SELECT, and null statements. You must specify the statement argument.","type":"value","supportSiteTargetFragment":"p0mhwnksrnjd76n12529qsa07qdf"}],"supportSiteTargetFile":"p1gkruwpyaq5iln10z0ytkhpz5ub.htm"},{"name":"SESSION","description":"Specifies a session to use for actions invoked by the program.","help":"Form 1: \nSESSION \n\t\t\t\tsession-reference;","arguments":[{"name":"session-reference","placeholder":true,"description":"specifies the name of an existing session.","type":"value","supportSiteTargetFragment":"n17ac68jgfi59xn1x978ukv56pa1"}],"supportSiteTargetFile":"n1r3j23mk5xb2hn10y5mndmymswd.htm"},{"name":"SET","description":"Controls options that modify some behaviors of CAS actions and controls corresponding messages from the SAS log.","help":"SET \n            DISP\n            <ECHOEXTSRC><LOGS><LOGS=DEBUG | NOTE | TRACE | WARN><STDJSON><WARNINGDUP><USEWIDTH>\n         ","arguments":[{"name":"DISP","optional":true,"aliases":["DISPOSITION"],"description":"specifies printing the disposition returned from a CAS action in the SAS log.","help":"DISP ","type":"choice","arguments":[{"name":"DISP","type":"standalone"}],"supportSiteTargetFragment":"n1g4093whj4cuhn15pdtwlqawodx"},{"name":"ECHOEXTSRC","optional":true,"description":"allows the embedded text in the EXTERNALSOURCE statement code block to be echoed to the SAS log.","type":"standalone","supportSiteTargetFragment":"n0ipd23kxvmkxjn132wexn4md5nw"},{"name":"LOGS","optional":true,"description":"specifies printing messages from CAS in the SAS log. The default value is TRACE.","type":"standalone","supportSiteTargetFragment":"n1mv5txepdaecun16xvkktp14ww3"},{"name":"LOGS=","optional":true,"description":"enables you to specify any one of the following options to control messages to the log:","type":"value","arguments":[{"name":"DEBUG","description":"prints all log messages except those that are displayed using the TRACE option.","type":"standalone","supportSiteTargetFragment":"n1qfqs9yhtfpvon1ju8t6ax5swqs"},{"name":"NOTE","description":"prints all log messages except those that are displayed using the DEBUG and TRACE options.","type":"standalone","supportSiteTargetFragment":"p1hofq93qkdgsun1urcamuk7as65"},{"name":"TRACE","description":"prints all log messages to the log.","type":"standalone","supportSiteTargetFragment":"n1ezub6jef3qfqn1u483mepq2b4u"},{"name":"WARN","description":"prints all log messages except those that are displayed using the DEBUG, NOTE, and TRACE options.","type":"standalone","supportSiteTargetFragment":"n1vq7i63txdnmbn1qnd620li16wa"}],"supportSiteTargetFragment":"n0ud69ud2o5oltn1tbpm3j0scbz5"},{"name":"STDJSON","optional":true,"description":"specifies that the CASL2JSON function produces only text that is conformant with the JSON standard and that the JSON2CASL function accepts only text that is conformant with the JSON standard.","type":"standalone","supportSiteTargetFragment":"n11kb8j7a6tyi3n15yqyvhukxbrn"},{"name":"USEWIDTH","optional":true,"description":"specifies the use of the defined column width of character string values in a table. Values with widths less than the defined width of the column are padded with blanks to the full defined column width. USEWIDTH affects only fixed-length character variables within a result table. Varying-length character variables are not affected.","type":"standalone","supportSiteTargetFragment":"n0b51u0oas8quxn1q4gqyqxa4rmm"},{"name":"WARNINGDUP","optional":true,"description":"specifies printing a warning message in the SAS log when two or more response dictionary entries that are returned from a CAS action have the same key. For the runCasl action, the SEND_RESPONSE function can be used by CASL code to send one or more response dictionaries from the action to the client. When the responses contain duplicate named values, the last value received from the CAS action in a response becomes the value for that key.","type":"standalone","supportSiteTargetFragment":"p1753lbwov55oyn1bholvd9nxr86"}],"supportSiteTargetFile":"n10a3hml869y4nn177ovmx0gzopx.htm"},{"name":"SOURCE","description":"Enables you to embed text in the program and assign it to a given variable.","help":"SOURCE  variable;\n\t<text>ENDSOURCE ;","arguments":[{"name":"variable","placeholder":true,"description":"The variable to assign the text to.","type":"value","supportSiteTargetFragment":"n14lq7ix1kxlj3n1gz9daxs8fwmb"},{"name":"text","optional":true,"placeholder":true,"description":"specifies a string representation of the value for the variable.","type":"value","supportSiteTargetFragment":"p1gx9brx6y5yt8n1t293aajik5wc"}],"supportSiteTargetFile":"p1nh54k4wc2sgyn1g66ietjwmwsn.htm"},{"name":"UNSET","description":"Turns off options that modify some behaviors of CAS actions and suppresses corresponding messages in the SAS log.","help":"UNSET \n            DISP\n            <ECHOEXTSRC><LOGS><STDJSON><USEWIDTH ><WARNINGDUP>;","arguments":[{"name":"DISPOSITION","optional":true,"aliases":["DISP"],"description":"specifies printing the disposition returned from a CAS action to the SAS log.","type":"standalone","supportSiteTargetFragment":"n1heqns2gobm3vn1ax3vlmdf17r4"},{"name":"ECHOEXTSRC","optional":true,"description":"prevents SAS from echoing the lines gathered by the EXTERNALSOURCE statement to the SAS log.","type":"standalone","supportSiteTargetFragment":"n16sa8b63k8jjvn11trub992vev7"},{"name":"LOGS","optional":true,"description":"specifies printing messages from CAS to the SAS log.","type":"standalone","supportSiteTargetFragment":"n0em1yo2aqjfx6n17x1taxsayiwb"},{"name":"STDJSON","optional":true,"description":"specifies that the CASL2JSON function can produce output text that is not strictly conformant with the JSON standard and that the JSON2CASL function can accept text that is not strictly conformant with the JSON standard.","type":"standalone","supportSiteTargetFragment":"p1qep77mbbo6rzn1tydhskua09bu"},{"name":"USEWIDTH","optional":true,"description":"specifies defining the width of string columns in a table based on the maximum width that is used for each character value, instead of basing the width on a globally defined width for all values. USEWIDTH affects only fixed-length character variables within a result table. Varying-length character variables are not affected.","type":"standalone","supportSiteTargetFragment":"p18s58lljtvbdon1ahusthz4n8rp"},{"name":"WARNINGDUP","optional":true,"description":"specifies that no warnings for duplicate response dictionary entries are printed.","type":"standalone","supportSiteTargetFragment":"n0e35bxomgcc9en1bqml313t944j"}],"supportSiteTargetFile":"n0hl6s39lvhj7en187nu08n2hrbb.htm"},{"name":"UPLOAD","description":"Transfers a file from the SAS client to the server. After data transfer, the server loads the data into an in-memory table.","help":"UPLOAD  \n\tPATH= path-to-file\n\t<CASOUT= {output-table-options}>\n\t<IMPORTOPTIONS= {FILETYPE= “BASESAS” |  “CSV” | “DTA” | “ESP” | “EXCEL” | “FMT” | “EXCEL” | “HDAT” | “JMP” | “LASR” | “SPSS” | “XLSX”<, fileType-specific-parameters>}>;","arguments":[{"name":"PATH=","description":"specifies the path to the file to upload. The path must be fully qualified from a directory that the SAS client can access.","help":"PATH=*path-to-file*","type":"value","supportSiteTargetFragment":"n0cr246jop9pt2n15alwsb4jq6at"},{"name":"CASOUT=","optional":true,"description":"specifies the settings for a basic output table. The following parameters can be specified:\n• CASLIB= “<i>string</i>”\n• INDEXVARS={ “<i>variable-name-1” &lt;, “variable-name-2, ” ...&gt;</i>}\n• LABEL= “<i>string</i>”\n• NAME= “<i>table-name</i>”\n• PROMOTE=TRUE | FALSE\n• REPLACE=TRUE | FALSE\n• REPLICATION=<i>integer</i>","help":"CASOUT=                      *output-table-options*","type":"dataSet","supportSiteTargetFragment":"n0wkalseuau078n1pp8wnfm76nqr"},{"name":"IMPORTOPTIONS=","optional":true,"description":"specifies the file format and options. The value that you specify for the fileType parameter determines the other parameters that apply. For more information about the fileType parameter, see \"importOptions\" in the Upload action.","help":"IMPORTOPTIONS={\"BASESAS\" | \"CSV\" | \"DTA\" | \"ESP\" | \"EXCEL\" | \"FMT\" | \"HDAT\" | \"JMP\" | \"LASR\" | \"SPSS\" | \"XLSX\"&lt;, *fileType-specific-parameters*&gt;}","type":"standaloneOrValue","arguments":[{"name":"\"BASESAS\"","type":"standalone"},{"name":"\"CSV\"","type":"standalone"},{"name":"\"DTA\"","type":"standalone"},{"name":"\"ESP\"","type":"standalone"},{"name":"\"EXCEL\"","type":"standalone"},{"name":"\"FMT\"","type":"standalone"},{"name":"\"HDAT\"","type":"standalone"},{"name":"\"JMP\"","type":"standalone"},{"name":"\"LASR\"","type":"standalone"},{"name":"\"SPSS\"","type":"standalone"},{"name":"\"XLSX\"","type":"standalone"}],"supportSiteTargetFragment":"n1syrfvgppcxxrn1etf5r4sz8f27"}],"supportSiteTargetFile":"p0snxsdr4lq4ngn19lhlxwrxobh8.htm"}],"interactive":true,"supportSiteInformation":{"docsetId":"proccas","docsetVersion":"v_002","docsetTargetFile":"n1gq4olyaoyw7kn1g4hvz6gyoxoj.htm"}}