{"name":"CAUSALDISCOVERY","statements":[{"name":"PROC CAUSALDISCOVERY","description":"The PROC CAUSALDISCOVERY and VAR statements are required. Note that the procedure does nothing if you do not specify a SIMULATE, LEARN, or EVALUATE statement. By default, the procedure uses output tables from one statement as input for another statement when you specify any of these three statements together. If you specify an input table in the Omitted Options column, it is ignored unless it existed on the libref before the procedure call.The directed acyclic graph (DAG) is critical for causal inference, which has been widely applied in many fields, including machine learning, artificial intelligence (AI), economics, finance, medicine, and so on. However, usually the structure of a DAG must be provided by experts, because learning the structure of a DAG is a well-known NP-hard problem. The CAUSALDISCOVERY procedure performs DAG structure learning by using the topological order permutation (TOP) algorithm, which is fast and accurate; it can reach 100% accuracy in many cases, even when there are hundreds of variables.","help":"PROC CAUSALDISCOVERY                  ; \n\tDISPLAY                      <table-list ><options>                     ;\n                \n\tDISPLAYOUT table-spec-list<options>                     ;\n                \n\tEVALUATE <ESTDAG=libref.data-table<TRUEDAG=libref.data-table>><options>                     ;\n                \n\tLEARN <DATA=libref.data-table<OUTDAG=libref.data-table>><options>                     ;\n                \n\tSIMULATE <OUT=libref.data-table<OUTDATA=libref.data-table>><options>                     ;\n                \n\tVAR <variable-list>                     ;\n            "},{"name":"DISPLAY","description":"The DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement is similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve performance when a large number of tables could be generated (such as in BY-group processing). The DISPLAY statement produces only the requested tables, but ODS statements generate all the tables and then keep the requested tables.","help":"DISPLAY  &lt;table-list&gt; &lt;/ options&gt;;","arguments":[{"name":"table-list","placeholder":true,"description":"You can specify the table-list as a list of table names, paths, partial pathnames, and regular expressions.","type":"dataSet"},{"name":"CASESENSITIVE","optional":true,"followsDelimiter":"/","description":"performs a case-sensitive comparison of table names in the table-list to display table names when tables are subsetted for display. To preserve case, you must enclose table names in the table-list in quotation marks.","type":"standalone"},{"name":"EXCLUDE","optional":true,"followsDelimiter":"/","description":"displays all display tables except those that you specify in the table-list.","type":"standalone"},{"name":"EXCLUDEALL","optional":true,"followsDelimiter":"/","description":"suppresses display of all tables. This option takes precedence over the other options.","type":"standalone"},{"name":"TRACE","optional":true,"followsDelimiter":"/","description":"displays the display table names, labels, and paths.","type":"standalone"}]},{"name":"DISPLAYOUT","description":"The DISPLAYOUT statement enables you to create output tables from your displayed output. This statement is similar to the ODS OUTPUT statement.","help":"DISPLAYOUT  table-spec-list &lt;/ options&gt;;","arguments":[{"name":"table-spec-list","placeholder":true,"description":"The table-spec-list specifies a list of output tables to create. Each entry in the list has either a key=value format or a key format: key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the output table name. key specifies key as the ODS table name and also as the output table name.","type":"dataSet"},{"name":"CASESENSITIVE","optional":true,"followsDelimiter":"/","description":"performs a case-sensitive comparison of table names in the table-list to display table names when tables are subsetted for display. To preserve case, you must enclose table names in the table-list in quotation marks.","type":"standalone"},{"name":"INCLUDEALL","optional":true,"followsDelimiter":"/","description":"creates output tables for all display tables. The name of the created output table is the same as the name of the corresponding display table. If you specify this option, the table-spec-list specification is ignored.","type":"standalone"},{"name":"NOREPLACE","optional":true,"followsDelimiter":"/","description":"does not replace any existing output table of the same name.","type":"standalone"}]},{"name":"EVALUATE","description":"The EVALUATE statement specifies the options that are related to the accuracy evaluation of the DAG structure learning.","help":"EVALUATE  &lt;ESTDAG=libref.data-table&gt; &lt;TRUEDAG=libref.data-table&gt; &lt;/ options&gt;;","arguments":[{"name":"ESTDAG=","description":"specifies the input data table that contains the adjacency matrix for the estimated DAGs. If you specify both the EVALUATE and LEARN statements, you should specify the OUTDAG= option table in the LEARN statement but not specify the ESTDAG= option table in the EVALUATE statement. This is because the OUTDAG= output table is used as the ESTDAG= input table in the EVALUATE statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"ESTDAG=*libref.data-table*","type":"dataSet"},{"name":"ESTADJ=","description":"specifies the input data table that contains the adjacency matrix for the estimated DAGs. If you specify both the EVALUATE and LEARN statements, you should specify the OUTDAG= option table in the LEARN statement but not specify the ESTDAG= option table in the EVALUATE statement. This is because the OUTDAG= output table is used as the ESTDAG= input table in the EVALUATE statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"ESTADJ=*libref.data-table*","type":"dataSet"},{"name":"TRUEDAG=","description":"specifies the input data table that contains the adjacency matrix for the true DAG. If you specify both the EVALUATE and SIMULATE statements, you should specify the OUT= option table in the SIMULATE statement but not specify the TRUEDAG= option table in the EVALUATE statement. This is because the OUT= output table is used as the TRUEDAG= input table in the EVALUATE statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"TRUEDAG= *libref.data-table*","type":"dataSet"},{"name":"TRUEDAJ=","description":"specifies the input data table that contains the adjacency matrix for the true DAG. If you specify both the EVALUATE and SIMULATE statements, you should specify the OUT= option table in the SIMULATE statement but not specify the TRUEDAG= option table in the EVALUATE statement. This is because the OUT= output table is used as the TRUEDAG= input table in the EVALUATE statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the input data table.","help":"TRUEDAJ= *libref.data-table*","type":"dataSet"},{"name":"OUT=","optional":true,"followsDelimiter":"/","description":"writes the accuracy metrics to the specified output data table. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUT=*libref.data-table*","type":"dataSet"}]},{"name":"LEARN","description":"The LEARN statement specifies the options that are related to the DAG structure learning.","help":"LEARN  &lt;DATA=libref.data-table&gt; &lt;OUTDAG=libref.data-table&gt; &lt;/ options&gt;;","arguments":[{"name":"DATA=","optional":true,"description":"specifies the input data table. If you specify both the LEARN and SIMULATE statements, you should specify the OUTDATA= option table in the SIMULATE statement but not specify the DATA= option table in the LEARN statement. This is because the OUTDATA= output table is used as the DATA= input table in the LEARN statement.","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"OUTDAG=","optional":true,"description":"writes the estimated DAGs to the specified output data table. You must specify this option if you also specify the EVALUATE statement; this table is then used as the ESTDAG= input table in the EVALUATE statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTDAG=*libref.data-table*","type":"dataSet"},{"name":"ALGORITHM=","optional":true,"followsDelimiter":"/","description":"specifies the DAG structure learning algorithm, by default, ALGORITHM=TOP.","type":"value","arguments":[{"name":"MCV","followsDelimiter":"/","description":"specifies the minimizing conditional variance (MCV) algorithm.","type":"standalone"},{"name":"TOP","followsDelimiter":"/","description":"specifies the topological order permutation (TOP) algorithm.","type":"standalone"}]},{"name":"ALPHA=","optional":true,"followsDelimiter":"/","description":"specifies the significance level on whose basis the edges in the DAG are determined. If you specify a number-list, several DAGs are included in the OUTDAG= option table, one for each value in the number-list. The number and all numbers in the number-list must be between 0 and 1. By default, ALPHA=0.000001.","help":"ALPHA=*number*","type":"value"},{"name":"GPU","optional":true,"followsDelimiter":"/","description":"specifies that the DAG structure learning algorithm perform calculations by using graphics processing unit (GPU) hardware. When ALGORITHM=MCV, this option is ignored.","type":"standalone"},{"name":"INITMETHOD=","optional":true,"followsDelimiter":"/","description":"specifies the method to use for determining the initial topological order, by default, INITMETHOD=VARIANCE.","type":"value","arguments":[{"name":"DATA","followsDelimiter":"/","description":"matches the order of the variables in the VAR statement.","type":"standalone"},{"name":"RANDOM","followsDelimiter":"/","description":"determines the order randomly.","type":"standalone"},{"name":"VARIANCE","followsDelimiter":"/","description":"determines the order by using the ascending order of variance of variables in the VAR statement.","type":"standalone"}]},{"name":"MAXITER=","optional":true,"followsDelimiter":"/","description":"specifies the maximum number of iterations. The number must be a nonnegative integer. By default, MAXITER=200.","help":"MAXITER=*number*","type":"value"},{"name":"OUT=","optional":true,"followsDelimiter":"/","description":"writes the initial and final topological orders, as well as the matrices of parameter estimates, standard errors, t values, and p-values to the specified output data table. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUT=*libref.data-table*","type":"dataSet"},{"name":"OUTITERHIST=","optional":true,"followsDelimiter":"/","description":"writes the iteration history to the specified output data table. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTITERHIST=*libref.data-table*","type":"dataSet"},{"name":"OUTITER=","optional":true,"followsDelimiter":"/","description":"writes the iteration history to the specified output data table. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTITER=*libref.data-table*","type":"dataSet"},{"name":"OUTPATH=","optional":true,"followsDelimiter":"/","description":"writes the parents and children of variables and paths of the estimated DAGs to the specified output data table.libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTPATH=*libref.data-table*","type":"dataSet"},{"name":"OUTP=","optional":true,"followsDelimiter":"/","description":"writes the parents and children of variables and paths of the estimated DAGs to the specified output data table.libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTP=*libref.data-table*","type":"dataSet"},{"name":"SEED=","optional":true,"followsDelimiter":"/","description":"specifies the random number seed value for the random number generator. If the seed value is 0, a random number stream is generated by using the time of day from the computer’s clock. Seed values greater than 0 generate reproducible random number sequences. By default, SEED=1.","help":"SEED=*number*","type":"value"}]},{"name":"SIMULATE","description":"TThe SIMULATE statement specifies the options to be used to first simulate a DAG and then generate the observations from the simulated DAG.","help":"SIMULATE  &lt;OUT=libref.data-table&gt; &lt;OUTDATA=libref.data-table&gt; &lt;/ options&gt;;","arguments":[{"name":"OUT=","optional":true,"description":"writes the simulated DAG to the specified output data table. You must specify this option if you also specify the EVALUATE statement; this table is then used as the TRUEDAG= input table in the EVALUATE statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUT=*libref.data-table*","type":"dataSet"},{"name":"OUTDAG=","optional":true,"description":"writes the simulated DAG to the specified output data table. You must specify this option if you also specify the EVALUATE statement; this table is then used as the TRUEDAG= input table in the EVALUATE statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTDAG=*libref.data-table*","type":"dataSet"},{"name":"OUTDATA=","optional":true,"description":"writes the simulated data to the specified output data table. You must specify this option if you also specify the LEARN statement; this table is then used as the DATA= input table in the LEARN statement. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTDATA=*libref.data-table*","type":"dataSet"},{"name":"NEDGES=","optional":true,"followsDelimiter":"/","description":"specifies the number of edges in the DAG. The number must be a nonnegative integer. By default, NEDGES=min(d(d-1)/2, 2d), where d is the number of nodes or variables.","help":"NEDGES=*number*","type":"value"},{"name":"E=","optional":true,"followsDelimiter":"/","description":"specifies the number of edges in the DAG. The number must be a nonnegative integer. By default, NEDGES=min(d(d-1)/2, 2d), where d is the number of nodes or variables.","help":"E=*number*","type":"value"},{"name":"NOBS=","optional":true,"followsDelimiter":"/","description":"specifies the number of observations in the OUTDATA= option table. The number must be a positive integer. By default, NOBS=10000.","help":"NOBS=*number*","type":"value"},{"name":"N=","optional":true,"followsDelimiter":"/","description":"specifies the number of observations in the OUTDATA= option table. The number must be a positive integer. By default, NOBS=10000.","help":"N=*number*","type":"value"},{"name":"SAMPLESIZE=","optional":true,"followsDelimiter":"/","description":"specifies the number of observations in the OUTDATA= option table. The number must be a positive integer. By default, NOBS=10000.","help":"SAMPLESIZE=*number*","type":"value"},{"name":"NOISE","optional":true,"followsDelimiter":"/","description":"specifies how the noise terms in the structural causal model are generated.","help":"NOISE(DIST=*distribution*)","type":"value","arguments":[{"name":"DIST=","followsDelimiter":"/","description":"","help":"DIST=*distribution*","type":"value","arguments":[{"name":"GAUSSIAN","followsDelimiter":"/","description":"specifies the Gaussian distribution for the noise. You can specify the STD= option or the VAR= option, but not both.","help":"GAUSSIAN(*gaussian-options*)","type":"value","arguments":[{"name":"MEAN=","followsDelimiter":"/","description":"specifies the mean for the distribution. By default, MEAN=0.","help":"MEAN=*number*","type":"value"},{"name":"STD=","followsDelimiter":"/","description":"specifies the mean for the distribution. By default, MEAN=0.","help":"STD=*number*","type":"value"},{"name":"VAR=","followsDelimiter":"/","description":"specifies the variance for the distribution. By default, VAR=1.","help":"VAR=*number*","type":"value"}]},{"name":"NORMAL","followsDelimiter":"/","description":"specifies the Gaussian distribution for the noise. You can specify the STD= option or the VAR= option, but not both.","help":"NORMAL(*gaussian-options*)(","type":"value","arguments":[{"name":"MEAN=","followsDelimiter":"/","description":"specifies the mean for the distribution. By default, MEAN=0.","help":"MEAN=*number*","type":"value"},{"name":"STD=","followsDelimiter":"/","description":"specifies the mean for the distribution. By default, MEAN=0.","help":"STD=*number*","type":"value"},{"name":"VAR=","followsDelimiter":"/","description":"specifies the variance for the distribution. By default, VAR=1.","help":"VAR=*number*","type":"value"}]}]}]},{"name":"OUTORDER=","optional":true,"followsDelimiter":"/","description":"writes the topological order of the simulated DAG to the specified output data table. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"OUTORDER=*libref.data-table*","type":"dataSet"},{"name":"OUTPARM=","optional":true,"followsDelimiter":"/","description":"writes the parameter values to the specified output data table. libref.data-table is a two-level name, where libref. refers to the library, and data-table specifies the name of the output data table.","help":"OUTPARM=*libref.data-table*","type":"dataSet"},{"name":"PARM","optional":true,"followsDelimiter":"/","description":"specifies how to generate the parameter values that represent the weights of the edges.","help":"PARM(DIST=*distribution*)","type":"value","arguments":[{"name":"DIST=","followsDelimiter":"/","description":"","help":"DIST=*distribution*","type":"value","arguments":[{"name":"UNIFORM","followsDelimiter":"/","description":"specifies the uniform distribution for the parameter values. The range of the uniform distribution is (LB, EXCLLB] U [EXCLUB, UB). The middle (EXCLLB, EXCLUB) range is excluded to avoid numerical unstability in the simulated data set, as is common practice in the DAG literature.","help":"UNIFORM(*uniform-options*)","type":"value","arguments":[{"name":"LB=","followsDelimiter":"/","description":"specifies the lower bound of the distribution. By default, LB=–1.","help":"LB=*number*","type":"value"},{"name":"EXCLLB=","followsDelimiter":"/","description":"specifies the lower bound of the excluded range. By default, EXCLLB=–0.5.","help":"EXCLLB=*number*","type":"value"},{"name":"EXCLUB=","followsDelimiter":"/","description":"specifies the upper bound of the excluded range. By default, EXCLUB=0.5.","help":"EXCLUB=*number*","type":"value"},{"name":"UB=","followsDelimiter":"/","description":"specifies the upper bound of the distribution. By default, UB=1.","help":"UB=*number*","type":"value"}]}]}]},{"name":"SEED=","optional":true,"followsDelimiter":"/","description":"specifies the random number seed value for the random number generator. If the seed value is 0, a random number stream is generated by using the time of day from the computer’s clock. Seed values greater than 0 generate reproducible random number sequences. By default, SEED=1.","help":"SEED=*number*","type":"value"}]},{"name":"VAR","description":"The VAR statement specifies the variable names in the input data table that you specify in the DATA= option in the LEARN statement. If you omit the DATA= option in the LEARN statement, or if you omit the LEARN statement, the VAR statement creates the list of variable names for the SIMULATE and EVALUATE statements.","help":"VAR  *variable-list*"}],"supportSiteInformation":{"docsetId":"casecon","docsetVersion":"latest","docsetTargetFile":"casecon_causaldiscovery_toc.htm"}}