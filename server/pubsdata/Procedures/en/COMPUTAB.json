{"name":"COMPUTAB","statements":[{"name":"PROC COMPUTAB","description":"The COMPUTAB (computing and tabular reporting) procedure produces tabular reports generated using a programmable data table. † The COMPUTAB procedure is especially useful when you need both the power of a programmable spreadsheet and a report generation system, but you want to set up a program to run in a batch mode and generate routine reports. † With PROC COMPUTAB, you can select a subset of observations from the input data set, define the format of a table, operate on its row and column values, and create new columns and rows. Access to individual table values is available when needed. † The COMPUTAB procedure can tailor reports to almost any desired specification and provide consolidation reports over summarization variables. The generated report values can be stored in an output data set. PROC COMPUTAB is especially useful in creating tabular reports such as income statements, balance sheets, and other row and column reports.","help":"PROC COMPUTAB <CDEC=d> <CSPACE=n> <CWIDTH=w> <DATA=SAS-data-set> <FUZZ=value> <INITMISS> <NOPRINT> <NORTR> <NOTRANSPOSE> <OPTIONS> <OUT=SAS-data-set> <RTS=n> <SUMONLY>;     \n\tABORT <ABEND> <CANCEL> <CANCEL FILE> ...;\n    \n\tARRAY <_ALL_> <_NUMERIC_> <_TEMPORARY_> ...;\n    \n\tATTRIB <FORMAT=format> <INFORMAT=informat> <LABEL='label'> ...;\n    \n\tBY variables ;\n    \n\tCALL routine(parameter-1<, ...parameter-n>);\n    \n\tCELL cell_names / FORMAT= format ;\n    \n\tCOLUMNS <CHAR> <MTITLE=\"text\"> <_LABEL_> ...;\n    \n\tDELETE;\n    \n\tDO <OVER> <> <> ...;\n    \n\t;\n    \n\t;\n    \n\tELSE <DO> <IF> <THEN> ...;\n    \n\tEND;\n    \n\tGOTO label;\n    \n\tIF <DO> <THEN> <WHEN> ...;\n    \n\tINIT anchor-name [locator-name] values [locator-name values] ;\n    \n\t;\n    \n\tLINK label;\n    \n\tPUT <_ALL_> <_INFILE_> <_ODS_> ...;\n    \n\tRETAIN <element-list(s) <initial-value(s) |;\n    \n\tROWS <CHAR> <_LABEL_> <_NAME_> ...;\n    \n\t;\n    \n\tSTOP;\n    \n\tSUMBY variables ;\n","arguments":[{"name":"CDEC=","optional":true,"description":"Specifies the default number of decimal places for printing. The default is CDEC=2.","help":"CDEC=*d*","type":"value"},{"name":"CSPACE=","optional":true,"description":"Specifies the default number of spaces to insert between columns. The value of the CSPACE= option is used as the default value for the +n option in the COLUMNS statement. The default is CSPACE=2.","help":"CSPACE=*n*","type":"value"},{"name":"CWIDTH=","optional":true,"description":"Specifies a default column width for the report. The default is CWIDTH=9. The width must be in the range of 1–32.","help":"CWIDTH=*w*","type":"value"},{"name":"DATA=","optional":true,"description":"Names the SAS data set that contains the input data. If this option is not specified, the last created data set is used. If you are not reading a data set, use DATA=_NULL_.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"FUZZ=","optional":true,"description":"Specifies the criterion to use when testing for 0. If a number is within the FUZZ= value of 0, the number is set to 0.","help":"FUZZ=*value*","type":"value"},{"name":"INITMISS","optional":true,"description":"Initializes the COMPUTAB data table to missing rather than to 0.","type":"standalone"},{"name":"NOPRINT","optional":true,"description":"Suppresses all printed output. Use the NOPRINT option with the OUT= option to produce an output data set but no printed reports.","type":"standalone"},{"name":"NORTR","optional":true,"description":"Suppresses the printing of row titles on each page. The NORTR (no row-title repeat) option is useful to suppress row titles when report pages are to be joined together in a larger report.","type":"standalone"},{"name":"NOTRANSPOSE","optional":true,"aliases":["NOTRANS"],"description":"Prevents the transposition of the input data set in building the COMPUTAB report tables. The NOTRANS option causes input data set variables to appear among the columns of the report rather than among the rows.","type":"standalone"},{"name":"OPTIONS","optional":true,"description":"Lists PROC COMPUTAB option values. The option values appear on a separate page preceding the procedure’s normal output.","type":"standalone"},{"name":"OUT=","optional":true,"description":"Names the SAS data set to contain the output data.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"RTS=","optional":true,"description":"Specifies the default number of spaces to be inserted before row titles when row titles appear after the first printed column. The default row-title spacing is RTS=2.","help":"RTS=*n*","type":"value"},{"name":"SUMONLY","optional":true,"description":"Suppresses printing of detailed reports. When the SUMONLY option is used, PROC COMPUTAB generates and prints only consolidation tables as specified in the SUMBY statement.","type":"standalone"}]},{"name":"ABORT","description":"Stops executing the current DATA step, SAS job, or SAS session. n is an integer value that enables you to specify a condition code: o when used with the CANCEL argument, the value is placed in the SYSINFO automatic macro variable o when not used with the CANCEL argument, the error code that is returned by SAS is ERROR. The value of ERROR depends on the operating system. The condition code n is returned to the operating system as the final SAS system exit code.","help":"ABORT &lt;ABEND&gt; &lt;CANCEL&gt; &lt;CANCEL FILE&gt; ...","arguments":[{"name":"ABEND","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the ABEND option of the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment; further action is based on how your operating environment and your site treat jobs that end abnormally. o windowing environment and interactive line mode","type":"standalone"},{"name":"CANCEL","optional":true,"description":"Causes the cancellation of the current submitted statements. The results depend on the method of operation: o batch mode and noninteractive mode o The entire SAS program and SAS system are terminated. o The error message is written to the SAS log. o windowing environment and interactive line mode o It only clears the current submitted program. o Other subsequent submitted programs are not affected. o The error message is written to the SAS log. o workspace server and stored process server o It only clears currently submitted program. o Other subsequent submit calls are not affected. o The error message is written to the SAS log. o SAS IntrNet application server","type":"standalone"},{"name":"CANCEL","optional":true,"description":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. Other submitted source statements will be executed after the autoexec or %INCLUDE file.","help":"CANCEL FILE","type":"standalone"},{"name":"NOLIST","optional":true,"description":"Suppresses the output of all variables to the SAS log. Requirement: NOLIST must be the last option in the ABORT statement.","type":"standalone"},{"name":"RETURN","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the RETURN option in the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment with a condition code indicating an error. o windowing environment and interactive line mode","type":"standalone"}]},{"name":"ARRAY","description":"Defines the elements of an array.","help":"ARRAY &lt;_ALL_&gt; &lt;_NUMERIC_&gt; &lt;_TEMPORARY_&gt; ...","arguments":[{"name":"_ALL_","optional":true,"description":"Specifies all variables.","type":"standalone"},{"name":"_CHARACTER_","optional":true,"description":"Specifies all character variables.","type":"standalone"},{"name":"_NUMERIC_","optional":true,"description":"Specifies all numeric variables.","type":"standalone"},{"name":"_TEMPORARY_","optional":true,"description":"Creates a list of temporary data elements.","type":"standalone"}]},{"name":"ATTRIB","description":"Associates a format, informat, label, and length with one or more variables.","help":"ATTRIB &lt;FORMAT=format&gt; &lt;INFORMAT=informat&gt; &lt;LABEL='label'&gt; ...","arguments":[{"name":"FORMAT=","optional":true,"description":"Associates a format with variables in a variable-list.","help":"FORMAT=*format*","type":"value"},{"name":"INFORMAT=","optional":true,"description":"Associates an informat with variables in a variable-list.","help":"INFORMAT=*informat*","type":"value"},{"name":"LABEL=","optional":true,"description":"Associates a label with variables in a variable-list.","help":"LABEL='*label*'","type":"value"},{"name":"LENGTH=","optional":true,"description":"Specifies the length of variables in a variable-list.","type":"value"},{"name":"TRANSCODE=","optional":true,"description":"Specifies whether character variables can be transcoded.","help":"TRANSCODE=YES | NO","type":"choice","arguments":[{"name":"YES","description":"Specifies that character variables can be transcoded.","type":"standalone"},{"name":"NO","description":"Suppresses transcoding.","type":"standalone"}]}]},{"name":"BY","description":"A BY statement can be used with PROC COMPUTAB to obtain separate reports for observations in groups defined by the BY variables. At the beginning of each BY group, before PROC COMPUTAB reads any observations, all table values are set to 0 unless the INITMISS option or an INIT statement is specified.","help":"BY variables "},{"name":"CALL","description":"Invokes a SAS CALL routine.","help":"CALL routine(parameter-1&lt;, ...parameter-n&gt;)"},{"name":"CELL","description":"The CELL statement specifies the format for printing a particular cell in the COMPUTAB data table. Cell variable names are compound SAS names of the form name1.name2, where name1 is the name of a row variable and name2 is the name of a column variable. Formats specified with the FORMAT= option in CELL statements override formats specified in ROWS and COLUMNS statements.","help":"CELL cell_names / FORMAT= format "},{"name":"COLUMNS","aliases":["COLUMN","COLS","COL"],"description":"COLUMNS statements define the columns of the report. The COLUMNS statement can be abbreviated COLUMN, COLS, or COL. The specified column names must be valid SAS names. You can use as many COLUMNS statements as you need. A COLUMNS statement can describe more than one column, and one column of the report can be described with several different COLUMNS statements. The order of the columns on the report is determined by the order of appearance of column names in COLUMNS statements. The first occurrence of the name determines where in the sequence of columns a particular column is located.","help":"COLUMNS &lt;CHAR&gt; &lt;MTITLE=\"text\"&gt; &lt;_LABEL_&gt; ...","arguments":[{"name":"CHAR","optional":true,"followsDelimiter":"/","description":"Indicates that the columns contain character data.","type":"standalone"},{"name":"FORMAT=","optional":true,"followsDelimiter":"/","aliases":["F="],"description":"Specifies a format for printing the values of the columns listed in the COLUMNS statement.","help":"FORMAT=*format*","type":"value"},{"name":"LJC","optional":true,"followsDelimiter":"/","description":"Left-justifies the column headings for the columns listed. By default, columns are right- justified. When the LJC (left-justify character) option is used, any character row values in the column are also left-justified rather than right-justified.","type":"standalone"},{"name":"MTITLE=","optional":true,"followsDelimiter":"/","aliases":["M="],"description":"Specifies that the string of characters enclosed in quotes is a master title to be centered over all the columns listed in the COLUMNS statement. The list of columns must be consecutive. Special characters (\"+\", \"*\", \"=\", and so forth) placed on either side of the text expand to fill the space.","help":"MTITLE=\"*text*\"","type":"value"},{"name":"NOPRINT","optional":true,"followsDelimiter":"/","description":"Suppresses printing of columns listed in the COLUMNS statement. This option enables you to create columns to be used for intermediate calculations without having those columns printed.","type":"standalone"},{"name":"NOZERO","optional":true,"followsDelimiter":"/","description":"Suppresses printing of columns when all the values in a column are 0 or missing. Numbers within the FUZZ= value of 0 are treated as 0.","type":"standalone"},{"name":"ZERO=","optional":true,"followsDelimiter":"/","description":"Substitutes \"text\" when the value in the column is 0 or missing.","help":"ZERO=\"*text*\"","type":"value"},{"name":"_LABEL_","optional":true,"followsDelimiter":"/","description":"Uses labels, if provided, in the heading for the column or columns listed in the COLUMNS statement. If a label has not been provided, the name of the column is used.","type":"standalone"},{"name":"_NAME_","optional":true,"followsDelimiter":"/","description":"Uses column names in column headings for the columns listed in the COLUMNS statement. This option allows headings (\"text\") and names to be combined in a heading.","type":"standalone"},{"name":"_PAGE_","optional":true,"followsDelimiter":"/","description":"Starts a new page of the report before printing each of the columns in the list that follows.","type":"standalone"},{"name":"_TITLES_","optional":true,"followsDelimiter":"/","description":"Prints row titles before each column in the list. The _TITLES_ option can be abbreviated as _TITLE_.","type":"standalone"}]},{"name":"DELETE","description":"Stops processing the current observation.","help":"DELETE"},{"name":"DO","description":"","help":"DO &lt;OVER&gt; &lt;&gt; &lt;&gt; ...","arguments":[{"name":"BY","optional":true,"description":"Precedes an increment integer (other than 0) or an expression that generates an integer to be added to the value of the index variable in each iteration of the DO loop.","type":"standalone"},{"name":"OVER","optional":true,"description":"","type":"standalone"},{"name":"TO","optional":true,"description":"Separates the start and stop integers or expressions that control the number of times the portion of the DATA step between the iterative DO and END statements is processed.","type":"standalone"},{"name":"UNTIL","optional":true,"description":"","type":"standalone"},{"name":"WHILE","optional":true,"description":"","type":"standalone"}]},{"name":"DO UNTIL","description":"...more SAS statements... END","help":""},{"name":"DO WHILE","description":"","help":""},{"name":"ELSE","description":"If the condition in an IF-THEN statement is false and an ELSE statement is present, then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"DO","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"GO TO","aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GOTO label"},{"name":"IF","description":"","help":"IF &lt;DO&gt; &lt;THEN&gt; &lt;WHEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"GO","optional":true,"aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GO TO","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"PUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"SET","optional":true,"description":"Reads an observation from one or more SAS data sets.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"},{"name":"WHEN","optional":true,"description":"WHEN statement in an IF-THEN-WHEN construct.","type":"standalone"}]},{"name":"INIT","description":"The INIT statement initializes values in the COMPUTAB data table at the beginning of each execution of the procedure and at the beginning of each BY group if a BY statement is present. The INIT statement in the COMPUTAB procedure is similar in function to the RETAIN statement in the DATA step, which initializes values in the program data vector. The INIT statement can be used at any point after the variable to which it refers has been defined in COLUMNS or ROWS statements. Each INIT statement initializes one row or column. Any number of INIT statements can be used. The first term after the keyword INIT, anchor-name, anchors initialization to a row or column. If anchor-name is a row name, then all locator-name values in the statement are columns of that row. If anchor-name is a column name, then all locator-name values in the statement are rows of that column.","help":"INIT anchor-name [locator-name] values [locator-name values] "},{"name":"LABEL","description":"","help":""},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK label"},{"name":"PUT","description":"Writes lines to the SAS log, to the SAS output window, or to an external location that is specified in the most recent FILE statement.","help":"PUT &lt;_ALL_&gt; &lt;_INFILE_&gt; &lt;_ODS_&gt; ...","arguments":[{"name":"OVERPRINT","optional":true,"description":"Causes the values that follow the keyword OVERPRINT to print on the most recently written output line.","type":"standalone"},{"name":"_ALL_","optional":true,"description":"Writes the values of all variables, which includes automatic variables, that are defined in the current DATA step by using named output.","type":"standalone"},{"name":"_BLANKPAGE_","optional":true,"description":"Advances the pointer to the first line of a new page, even when the pointer is positioned on the first line and the first column of a new page.","type":"standalone"},{"name":"_INFILE_","optional":true,"description":"Writes the last input data record that is read either from the current input file or from the data lines that follow a DATELINES statement.","type":"standalone"},{"name":"_ODS_","optional":true,"description":"Moves data values for all columns (as defined by the ODS option in the FILE statement) into a special buffer, from which it is eventually written to the data component. The ODS option in the FILE statement defines the structure of the data component that holds the results of the DATA step.","type":"standalone"},{"name":"_PAGE_","optional":true,"description":"Advances the pointer to the first line of a new page. SAS automatically begins a new page when a line exceeds the current PAGESIZE= value.","type":"standalone"}]},{"name":"RETAIN","description":"Causes a variable that is created by an INPUT or assignment statement to retain its value from one iteration of the DATA step to the next.","help":"RETAIN &lt;element-list(s) &lt;initial-value(s) |"},{"name":"ROWS","aliases":["ROW"],"description":"ROWS statements define the rows of the report. The ROWS statement can be abbreviated ROW. The specified row names must be valid SAS names. You can use as many ROWS statements as you need. A ROWS statement can describe more than one row, and one row of the report can be described with several different ROWS statements. The order of the rows in the report is determined by the order of appearance of row names in ROWS statements. The first occurrence of the name determines where the row is located.","help":"ROWS &lt;CHAR&gt; &lt;_LABEL_&gt; &lt;_NAME_&gt; ...","arguments":[{"name":"CHAR","optional":true,"followsDelimiter":"/","description":"Indicates that the rows contain character data.","type":"standalone"},{"name":"DOL","optional":true,"followsDelimiter":"/","description":"Overlines the rows listed in the ROWS statement with double lines. Overlines are printed on the line before any row titles or data for the row.","type":"standalone"},{"name":"DUL","optional":true,"followsDelimiter":"/","description":"Underlines the rows listed in the ROWS statement with double lines. Underlines are printed on the line after the data for the row. A row can have both an underline and an overline option.","type":"standalone"},{"name":"FORMAT=","optional":true,"followsDelimiter":"/","aliases":["F="],"description":"Specifies a format for printing the values of the rows listed in the ROWS statement.","help":"FORMAT=*format*","type":"value"},{"name":"LJC","optional":true,"followsDelimiter":"/","description":"Left-justifies character rows in each column.","type":"standalone"},{"name":"NOPRINT","optional":true,"followsDelimiter":"/","description":"Suppresses printing of rows listed in the ROWS statement. This option enables you to create rows to be used for intermediate calculations without having those rows printed.","type":"standalone"},{"name":"NOZERO","optional":true,"followsDelimiter":"/","description":"Suppresses the printing of a row when all the values are 0 or missing.","type":"standalone"},{"name":"OL","optional":true,"followsDelimiter":"/","description":"Overlines the rows listed in the ROWS statement with a single line. Overlines are printed on the line before any row titles or data for the row.","type":"standalone"},{"name":"OVERPRINT","optional":true,"followsDelimiter":"/","description":"Overprints titles, values, overlining, and underlining associated with rows listed in the ROWS statement. The OVERPRINT option can be abbreviated OVP. This option is valid only when the system option OVP is in effect.","type":"standalone"},{"name":"SKIP","optional":true,"followsDelimiter":"/","description":"Prints a blank line after the data lines for these rows.","type":"standalone"},{"name":"UL","optional":true,"followsDelimiter":"/","description":"Underlines the rows listed in the ROWS statement with a single line. Underlines are printed on the line after the data for the row. A row can have both an underline and an overline option.","type":"standalone"},{"name":"ZERO=","optional":true,"followsDelimiter":"/","description":"Substitutes \"text\" when the value in the row is 0 or missing.","help":"ZERO=\"*text*\"","type":"value"},{"name":"_LABEL_","optional":true,"followsDelimiter":"/","description":"Uses labels as row titles for the row or rows listed in the ROWS statement. If a label is not provided, the name of the row is substituted.","type":"standalone"},{"name":"_NAME_","optional":true,"followsDelimiter":"/","description":"Uses row names in row titles for the row or rows listed in the ROWS statement.","type":"standalone"},{"name":"_PAGE_","optional":true,"followsDelimiter":"/","description":"Starts a new page of the report before printing these rows.","type":"standalone"}]},{"name":"SELECT","description":"","help":""},{"name":"STOP","description":"Stops execution of the current DATA step.","help":"STOP"},{"name":"SUMBY","description":"The SUMBY statement produces consolidation tables for variables whose names are in the SUMBY list. Only one SUMBY statement can be used. To use a SUMBY statement, you must use a BY statement. The SUMBY and BY variables must be in the same relative order in both statements.","help":"SUMBY variables "}],"supportSiteInformation":{"docsetId":"etsug","docsetVersion":"latest","docsetTargetFile":"etsug_computab_toc.htm"}}