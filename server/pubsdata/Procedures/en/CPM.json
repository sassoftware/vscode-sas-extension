{"name":"CPM","statements":[{"name":"PROC CPM","description":"The CPM procedure can be used for planning, controlling, and monitoring a project. A typical project consists of several activities that may have precedence and time constraints. Some of these activities may already be in progress; some of them may follow different work schedules. All of the activities may compete for scarce resources. PROC CPM enables you to schedule activities subject to all of these constraints. â€  PROC CPM enables you to define calendars and specify holidays for the different activities so that you can schedule around holidays and vacation periods. Once a project has started, you can monitor it by specifying current information or progress data that is used by PROC CPM to compute an updated schedule. You can compare the new schedule with a baseline (or target) schedule.","help":"PROC CPM <ADDACT><CALEDATA=SAS-data-set><COLLAPSE><DATA=SAS-data-set><DATE=><DAYLENGTH=daylength><DAYSTART=daystart><FBDATE=fbdate><FINISHBEFORE><FIXFINISH><HOLIDATA=SAS-data-set><INTERVAL=DAY | WEEK | WEEKDAY... ><INTPER=period><NACTS=nacts><NADJ=nadj><NNODES=nnodes><NOUTIL><NRESREQ=nres><OUT=SAS-data-set><RESOURCEIN= |RESIN=| RIN= | RESLEVEL= SAS-data-set><RESOURCEOUT=SAS-data-set><RESOURCESCHED=SAS-data-set><SETFINISHMILESTONE><SUPPRESSOBSWARN><WORKDATA=SAS-data-set><XFERVARS>;     \n\tACTIVITY variable ; | ACT variable ;\n\tACTUAL <AUTOUPDT><A_FINISH= | AF= variable><A_START= | AS= variable> ...;\n\tALIGNDATE | DATE | ADATE variable ;\n\tALIGNTYPE | ALIGN | ATYPE variable ;\n\tBASELINE <B_FINISH= | BF= variable><B_START= | BS= variable><COMPARE=schedule> ...;\n\tCALID variable ;\n\tDURATION <FINISH=variable><OVERRIDEDUR><START=variable> ...;\n\tHEADNODE | HEAD | TO variable ;\n\tHOLIDAY <HOLIDUR= | HDURATION= variable><HOLIFIN=variable | HOLIEND=variable> ;\n\tID variables ;\n\tPROJECT <AGGREGATEPARENTRES><DESCENDING><ESORDER> ...;\n\tRESOURCE <ACTDELAY=variable><ACTIVITYPRTY=variable><ADDCAL> ...;\n\tSUCCESSOR <ALAGCAL=calname><LAG=variables><NLAGCAL=calnum> ...;\n\tTAILNODE | TAIL | FROM variable ;","arguments":[{"name":"ADDACT","optional":true,"aliases":["ADDALLACT","EXPAND"],"description":"Indicates that an observation is to be added to the Schedule output data set (and the Resource Schedule output data set) for each activity that appears as a value of the variables specified in the SUCCESSOR or PROJECT statements without appearing as a value of the variable specified in the ACTIVITY statement.","type":"standalone"},{"name":"CALEDATA=","optional":true,"aliases":["CALENDAR="],"description":"Identifies a SAS data set that specifies the work pattern during a standard week for each of the calendars that are to be used in the project.","help":"CALEDATA=*SAS-data-set*","type":"dataSet"},{"name":"COLLAPSE","optional":true,"description":"Creates only one observation per activity in the output data set when the input data set for a network in AON format contains multiple observations for the same activity.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Names the SAS data set that contains the network specification and activity information.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DATE=","optional":true,"description":"Specifies the SAS date, time, or datetime that is to be used as an alignment date for the project.","type":"value"},{"name":"DAYLENGTH=","optional":true,"description":"Specifies the length of the workday. On each day, work is scheduled starting at the beginning of the day as specified in the DAYSTART= option and ending daylength hours later. The DAYLENGTH= value should be a SAS time value.","help":"DAYLENGTH=*daylength*","type":"value"},{"name":"DAYSTART=","optional":true,"description":"Specifies the start of the workday. The DAYSTART= value should be a SAS time value. This parameter should be specified only when interval is one of the following: DTDAY, WORKDAY, DTWRKDAY, DTHOUR, DTMINUTE, or DTSECOND; in other words, this parameter should be specified only if the schedule produced by the CPM procedure is in SAS datetime values. The default value of daystart is 9 a.m. if INTERVAL is WORKDAY; otherwise, the value of daystart is equal to the time part of the SAS datetime value specified for the DATE= option.","help":"DAYSTART=*daystart*","type":"value"},{"name":"FBDATE=","optional":true,"description":"Specifies a finish-before date that can be specified in addition to the DATE= option.","help":"FBDATE=*fbdate*","type":"value"},{"name":"FINISHBEFORE","optional":true,"description":"Specifies that the project be scheduled to complete before the date given in the DATE= option.","type":"standalone"},{"name":"FIXFINISH","optional":true,"description":"Specifies that all finish tasks are to be constrained by their respective early finish times. In other words, the late finish times of all finish tasks do not float to the project completion time.","type":"standalone"},{"name":"HOLIDATA=","optional":true,"aliases":["HOLIDAY="],"description":"Identifies a SAS data set that specifies holidays.","help":"HOLIDATA=*SAS-data-set*","type":"dataSet"},{"name":"INTERVAL=","optional":true,"description":"Requests that each unit of duration be measured in interval units.","help":"INTERVAL=DAY | WEEK | WEEKDAY | WORKDAY | MONTH | QTR | YEAR | HOUR | MINUTE | SECOND | DTDAY | DTWRKDAY | DTWEEK | DTMONTH | DTQTR | DTYEAR | DTHOUR | DTMINUTE | DTSECOND","type":"choice","arguments":[{"name":"DAY","description":"Day","type":"standalone"},{"name":"WEEK","description":"Week","type":"standalone"},{"name":"WEEKDAY","description":"Day (5-day week)","type":"standalone"},{"name":"WORKDAY","description":"Day (5-day week: 9-5 day)","type":"standalone"},{"name":"MONTH","description":"Month","type":"standalone"},{"name":"QTR","description":"Quarter","type":"standalone"},{"name":"YEAR","description":"Year","type":"standalone"},{"name":"HOUR","description":"Hour","type":"standalone"},{"name":"MINUTE","description":"Minute","type":"standalone"},{"name":"SECOND","description":"Second","type":"standalone"},{"name":"DTDAY","description":"Day (7-day week)","type":"standalone"},{"name":"DTWRKDAY","description":"Day (5-day week)","type":"standalone"},{"name":"DTWEEK","description":"Week","type":"standalone"},{"name":"DTMONTH","description":"Month","type":"standalone"},{"name":"DTQTR","description":"Quarter","type":"standalone"},{"name":"DTYEAR","description":"Year","type":"standalone"},{"name":"DTHOUR","description":"Hour","type":"standalone"},{"name":"DTMINUTE","description":"Minute","type":"standalone"},{"name":"DTSECOND","description":"Second","type":"standalone"}]},{"name":"INTPER=","optional":true,"description":"Requests that each unit of duration be equivalent to period units of duration. The default value is 1.","help":"INTPER=*period*","type":"value"},{"name":"NACTS=","optional":true,"description":"Specifies the number of activities for which memory is allocated in core by the procedure.","help":"NACTS=*nacts*","type":"value"},{"name":"NADJ=","optional":true,"description":"Specifies the number of precedence constraints (adjacencies) in the project network.","help":"NADJ=*nadj*","type":"value"},{"name":"NNODES=","optional":true,"description":"Specifies the size of the symbolic table used to look up the activity names (node names) for the network specification in AON (AOA) format.","help":"NNODES=*nnodes*","type":"value"},{"name":"NOUTIL","optional":true,"description":"Specifies that the procedure should not use utility data sets for memory management.","type":"standalone"},{"name":"NRESREQ=","optional":true,"description":"Specifies the number of distinct resource requirements corresponding to all activities and resources in the project.","help":"NRESREQ=*nres*","type":"value"},{"name":"OUT=","optional":true,"description":"Specifies a name for the output data set that contains the schedule determined by PROC CPM.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"RESOURCEIN=","optional":true,"aliases":["RESIN=","SIN=","RESLEVEL="],"description":"Names the SAS data set that contains the levels available for the different resources used by the activities in the project.","type":"value"},{"name":"RESOURCEOUT=","optional":true,"aliases":["RESOUT=","ROUT=","RESUSAGE="],"description":"Names the SAS data set in which you can save resource usage profiles for each of the resources specified in the RESOURCE statement. This data set is also referred to as the Usage data set.","help":"RESOURCEOUT=*SAS-data-set*","type":"dataSet"},{"name":"RESOURCESCHED=","optional":true,"aliases":["RESSCHED=","RSCHEDULE=","RSCHED="],"description":"Names the SAS data set in which you can save the schedules for each resource used by any activity.","help":"RESOURCESCHED=*SAS-data-set*","type":"dataSet"},{"name":"SETFINISHMILESTONE","optional":true,"description":"Specifies that milestones (zero duration activities) should have the same start and finish times as the finish time of their predecessor.","type":"standalone"},{"name":"SUPPRESSOBSWARN","optional":true,"description":"Turns off the display of warnings and notes for every observation with invalid or missing specifications.","type":"standalone"},{"name":"WORKDATA=","optional":true,"description":"Identifies a SAS data set that defines the work pattern during a standard working day.","help":"WORKDATA=*SAS-data-set*","type":"dataSet"},{"name":"XFERVARS","optional":true,"description":"Indicates that all relevant variables are to be copied from the Activity data set to the Schedule data set. This includes all variables used in the ACTUAL statement, the ALIGNDATE and ALIGNTYPE statements, the SUCCESSOR statement, and the RESOURCE statement.","type":"standalone"}]},{"name":"ACTIVITY","aliases":["ACT"],"description":"The ACTIVITY statement is required when data are input in an AON format; this statement identifies the variable that contains the names of the nodes in the network.","help":"ACTIVITY variable ; | ACT variable "},{"name":"ACTUAL","description":"The ACTUAL statement identifies variables in the Activity data set that contain progress information about the activities in the project. For a project that is already in progress, you can describe the actual status of any activity by specifying the activity's actual start, actual finish, remaining duration, or percent of work completed. At least one of the four variables (A_START, A_FINISH, REMDUR, PCTCOMP) needs to be specified in the ACTUAL statement. These variables are referred to as progress variables. The TIMENOW= option in this statement represents the value of the current time (referred to as TIMENOW), and it is used in conjunction with the values of the progress variables to check for consistency and to determine default values if necessary. You can also specify options in the ACTUAL statement that control the updating of the project schedule. Using the ACTUAL statement causes four new variables (A_START, A_FINISH, A_DUR, and STATUS) to be added to the Schedule data set","help":"ACTUAL &lt;AUTOUPDT&gt;&lt;A_FINISH= | AF= variable&gt;&lt;A_START= | AS= variable&gt; ...","arguments":[{"name":"AUTOUPDT","optional":true,"followsDelimiter":"/","description":"Requests that PROC CPM should assume automatic completion (or start) of activities that are predecessors to activities already completed (or in progress).","type":"standalone"},{"name":"A_FINISH=","optional":true,"followsDelimiter":"/","aliases":["AF="],"description":"Identifies a variable in the Activity data set that specifies the actual finish times of activities that are already completed. The actual finish time of an activity must be less than TIMENOW.","type":"value"},{"name":"A_START=","optional":true,"followsDelimiter":"/","aliases":["AS="],"description":"Identifies a variable in the Activity data set that specifies the actual start times of activities that are in progress or that are already completed. The actual start time of an activity must be less than TIMENOW.","type":"value"},{"name":"ESTIMATEPCTC","optional":true,"followsDelimiter":"/","aliases":["ESTPCTC","ESTPCTCOMP","ESTPROG"],"description":"Indicates that a variable named PCT_COMP is to be added to the Schedule output data set (and the Resource Schedule output data set) that contains the percent completion time for each activity (for each resource used by each activity) in the project. This value is 0 for activities that have not yet started and 100 for completed activities; for activities in progress, this value is computed using the actual start time, the value of TIMENOW, and the revised duration of the activity.","type":"standalone"},{"name":"FIXASTART","optional":true,"followsDelimiter":"/","description":"Specifies that the actual start time of an activity should not be overwritten if it is specified to be on a non-work day.","type":"standalone"},{"name":"NOAUTOUPDT","optional":true,"followsDelimiter":"/","description":"Requests that PROC CPM should not assume automatic completion of activities. (The NOAUTOUPDT option is the reverse of the AUTOUPDT option.)","type":"standalone"},{"name":"PCTCOMP=","optional":true,"followsDelimiter":"/","aliases":["PCTCOMPLETE=","PCOMP="],"description":"Identifies a variable in the Activity data set that specifies the percentage of the work that has been completed for the current activity. The values for this variable must be between 0 and 100. A value of 0 for this variable means that the current activity has not yet started. A value of 100 means that the activity is already complete.","type":"value"},{"name":"REMDUR=","optional":true,"followsDelimiter":"/","aliases":["RDURATION=","RDUR="],"description":"Identifies a variable in the Activity data set that specifies the remaining duration of activities that are in progress.","type":"value"},{"name":"SHOWFLOAT","optional":true,"followsDelimiter":"/","description":"This option in the ACTUAL statement indicates that PROC CPM should allow activities that are completed or in progress to have nonzero float.","type":"standalone"},{"name":"TIMENOW=","optional":true,"followsDelimiter":"/","aliases":["CURRDATE="],"description":"Specifies the SAS date, time, or datetime value that is used as a reference point to resolve the values of the remaining duration and percent completion times when the ACTUAL statement is used.","help":"TIMENOW=*timenow*","type":"value"},{"name":"TIMENOWSPLT","optional":true,"followsDelimiter":"/","description":"Indicates that activities that are in progress at TIMENOW can be split at TIMENOW if they cause resource infeasibilities.","type":"standalone"}]},{"name":"ALIGNDATE","aliases":["DATE","ADATE"],"description":"The ALIGNDATE statement identifies the variable in the Activity data set that specifies the dates to be used to constrain each activity to start or finish on a particular date. The ALIGNDATE statement is used in conjunction with the ALIGNTYPE statement, which specifies the type of alignment. A missing value for the variables specified in the ALIGNDATE statement indicates that the particular activity has no restriction imposed on it. PROC CPM requires that if the ALIGNDATE statement is used, then all start activities (activities with no predecessors) have nonmissing values for the ALIGNDATE variable. If any start activity has a missing ALIGNDATE value, it is assumed to start on the date specified in the PROC CPM statement (if such a date is given) or, if no date is given, on the earliest specified start date of all start activities. If none of the start activities has a start date specified and a project start date is not specified in the PROC CPM statement, the procedure stops execution and returns an error message.","help":"ALIGNDATE | DATE | ADATE variable "},{"name":"ALIGNTYPE","aliases":["ALIGN","ATYPE"],"description":"The ALIGNTYPE statement is used to specify whether the date value in the ALIGNDATE statement is the earliest start date, the latest finish date, and so forth, for the activity in the observation. The values allowed for the variable specified in the ALIGNTYPE statement are: SEQ Start equal to SGE Start greater than or equal to SLE Start less than or equal to FEQ Finish equal to FGE Finish greater than or equal to FLE Finish less than or equal to MS Mandatory start equal to MF Mandatory finish equal to","help":"ALIGNTYPE | ALIGN | ATYPE variable "},{"name":"BASELINE","description":"The BASELINE statement enables you to save a specific schedule as a baseline or target schedule and compare another schedule, such as an updated schedule or resource constrained schedule, against it.","help":"BASELINE &lt;B_FINISH= | BF= variable&gt;&lt;B_START= | BS= variable&gt;&lt;COMPARE=schedule&gt; ...","arguments":[{"name":"B_FINISH=","optional":true,"followsDelimiter":"/","aliases":["BF="],"description":"Specifies the numeric-valued variable in the Activity data set that sets B_FINISH.","type":"value"},{"name":"B_START=","optional":true,"followsDelimiter":"/","aliases":["BS="],"description":"Specifies the numeric-valued variable in the Activity data set that sets B_START.","type":"value"},{"name":"COMPARE=","optional":true,"followsDelimiter":"/","description":"Compares a specific schedule (EARLY, LATE, RESOURCE or ACTUAL) in the Activity data set with the baseline schedule.","help":"COMPARE=*schedule*","type":"value"},{"name":"SET=","optional":true,"followsDelimiter":"/","description":"Specifies which of the four schedules (EARLY, LATE, RESOURCE, or ACTUAL) to set the baseline schedule equal to. The SET= option causes the addition of two new variables in the Schedule data set; these are the B_START and B_FINISH variables.","help":"SET=*schedule*","type":"value"},{"name":"UPDATE=","optional":true,"followsDelimiter":"/","description":"Specifies the name of the schedule (EARLY, LATE, ACTUAL, or RESOURCE) that can be used to update the B_START and B_FINISH variables.","help":"UPDATE=*schedule*","type":"value"}]},{"name":"CALID","description":"The CALID statement specifies the name of a SAS variable that is used in the Activity, Holiday, and Calendar data sets to identify the calendar to which each observation refers. This variable can be either numeric or character depending on whether the different calendars are identified by unique numbers or names. If this variable is not found in any of the three data sets, PROC CPM looks for a default variable named _CAL_ in each data set (a warning message is then printed to the log).","help":"CALID variable "},{"name":"DURATION","aliases":["DUR"],"description":"The DURATION statement identifies the variable in the Activity data set that contains the length of time necessary to complete the activity. If the network is input in AOA format, then the variable identifies the duration of the activity denoted by the arc joining the TAILNODE and the HEADNODE. If the network is input in AON format, then the variable identifies the duration of the activity specified in the ACTIVITY statement. The variable specified must be numeric. The DURATION statement must be specified. The values of the DURATION variable are assumed to be in interval units, where interval is the value of the INTERVAL= option.","help":"DURATION &lt;FINISH=variable&gt;&lt;OVERRIDEDUR&gt;&lt;START=variable&gt; ...","arguments":[{"name":"FINISH=","optional":true,"followsDelimiter":"/","description":"Specifies a variable in the Activity data set that is to be used in conjunction with the START variable to determine the activity's duration.","help":"FINISH=*variable*","type":"value"},{"name":"OVERRIDEDUR","optional":true,"followsDelimiter":"/","description":"Specifies that if the START= and FINISH= values are not missing, the duration computed from these values is to be used in place of the duration specified for the activity. In other words, the computed duration is used in place of the duration specified for the activity.","type":"standalone"},{"name":"START=","optional":true,"followsDelimiter":"/","description":"Specifies a variable in the Activity data set that is to be used in conjunction with the FINISH variable to determine the activity's duration.","help":"START=*variable*","type":"value"}]},{"name":"HEADNODE","aliases":["HEAD","TO"],"description":"The HEADNODE statement is required when data are input in AOA format. This statement specifies the variable in the Activity data set that contains the name of the node on the head of an arrow in the project network. This node is identified with the event that signals the end of an activity on that arc. The variable specified can be either a numeric or character variable because the procedure treats this variable symbolically. Each node must be uniquely defined.","help":"HEADNODE | HEAD | TO variable "},{"name":"HOLIDAY","aliases":["HOLIDAYS"],"description":"The HOLIDAY statement specifies the names of variables used to describe non-workdays in the Holiday data set. PROC CPM accounts for holidays only when the INTERVAL= option has one of the following values: DAY, WORKDAY, WEEKDAY, DTDAY, DTWRKDAY, DTHOUR, DTMINUTE, or DTSECOND. The HOLIDAY statement must be used with the HOLIDATA= option in the PROC CPM statement. Recall that the HOLIDATA= option identifies the SAS data set that contains a list of the holidays and non-workdays around which you schedule your project. Holidays are defined by specifying the start of the holiday (the HOLIDAY variable) and either the length of the holiday (the HOLIDUR variable) or the finish time of the holiday (the HOLIFIN variable). The HOLIDAY variable is mandatory with the HOLIDAY statement; the HOLIDUR and HOLIFIN variables are optional.","help":"HOLIDAY &lt;HOLIDUR= | HDURATION= variable&gt;&lt;HOLIFIN=variable | HOLIEND=variable&gt;","arguments":[{"name":"HOLIDUR=","optional":true,"followsDelimiter":"/","aliases":["HDURATION="],"description":"Identifies a variable in the Holiday data set that specifies the duration of the holiday. The INTERVAL= option specified on the PROC CPM statement is used to interpret the value of the holiday duration variables.","type":"value"},{"name":"HOLIFIN=","optional":true,"followsDelimiter":"/","aliases":["HOLIEND="],"description":"Identifies a variable in the Holiday data set that specifies the finish time of the holiday defined in that observation. If a particular observation contains both the duration as well as the finish time of the holiday, only the finish time is used; the duration is ignored.","type":"value"}]},{"name":"ID","description":"The ID statement identifies variables not specified in the TAILNODE, HEADNODE, ACTIVITY, SUCCESSOR, or DURATION statements that are to be included in the Schedule data set. This statement is useful for carrying any relevant information about each activity from the Activity data set to the Schedule data set.","help":"ID variables "},{"name":"PROJECT","aliases":["PARENT"],"description":"The PROJECT statement specifies the variable in the Activity data set that identifies the project to which an activity belongs. This variable must be of the same type and length as the variable defined in the ACTIVITY statement. A project can also be treated as an activity with precedence and time constraints. In other words, any value of the PROJECT variable can appear as a value of the ACTIVITY variable, and it can have specifications for the DURATION, ALIGNDATE, ALIGNTYPE, ACTUAL, RESOURCE, and SUCCESSOR variables. However, some of the interpretations of these variables for a project (or supertask) may be different from the corresponding interpretation for an activity at the lowest level.","help":"PROJECT &lt;AGGREGATEPARENTRES&gt;&lt;DESCENDING&gt;&lt;ESORDER&gt; ...","arguments":[{"name":"AGGREGATEPARENTRES","optional":true,"followsDelimiter":"/","aliases":["AGGREGATEP_RES","AGGREGPR"],"description":"Indicates that the resource requirements for all supertasks are to be used only for aggregation purposes and not for resource-constrained scheduling.","type":"standalone"},{"name":"DESCENDING","optional":true,"followsDelimiter":"/","aliases":["DESC"],"description":"Indicates that, in addition to the ascending sort variables (ES_ASC, LS_ASC, and SS_ASC) that are requested by the ESORDER, LSORDER, and SSORDER options, the corresponding descending sort variables (ES_DESC, LS_DESC, and SS_DESC, respectively) are also to be added to the Schedule output data set.","type":"standalone"},{"name":"ESORDER","optional":true,"followsDelimiter":"/","aliases":["ESO"],"description":"Indicates that a variable named ES_ASC is to be added to the Schedule output data set; this variable can be used to order the activities in such a way that the activities within each subproject are in increasing order of the early start time.","type":"standalone"},{"name":"IGNOREPARENTRES","optional":true,"followsDelimiter":"/","aliases":["IGNOREP_RES","IGNOREPR"],"description":"Indicates that the resource requirements for all supertasks are to be ignored.","type":"standalone"},{"name":"LSORDER","optional":true,"followsDelimiter":"/","aliases":["LSO"],"description":"Indicates that a variable named LS_ASC is to be added to the Schedule output data set; this variable can be used to order the activities in such a way that the activities within each subproject are in increasing order of the late start time.","type":"standalone"},{"name":"ORDERALL","optional":true,"followsDelimiter":"/","aliases":["ALL"],"description":"Is equivalent to specifying the ESORDER and LSORDER options (and the SSORDER option when resource constrained scheduling is performed).","type":"standalone"},{"name":"RSCHEDORDER","optional":true,"followsDelimiter":"/","aliases":["RSCHDORD","RSORDER"],"description":"Indicates that the order variables that are included in the Schedule output data set are also to be included in the Resource Schedule output data set.","type":"standalone"},{"name":"RSCHEDWBS","optional":true,"followsDelimiter":"/","aliases":["RSCHDWBS","RSWBS"],"description":"Indicates that the WBS code is also to be included in the Resource Schedule data set.","type":"standalone"},{"name":"SEPCRIT","optional":true,"followsDelimiter":"/","description":"Computes individual critical paths for each project.","type":"standalone"},{"name":"SSORDER","optional":true,"followsDelimiter":"/","aliases":["SSO"],"description":"Indicates that a variable named SS_ASC is to be added to the Schedule output data set; this variable can be used to order the activities in such a way that the activities within each subproject are in increasing order of the resource-constrained start time.","type":"standalone"},{"name":"USEPROJDUR","optional":true,"followsDelimiter":"/","aliases":["USEPROJDURSPEC","USESPECDUR"],"description":"Uses the specified subproject duration to compute the maximum allowed late finish for each subproject. This is similar to the SEPCRIT option, except that the specified project duration is used to set an upper bound on each subproject's late finish time instead of the project span as computed from the span of all the subtasks of the project.","type":"standalone"},{"name":"WBSCODE","optional":true,"followsDelimiter":"/","aliases":["WBS","ADDWBS"],"description":"Indicates that the CPM procedure is to compute a WBS code for the activities in the project using the project hierarchy structure specified.","type":"standalone"}]},{"name":"RESOURCE","aliases":["RES"],"description":"The RESOURCE statement identifies the variables in the Activity data set that contain the levels of the various resources required by the different activities. This statement is necessary if the procedure is required to summarize resource utilization for various resources.","help":"RESOURCE &lt;ACTDELAY=variable&gt;&lt;ACTIVITYPRTY=variable&gt;&lt;ADDCAL&gt; ...","arguments":[{"name":"ACTDELAY=","optional":true,"followsDelimiter":"/","description":"Specifies the name of a variable in the Activity data set that specifies a value for the maximum amount of delay allowed for each activity. The values of this variable should be greater than or equal to 0. If a value is missing, the value of the DELAY= option is used instead.","help":"ACTDELAY=*variable*","type":"value"},{"name":"ACTIVITYPRTY=","optional":true,"followsDelimiter":"/","aliases":["ACTPRTY="],"description":"Identifies the variable in the Activity data set that contains the priority of each activity. This option is required if resource-constrained scheduling is to be performed and the scheduling rule specified is ACTPRTY.","help":"ACTIVITYPRTY=*variable*","type":"value"},{"name":"ADDCAL","optional":true,"followsDelimiter":"/","description":"Requests that a variable, _CAL_, be added to the Resource Schedule data set that identifies the resource calendar for each resource used by each activity. For observations that summarize the activity's schedule, this variable identifies the activity's calendar.","type":"standalone"},{"name":"ALL","optional":true,"followsDelimiter":"/","description":"Is equivalent to specifying the ESPROFILE and LSPROFILE options when an unconstrained schedule is obtained and is equivalent to specifying all four options, AVPROFILE (AVP), ESPROFILE (ESP), LSPROFILE (LSP), and RCPROFILE (RCP), when a resource-constrained schedule is obtained.","type":"standalone"},{"name":"ALTBEFORESUP","optional":true,"followsDelimiter":"/","description":"Indicates that all alternate resources are to be checked first before using supplementary resources.","type":"standalone"},{"name":"APPEND","optional":true,"followsDelimiter":"/","aliases":["APPENDINTXRATE","APPENDRATEXINT","APPENDUSAGE"],"description":"Indicates that the Usage data set is to contain two sets of observations: the first set indicates the rate of usage for each resource at the beginning of the current time period, and the second set contains the total usage of each resource for the current time period.","type":"standalone"},{"name":"AROUTCAL=","optional":true,"followsDelimiter":"/","description":"Specifies the name of the calendar to be used for incrementing the _TIME_ variable in the Usage data set.","help":"AROUTCAL=*calname*","type":"value"},{"name":"AVPROFILE","optional":true,"followsDelimiter":"/","aliases":["AVP","AVL"],"description":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement.","type":"standalone"},{"name":"AWAITDELAY","optional":true,"followsDelimiter":"/","description":"Forces PROC CPM to wait until L_STARTdelay, where delay is the maximum delay allowed for the activity (which is the value of the ACTDELAY= variable or the DELAY= option), before an activity is scheduled using supplementary levels of resources.","type":"standalone"},{"name":"CUMUSAGE","optional":true,"followsDelimiter":"/","description":"Specifies that the Usage data set should indicate the cumulative usage of consumable resources.","type":"standalone"},{"name":"DELAYANALYSIS","optional":true,"followsDelimiter":"/","aliases":["SLIPINF"],"description":"Causes the addition of three new variables to the Schedule data set. The variables are R_DELAY, DELAY_R and SUPPL_R.","type":"standalone"},{"name":"ESPROFILE","optional":true,"followsDelimiter":"/","aliases":["ESP","ESS"],"description":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement. Each new variable denotes the resource usage based on the early start schedule for the corresponding resource variable.","type":"standalone"},{"name":"EXCLUNSCHED","optional":true,"followsDelimiter":"/","description":"Excludes the resource consumption corresponding to unscheduled activities from the daily resource usage reported for each time period in the Usage data set.","type":"standalone"},{"name":"E_START","optional":true,"followsDelimiter":"/","description":"Requests that the E_START and E_FINISH variables, namely the variables specifying the early start schedule, be included in the Schedule data set in addition to the S_START and S_FINISH variables.","type":"standalone"},{"name":"FILLUNSCHED","optional":true,"followsDelimiter":"/","aliases":["FILLMISSING"],"description":"Fills in S_START and S_FINISH values for activities that are still unscheduled when resource constrained scheduling is stopped either by the STOPDATE= option or due to resource infeasibilities.","type":"standalone"},{"name":"F_FLOAT","optional":true,"followsDelimiter":"/","description":"Requests that the Schedule data set include the F_FLOAT variable computed using the unconstrained early and late start schedules.","type":"standalone"},{"name":"INCLUNSCHED","optional":true,"followsDelimiter":"/","description":"Enables the inclusion of activities that are still unscheduled in the computation of daily (or cumulative) resource usage in the Usage data set when resource-constrained scheduling is stopped either by the STOPDATE= option or due to resource infeasibilities.","type":"standalone"},{"name":"INDEPENDENTALLOC","optional":true,"followsDelimiter":"/","aliases":["INDEPALLOC"],"description":"Enables each resource to be scheduled independently for each activity during resource-constrained scheduling.","type":"standalone"},{"name":"LSPROFILE","optional":true,"followsDelimiter":"/","aliases":["LSP","LSS"],"description":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement.","type":"standalone"},{"name":"L_START","optional":true,"followsDelimiter":"/","description":"Requests that the L_START and L_FINISH variables, namely the variables specifying the late start schedule, be included in the Schedule data set in addition to the S_START and S_FINISH variables.","type":"standalone"},{"name":"MAXDATE=","optional":true,"followsDelimiter":"/","description":"Specifies the maximum value of the _TIME_ variable in the Usage data set. The default value of maxdate is the maximum finish time for all of the schedules for which a usage profile was requested.","help":"MAXDATE=*maxdate*","type":"value"},{"name":"MAXNSEGMT=","optional":true,"followsDelimiter":"/","aliases":["MAXNSEG="],"description":"Specifies a variable in the Activity data set that indicates the maximum number of segments that the current activity can be split into.","help":"MAXNSEGMT=*variable*","type":"value"},{"name":"MILESTONENORESOURCE","optional":true,"followsDelimiter":"/","description":"Specifies that milestone activities do not consume resources. This implies that all resource requirements are ignored for milestone activities. This is the default behavior.","type":"standalone"},{"name":"MILESTONERESOURCE","optional":true,"followsDelimiter":"/","description":"Specifies that milestone activities consume resources. If a nonzero requirement is specified for a milestone, the corresponding consumable resources are used at the scheduled time of that milestone.","type":"standalone"},{"name":"MINDATE=","optional":true,"followsDelimiter":"/","description":"Specifies the minimum value of the _TIME_ variable in the Usage data set. The default value of mindate is the minimum start time for all of the schedules for which a usage profile is requested.","help":"MINDATE=*mindate*","type":"value"},{"name":"MINSEGMTDUR=","optional":true,"followsDelimiter":"/","aliases":["MINSEGD="],"description":"Specifies a variable in the Activity data set that indicates the minimum duration of any segment of the current activity. A missing value for this variable is set to a value equal to one fifth of the activity's duration.","help":"MINSEGMTDUR=*variable*","type":"value"},{"name":"MULTIPLEALTERNATES","optional":true,"followsDelimiter":"/","aliases":["MULTALT"],"description":"Indicates that multiple alternate resources can be used to substitute for a single resource.","type":"standalone"},{"name":"NOE_START","optional":true,"followsDelimiter":"/","description":"Requests that the E_START and E_FINISH variables, namely the variables specifying the early start schedule, be dropped from the Schedule data set. Note that the default is E_START.","type":"standalone"},{"name":"NOF_FLOAT","optional":true,"followsDelimiter":"/","description":"Requests that the F_FLOAT variable be dropped from the Schedule data set when resource-constrained scheduling is requested. This is the default behavior.","type":"standalone"},{"name":"NORESOURCEVARS","optional":true,"followsDelimiter":"/","aliases":["NORESVARSOUT","NORESVARS"],"description":"Requests that the variables specified in the RESOURCE statement be dropped from the Schedule data set.","type":"standalone"},{"name":"NOT_FLOAT","optional":true,"followsDelimiter":"/","description":"Requests that the T_FLOAT variable be dropped from the Schedule data set when resource-constrained scheduling is requested. This is the default behavior.","type":"standalone"},{"name":"NROUTCAL=","optional":true,"followsDelimiter":"/","description":"Specifies the number of the calendar to be used for incrementing the _TIME_ variable in the Usage data set.","help":"NROUTCAL=*calnum*","type":"value"},{"name":"OBSTYPE=","optional":true,"followsDelimiter":"/","description":"Specifies a character variable in the Resource data set that contains the type identifier for each observation.","help":"OBSTYPE=RESLEVEL | RESTYPE | RESUSAGE | RESPRTY | SUPLEVEL | ALTRATE | ALTPRTY | RESRCDUR | CALENDAR | MULTALT | MINARATE | AUXRES","type":"choice","arguments":[{"name":"RESLEVEL","followsDelimiter":"/","description":"RESLEVEL variable","type":"standalone"},{"name":"RESTYPE","followsDelimiter":"/","description":"RESTYPE variable","type":"standalone"},{"name":"RESUSAGE","followsDelimiter":"/","description":"RESUSAGE variable","type":"standalone"},{"name":"RESPRTY","followsDelimiter":"/","description":"RESPRTY variable","type":"standalone"},{"name":"SUPLEVEL","followsDelimiter":"/","description":"SUPLEVEL variable","type":"standalone"},{"name":"ALTRATE","followsDelimiter":"/","description":"ALTRATE variable","type":"standalone"},{"name":"ALTPRTY","followsDelimiter":"/","description":"ALTPRTY variable","type":"standalone"},{"name":"RESRCDUR","followsDelimiter":"/","description":"RESRCDUR variable","type":"standalone"},{"name":"CALENDAR","followsDelimiter":"/","description":"CALENDAR variable","type":"standalone"},{"name":"MULTALT","followsDelimiter":"/","description":"MULTALT variable","type":"standalone"},{"name":"MINARATE","followsDelimiter":"/","description":"MINARATE variable","type":"standalone"},{"name":"AUXRES","followsDelimiter":"/","description":"AUXRES variable","type":"standalone"}]},{"name":"PERIOD=","optional":true,"followsDelimiter":"/","aliases":["PER="],"description":"Identifies the variable in the RESOURCEIN= data set that specifies the date from which a specified level of the resource is available for each observation with the OBSTYPE variable equal to 'RESLEVEL'.","help":"PERIOD=*variable*","type":"value"},{"name":"RCPROFILE","optional":true,"followsDelimiter":"/","aliases":["RCP","RCS"],"description":"Creates one variable in the Usage data set corresponding to each variable in the RESOURCE statement.","type":"standalone"},{"name":"RESID=","optional":true,"followsDelimiter":"/","description":"Specifies a variable in the RESOURCEIN= data set that indicates the name of the resource variable for which alternate resource information or auxiliary resource information is being specified in that observation.","help":"RESID=*variable*","type":"value"},{"name":"RESOURCEVARS","optional":true,"followsDelimiter":"/","aliases":["RESVARSOUT"],"description":"Requests that the variables specified in the RESOURCE statement be included in the Schedule data set.","type":"standalone"},{"name":"ROUTINTERVAL=","optional":true,"followsDelimiter":"/","aliases":["STEPINT="],"description":"Specifies the units to be used to determine the time interval between two successive values of the _TIME_ variable in the Usage data set.","help":"ROUTINTERVAL=*routinterval*","type":"value"},{"name":"ROUTINTPER=","optional":true,"followsDelimiter":"/","aliases":["STEPSIZE=","STEP="],"description":"Specifies the number of routinterval units between successive observations in the Usage data set where routinterval is the value of the ROUTINTERVAL= option.","help":"ROUTINTPER=*routintper*","type":"value"},{"name":"ROUTNOBREAK","optional":true,"followsDelimiter":"/","aliases":["ROUTCONT"],"description":"Specifies that the _TIME_ variable is to be incremented using a calendar with no breaks or holidays.","type":"standalone"},{"name":"RSCHEDID=","optional":true,"followsDelimiter":"/","aliases":["RSID="],"description":"Identifies variables not specified in the TAILNODE, HEADNODE, or ACTIVITY statements that are to be included in the Resource Schedule data set. This option is useful for carrying any relevant information about each activity from the Activity data set to the Resource Schedule data set.","type":"value"},{"name":"SCHEDRULE=","optional":true,"followsDelimiter":"/","aliases":["RULE="],"description":"Specifies the rule to be used to order the list of activities whose predecessor activities have been completed while scheduling activities subject to resource constraints.","help":"SCHEDRULE=LST | LFT | SHORTDUR | ACTPRTY | RESPRTY | DELAYLST","type":"choice","arguments":[{"name":"LST","followsDelimiter":"/","description":"Specifies that the activities in the waiting list are sorted in the order of increasing L_START time.","type":"standalone"},{"name":"LFT","followsDelimiter":"/","description":"Specifies that the activities in the waiting list are sorted in the order of increasing L_FINISH time.","type":"standalone"},{"name":"SHORTDUR","followsDelimiter":"/","description":"Specifies that the activities in the waiting list are sorted in the order of increasing durations.","type":"standalone"},{"name":"ACTPRTY","followsDelimiter":"/","description":"Specifies that PROC CPM should sort the activities in the waiting list in the order of increasing values of the variable specified in the ACTIVITYPRTY= option in the RESOURCE statement.","type":"standalone"},{"name":"RESPRTY","followsDelimiter":"/","description":"Specifies that PROC CPM should sort the activities in the waiting list in the order of increasing values of the resource priority for the most important resource used by each activity.","type":"standalone"},{"name":"DELAYLST","followsDelimiter":"/","description":"Specifies that the activities in the waiting list are sorted in the order of increasing L_START + ACTDELAY, where ACTDELAY is the value of the ACTDELAY variable for that activity.","type":"standalone"}]},{"name":"SPLITFLAG","optional":true,"followsDelimiter":"/","description":"Indicates that activities are allowed to be split into segments during resource allocation.","type":"standalone"},{"name":"STOPDATE=","optional":true,"followsDelimiter":"/","description":"Specifies the cutoff date for resource-constrained scheduling. When such a date is specified, S_START and S_FINISH are set to missing beyond the cutoff date.","help":"STOPDATE=*stdate*","type":"value"},{"name":"TOTUSAGE","optional":true,"followsDelimiter":"/","aliases":["INTXRATE","INTUSAGE","RATEXINT"],"description":"Specifies that the Usage data set is to indicate the total usage of the resource for the current time period.","type":"standalone"},{"name":"T_FLOAT","optional":true,"followsDelimiter":"/","description":"Requests that the Schedule data set include the T_FLOAT variable computed using the unconstrained early and late start schedules.","type":"standalone"},{"name":"UNSCHEDMISS","optional":true,"followsDelimiter":"/","description":"Sets the S_START and S_FINISH values to missing for activities that are still unscheduled when resource constrained scheduling is stopped either by the STOPDATE= option or due to resource infeasibilities. This is the default and can be turned off by specifying the FILLUNSCHED option.","type":"standalone"},{"name":"UPDTUNSCHED","optional":true,"followsDelimiter":"/","description":"Causes the procedure to use the S_START and S_FINISH times of scheduled activities to update the projected start and finish times for the activities that are still unscheduled when resource constrained scheduling is stopped either by the STOPDATE= option or due to resource infeasibilities.","type":"standalone"},{"name":"WORK=","optional":true,"followsDelimiter":"/","description":"Identifies a variable in the Activity data set that specifies the total amount of work required by one unit of a resource. This work is represented in units of the INTERVAL parameter.","help":"WORK=*variable*","type":"value"}]},{"name":"SUCCESSOR","aliases":["SUCC"],"description":"The SUCCESSOR statement is required when data are input in an AON format. This statement specifies the variables that contain the names of the immediate successor nodes (activities) to the ACTIVITY node. These variables must be of the same type and length as those defined in the ACTIVITY statement.","help":"SUCCESSOR &lt;ALAGCAL=calname&gt;&lt;LAG=variables&gt;&lt;NLAGCAL=calnum&gt; ...","arguments":[{"name":"ALAGCAL=","optional":true,"followsDelimiter":"/","description":"Specifies the name of the calendar to be used for all lags. The default value for this option is the DEFAULT calendar.","help":"ALAGCAL=*calname*","type":"value"},{"name":"LAG=","optional":true,"followsDelimiter":"/","description":"Specifies the variables in the Activity data set used to identify the lag relationship (lag type, duration, and calendar) between the activity and its successor. The LAG variables must be character variables. You can specify as many LAG variables as there are SUCCESSOR variables; each SUCCESSOR variable is matched with the corresponding LAG variable.","help":"LAG=*variables*","type":"value"},{"name":"NLAGCAL=","optional":true,"followsDelimiter":"/","description":"Specifies the number of the calendar to be used for all lags. The default value for this option is the DEFAULT calendar.","help":"NLAGCAL=*calnum*","type":"value"}]},{"name":"TAILNODE","aliases":["TAIL","FROM"],"description":"The TAILNODE statement is required when data are input in AOA (arrow notation) format. It specifies the variable that contains the name of each node on the tail of an arc in the project network. This node is identified with the event that signals the start of the activity on that arc. The variable specified can be either a numeric or character variable since the procedure treats this variable symbolically. Each node must be uniquely defined.","help":"TAILNODE | TAIL | FROM variable "}],"supportSiteInformation":{"docsetId":"orpmug","docsetVersion":"v_007","docsetTargetFile":"orpmug_cpm_toc.htm"}}