{"name":"DQSCHEME","statements":[{"name":"PROC DQSCHEME","description":"Creates scheme data sets and analysis data sets and applies schemes to input data sets.","help":" PROC DQSCHEME   DATA=input-data-set\n\t\n\t<QKB  | NOQKB>\n\t\tOUT=output-data-set;APPLY  <options>;\n\t CONVERT    <options>;\n\tCREATE  <options>;","arguments":[{"name":"QKB","optional":true,"description":"","help":" QKB","type":"standalone","supportSiteTargetFragment":"n0i33vem6c7mwln1p7de3m1e6de2"},{"name":"NOQKB","optional":true,"description":"","type":"standalone","supportSiteTargetFragment":"n0i33vem6c7mwln1p7de3m1e6de2"},{"name":"DATA=","optional":true,"description":"When you use the CREATE statement to create schemes, the DATA option specifies the SAS data set from which one or more schemes are built. When you use the APPLY statement to apply existing schemes, the DATA option specifies the SAS data set that is transformed by the scheme.","help":"DATA=*input-data-set*","type":"dataSet","supportSiteTargetFragment":"n02iu9duo13nfen143kf9noq752e"},{"name":"OUT=","optional":true,"description":"specifies the output data set.","help":"OUT=*output-data-set*","type":"dataSet","supportSiteTargetFragment":"n0437b560nvrmvn1j5v8whjtauri"}],"supportSiteTargetFile":"p05zembdzyi4rfn1vy18vwsmlic2.htm"},{"name":"APPLY","description":"Applies a scheme to transform the values of a single variable.","help":"APPLY   <LOCALE=locale-name>\n\t\n\t<MATCH-DEFINITION=match-definition>\n\t\t<MODE=ELEMENT | PHRASE>\n\t\t<SCHEME=scheme-name>\n\t\t<SCHEME_LOOKUP =EXACT  | IGNORE_CASE  | USE_MATCHDEF>\n\t\t<SENSITIVITY=sensitivity-level>\n\t\t<VAR=variable-name>;","arguments":[{"name":"LOCALE=","optional":true,"description":"specifies the ISO code of the locale that supports the specified match definition. This value replaces the default value that could be present in the scheme.","help":"LOCALE=*locale-name*","type":"value","supportSiteTargetFragment":"n06lod3hh02t6xn1dxcrhigi8pgi"},{"name":"MATCH-DEFINITION=","optional":true,"description":"specifies the name of the match definition, in the specified locale, that is referenced to generate match codes for the input variable.","help":"MATCH-DEFINITION=*match-definition*","type":"value","supportSiteTargetFragment":"n0mf8445fihhryn15ia4cj8y0q2c"},{"name":"MODE=","optional":true,"description":"specifies a mode of scheme application. This information overrides any default mode that is specified in the CREATE statement for the scheme, or in the DQSCHEMEAPPLY function or CALL routine.","help":"MODE=ELEMENT | PHRASE","type":"choice","arguments":[{"name":"ELEMENT","description":"specifies that each element in each value of the input variable is compared to the data values in the scheme. When SCHEME_LOOKUP=USE_MATCHDEF, the match code for each element is compared to match codes generated for each element, in each DATA variable value in the scheme.","type":"standalone","supportSiteTargetFragment":"n0do4y635qss46n1hkgjj74r3j86"},{"name":"PHRASE","description":"this default value specifies that the entirety of each value of the input variable is compared to the data values in the scheme. When SCHEME_LOOKUP=USE_MATCHDEF, the match code for the entire input value is compared to match codes that are generated for each data value in the scheme.","type":"standalone","supportSiteTargetFragment":"n0cn30qm9wi821n18wki9wh8kh3x"}],"supportSiteTargetFragment":"p09cz6q9jc0q2vn1xq7t3xk56hiq"},{"name":"SCHEME=","optional":true,"description":"identifies the scheme that transforms the input variable. In all the operating environments other than z/OS, schemes using QKB scheme file format are identified by specifying a fileref or a fully qualified name that ends in .sch.qkb. z/OS requires a SAS-format scheme file.","help":"SCHEME=*scheme-name*","type":"value","supportSiteTargetFragment":"n161jb64vrh1gvn1xr23zcohm7xf"},{"name":"SCHEME_LOOKUP","optional":true,"description":"specifies the method of applying the scheme to the input variable, replacing any default method in the scheme file. Valid values are defined as follows:","help":"SCHEME_LOOKUP =EXACT | IGNORE_CASE | USE_MATCHDEF","type":"choice","arguments":[{"name":"EXACT","description":"(default value) specifies that the values of the input variable are to be compared to the data values in the scheme without changing the input values in any way. The transformation value in the scheme is written into the output data set only when an input value exactly matches a data value in the scheme. Any adjacent blank spaces in the input values are replaced with single blank spaces before comparison.","type":"standalone","supportSiteTargetFragment":"n0ini044pbq2nin1gton8sw87qii"},{"name":"IGNORE_CASE","description":"specifies that capitalization is to be ignored when input values are compared to the data values in the scheme.","type":"standalone","supportSiteTargetFragment":"p1smd1vhyfpmlen1si8tzy3odxwk"},{"name":"USE_MATCHDEF","description":"specifies that comparisons are to be made between the match codes of the input values and the match codes in the scheme.","type":"standalone","supportSiteTargetFragment":"n0n1sxs5d0qu8nn1e6ny2dqlc3vv"}],"supportSiteTargetFragment":"n0ojubwv2fcpman1ka3dodfico28"},{"name":"SENSITIVITY=","optional":true,"description":"specifies the amount of information in the resulting match codes. This value replaces the sensitivity value that can be specified in the scheme.","help":" SENSITIVITY=*sensitivity-level*","type":"value","supportSiteTargetFragment":"p1wz66wzcwa7uan13rdr16zn7rd9"},{"name":"VAR=","optional":true,"description":"specifies the name of the input variable or source column that is analyzed and transformed. The type of the input variable can be CHAR or VARCHAR. When the variable is part of a table in SAS 9, VARCHAR is converted to CHAR at input. When the input variable is part of a table in CAS, VARCHAR is processed without conversion to CHAR. For more information, see VARCHAR Data Type in String Functions.","help":"VAR=*input-variable-name*","type":"value","supportSiteTargetFragment":"p16znixtsf6szjn167ozn696hkj6"}],"supportSiteTargetFile":"p1v3gvutnhc0pcn160heyymhmjme.htm"},{"name":"CONVERT","description":"Converts schemes between SAS and QKB scheme file formats.","help":"\n\tCONVERT  <QKBTOSAS  | SASTOQKB>\n\t  <IN=input-data-set> \n\t <OUT=output-data-set>; ","arguments":[{"name":"QKBTOSAS","description":"specify QKBTOSAS to convert a scheme in QKB scheme file format to SAS format. Specify SASTOQKB to convert a scheme in SAS format to QKB scheme file format. Schemes in SAS format are created with the CREATE statement using the NOQKB option in the DQSCHEME procedure.","type":"standalone","supportSiteTargetFragment":"n1nb6tac0k88oan111eashm2rqou"},{"name":"SASTOQKB","description":"specify QKBTOSAS to convert a scheme in QKB scheme file format to SAS format. Specify SASTOQKB to convert a scheme in SAS format to QKB scheme file format. Schemes in SAS format are created with the CREATE statement using the NOQKB option in the DQSCHEME procedure.","type":"standalone","supportSiteTargetFragment":"n1nb6tac0k88oan111eashm2rqou"},{"name":"IN=","description":"identifies the existing scheme data set that is to be converted.","help":"IN=*scheme-data-set*","type":"dataSet","supportSiteTargetFragment":"n1qp43urzkerikn1poayr7gdtdk6"},{"name":"OUT=","description":"specifies the name of the data set with the converted scheme.","help":"OUT=*converted-scheme-data-set*","type":"dataSet","supportSiteTargetFragment":"n0fio957cs6o1bn191eg8scakhdj"}],"supportSiteTargetFile":"p0h23749nqq6w6n1cv1vok7q22na.htm"},{"name":"CREATE","description":"Creates a scheme or an analysis data set.","help":"CREATE = <ANALYSIS=analysis-data-set >\n\t\n\t<INCLUDE_ALL>\n\t\t<LOCALE=locale-name>\n\t\t<MATCHDEF=match-definition  >\n\t\t<MODE=ELEMENT  | PHRASE>\n\t\t<SCHEME=scheme-name>\n\t\t<SCHEME_LOOKUP=EXACT | IGNORE_CASE | USE_MATCHDEF>\n\t\t<SENSITIVITY=sensitivity-level>\n\t\t<VAR=input-character-variable>;  ","arguments":[{"name":"ANALYSIS=","optional":true,"description":"Names the output data set that stores analytical data.","help":" ANALYSIS=*analysis-data-set* ","type":"dataSet","supportSiteTargetFragment":"p1rjtxqpkpotlvn1oaxlkjileqpx"},{"name":"INCLUDE_ALL","optional":true,"description":"specifies that the scheme is to contain all of the values of the input variable. This includes input variables with these conditions:\n• with unique  codes                     \n• that were not transformed\n• that did not receive a  number","type":"standalone","supportSiteTargetFragment":"p1fkvh7beyu5nkn15ikosrn08cpx"},{"name":"LOCALE=","optional":true,"description":"specifies the ISO code of the locale that supports the input data set and the specified match definition. This default is specified in the scheme. The default can be superseded by a different locale that is specified in the APPLY statement or in the DQSCHEMEAPPLY function or CALL routine. The value can be specified as a quoted string, a variable whose value is the locale name, or an expression that evaluates to the locale name.","help":"LOCALE=*locale-name*","type":"value","supportSiteTargetFragment":"n0hu6xxulony1yn1h2vfdtj3g856"},{"name":"MATCHDEF=","optional":true,"description":"names the match definition in the specified locale that is used to establish cluster numbers. You can specify any valid match definition.","help":" MATCHDEF=*match-definition*","type":"value","supportSiteTargetFragment":"n19ejj2vy2pm0xn1rawgfqk2ot68"},{"name":"MODE=","optional":true,"description":"specifies a mode of scheme application. This information is stored in the scheme as metadata, which specifies a default mode when the scheme is applied. The default mode is superseded by a mode in the APPLY statement, or in the DQSCHEMEAPPLY function or CALL routine.","help":"MODE=ELEMENT | PHRASE","type":"choice","arguments":[{"name":"ELEMENT","description":"specifies that each element in each value of the input character variable is compared to the data values in the scheme. When SCHEME_LOOKUP=USE_MATCHDEF, the match code for each element is compared to match codes generated for each element in each DATA variable value in the scheme.","type":"standalone","supportSiteTargetFragment":"p1grlcg4rvwm6mn1hiis6wxb64ug"},{"name":"PHRASE","description":"(default value) specifies that the entirety of each value of the input character variable is compared to the data values in the scheme. When SCHEME_LOOKUP=USE_MATCHDEF, the match code for the entire input value is compared to match codes that are generated for each data value in the scheme.","type":"standalone","supportSiteTargetFragment":"n0jy44r5j8u3xvn1qkfgmt2wmjqa"}],"supportSiteTargetFragment":"n10t4vyeypnnakn1t49rwbz7vbs6"},{"name":"SCHEME=","optional":true,"description":"specifies the name or the fileref of the scheme that is created. The fileref must reference a fully qualified path with a file name that ends in .sch.qkb. Lowercase letters are required. To create a scheme data set in QKB scheme file format, specify the QKB option in the DQSCHEME procedure.","help":"SCHEME=*scheme-name*","type":"value","supportSiteTargetFragment":"n12n8cjmlouxdln1c1e59fbntl7k"},{"name":"SCHEME_LOOKUP=","optional":true,"description":"specifies the default method of applying the scheme to the input variable. Valid values are defined as follows:","help":"SCHEME_LOOKUP=EXACT | IGNORE_CASE | USE_MATCHDEF","type":"choice","arguments":[{"name":"EXACT","description":"This default value specifies that the input variable will be compared to the data values in the scheme without changing the input values in any way. The transformation value in the scheme is written into the output data set only when an input value exactly matches a data value in the scheme. Any adjacent blank spaces in the input values are replaced with single blank spaces before comparison.","type":"standalone","supportSiteTargetFragment":"n0a5eanqbgo8rkn1rn9cy9ml5j9q"},{"name":"IGNORE_CASE","description":"specifies that capitalization is to be ignored when input values are compared to the data values in the scheme.","type":"standalone","supportSiteTargetFragment":"p0hkqyc92lmtbin1d9ge4wocfcle"},{"name":"USE_MATCHDEF","description":"specifies that comparisons are to be made between the match codes of the input values and the match codes of the data values in the scheme.","type":"standalone","supportSiteTargetFragment":"n058lofp4s7bj6n185zcjwq4ajiw"}],"supportSiteTargetFragment":"p0simt0333r2dmn17nw4weql0l6z"},{"name":"SENSITIVITY=","optional":true,"description":"determines the amount of information that is included in the match codes that are generated during the creation and perhaps the application of the scheme. The value of the SENSITIVITY option is stored in the scheme as a meta option. This provides a default sensitivity value when the scheme is applied.","help":"SENSITIVITY=*sensitivity-level*","type":"value","supportSiteTargetFragment":"n0rnpi8ad1h39kn18q3tvl57k5sv"},{"name":"VAR=","optional":true,"description":"specifies the name of the input variable or source column that is analyzed to create the scheme. The type of the input variable can be CHAR or VARCHAR. When the variable is part of a table in SAS 9, VARCHAR is converted to CHAR at input. When the input variable is part of a table in CAS, VARCHAR is processed without conversion to CHAR. For more information, see VARCHAR Data Type in String Functions.","help":"VAR=*input-character-variable*","type":"value","supportSiteTargetFragment":"p05ouqmzd036hln1jag3gmj5yf31"}],"supportSiteTargetFile":"n15kbh14jmtrc2n1gyl2fk5g1vzo.htm"}],"supportSiteInformation":{"docsetId":"dqclref","docsetVersion":"v_004","docsetTargetFile":"n1ix4dy79b76brn1jca5jxbaexen.htm"}}