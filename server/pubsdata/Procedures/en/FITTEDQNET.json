{"name":"FITTEDQNET","statements":[{"name":"PROC FITTEDQNET","description":"Trains a model by using the fitted Q-network (FQN) algorithm.","help":"PROC FITTEDQNET \n                DATA=libref.data-table <options>;\n\t<ACTION >\n                    <variable>;\n                \n\t<DONE >\n                    <variable>;\n                \n\t<OPTIMIZATION >\n                    <ADAM(<sub-options>) | SGD(<sub-options>)>\n                    <common-options>;\n                \n\tOUTPUT \n                    <OUT=libref.data-table>\n                    <options>;\n                \n\tQMODEL \n                    LAYERDIM=number <option>;\n                \n\t<REWARD >\n                    <variable>;\n                \n\tSAVESTATE \n                    RSTORE=libref.data-table;\n                \n\tSTATES \n                    CURRENTSTATE=variable NEXTSTATE=variable <option>;\n                \n\tTRAIN \n                    OUTMODEL=libref.data-table <options>;\n            ","arguments":[{"name":"DATA=","description":"specifies the data table for the FQN training algorithm to be applied to.","help":"DATA=*libref.data-table*","type":"dataSet","supportSiteTargetFragment":"p0w1rcz0941r4qn1dd3e3p2k28pd"},{"name":"DETERMINISTIC","optional":true,"description":"tells the NVIDIA CUDA Deep Neural Network library (CuDNN) that you want only the deterministic implementations.","type":"standalone","supportSiteTargetFragment":"p0cv2pjdzauy2an1horqa1k9ygo7"},{"name":"INMODEL=","optional":true,"description":"specifies the table that contains the model structure and trained weights.","help":"INMODEL=*libref.data-table*","type":"dataSet","supportSiteTargetFragment":"p10ql3aamqxciun1g8r7byhchvn0"},{"name":"LOGFREQ=","optional":true,"description":"specifies how frequently to display messages in the log.","help":"LOGFREQ=*number*","type":"value","supportSiteTargetFragment":"n1pxaw2kvebp4jn1rsjw96wqh19k"},{"name":"SEED=","optional":true,"description":"specifies the seed to use for the random number generator for training.","help":"SEED=*number*","type":"value","supportSiteTargetFragment":"p05o50es0ldsinn1lqwoal7jl6hm"},{"name":"USEGPU","optional":true,"description":"specifies that a GPU device is to be used. You can specify the following suboption:","type":"standalone","supportSiteTargetFragment":"p0zjfa9njxj784n1gx8kbq4zq3fl"},{"name":"USEGPU","optional":true,"description":"specifies the ID number of the GPU device to be used.","help":"USEGPU(DEVICE=*id-number*)","type":"value","supportSiteTargetFragment":"n0rdddy0jujvi3n1m4da51x3zuef"}],"supportSiteTargetFile":"n08pcqqw8ioztsn10latn0d5m1qc.htm"},{"name":"ACTION","description":"The ACTION statement specifies the action variable in the data table to use for training and scoring the FQN model.","help":"ACTION \n                        <variable>;","arguments":[{"name":"ACTION","optional":true,"description":"specifies the action variable in the data table.","help":"ACTION *variable*","type":"value","supportSiteTargetFragment":"n0i2r3dahoma10n14vsfx08q9b5o"}],"supportSiteTargetFile":"p0dpbrdzp3z2htn1pk7t0v4cklbh.htm"},{"name":"DONE","description":"The DONE statement specifies the done variable in the data table to use for training and scoring the FQN model.","help":"DONE \n                        <variable>;","arguments":[{"name":"DONE","optional":true,"description":"specifies the done variable in the data table.","help":"DONE *variable*","type":"value","supportSiteTargetFragment":"p1q3w2wmq4c9h5n10srfoiu95zzm"}],"supportSiteTargetFile":"n1x7g3ik2zq716n117hy5zlhnt4o.htm"},{"name":"OPTIMIZATION","description":"The OPTIMIZATION statement specifies the optimizer parameters to use in training FQN model.","help":"OPTIMIZATION \n                        <ADAM(<sub-options>) | SGD(<sub-options>)>\n                        <common-options>;","arguments":[{"name":"ADAM","optional":true,"description":"specifies the optimization method to use in training the FITTEDQNET model.","type":"standalone","supportSiteTargetFragment":"n1edjm7e5qsvq1n1dla5ar7e2e62"},{"name":"ADAM","optional":true,"description":"specifies the exponential decay rate for the first-moment estimates for the Adam optimizer.","help":"ADAM(BETA1=*number*)","type":"value","supportSiteTargetFragment":"p09jc346s0tgr4n12ty70bhu4jcw"},{"name":"ADAM","optional":true,"description":"specifies the exponential decay rate for the second-moment estimates for the Adam optimizer.","help":"ADAM(BETA2=*number*)","type":"value","supportSiteTargetFragment":"p0wr1jmaejh7ezn1s4kaatatglux"},{"name":"ADAM","optional":true,"description":"specifies the value to add to the second moment of the gradient in the denominator to improve numerical stability.","help":"ADAM(EPSILON=*number*)","type":"value","supportSiteTargetFragment":"p1l3hzdfa44fs5n1trkgatb04f9u"},{"name":"ADAM","optional":true,"description":"uses the AMSGrad variant of the Adam optimizer.","help":"ADAM(USEAMSGRAD)","type":"standalone","supportSiteTargetFragment":"n1x6o986a9ft14n0z26oxpsl9fm4"},{"name":"SGD","optional":true,"description":"specifies the optimization method to use in training the FITTEDQNET model.","type":"standalone","supportSiteTargetFragment":"p1jkk5fvf4n4h0n12ydxkjr68pyl"},{"name":"SGD","optional":true,"description":"specifies the momentum value for the SGD optimizer.","help":"SGD(MOMENTUM=*number*)","type":"value","supportSiteTargetFragment":"p0anqdfw4x8re5n1ctqx2sgvbhw3"},{"name":"SGD","optional":true,"description":"enables Nesterov momentum.","help":"SGD(USENESTEROV)","type":"standalone","supportSiteTargetFragment":"p0f8effw1akibdn1vcsafnfimwdu"},{"name":"SGD","optional":true,"description":"specifies the damping value for momentum.","help":"SGD(DAMPING=*number*)","type":"value","supportSiteTargetFragment":"p1b32zycg6tgxpn1t0exojo2qexs"},{"name":"LEARNINGRATE=","optional":true,"description":"specifies the learning rate for the optimizer.","help":"LEARNINGRATE=*number*","type":"value","supportSiteTargetFragment":"n1kecn8yum0sopn11rh5elkoxg6r"},{"name":"MINIBATCHSIZE=","optional":true,"description":"specifies the number of observations in one minibatch. The number should be smaller than the total number of observations in the input data set.","help":"MINIBATCHSIZE=*number*","type":"value","supportSiteTargetFragment":"n0q04edpaxausyn1s1azricf4hg7"},{"name":"REGL2=","optional":true,"description":"specifies the L2 regularization parameter.","help":"REGL2=*number*","type":"value","supportSiteTargetFragment":"n0o61xytjwwhitn1s63r9klgbtyg"}],"supportSiteTargetFile":"n0t92s19t60s52n1sqvpczh4gtel.htm"},{"name":"OUTPUT","description":"The OUTPUT statement creates an output data table that contains the results of PROC FITTEDQNET.","help":"OUTPUT \n                        options;","arguments":[{"name":"COPYVARS=","optional":true,"aliases":["copyvar"],"description":"lists one or more variables from the input data table to be transferred to the output data table.","help":"COPYVARS=*varlist*","type":"value","supportSiteTargetFragment":"p0vizoelig2mjpn1lo99auxrxkxr"},{"name":"OUT=","optional":true,"description":"creates an output data table that contains the results of PROC FITTEDQNET.","help":"OUT=*libref.data-table*","type":"dataSet","supportSiteTargetFragment":"p1izo9fvfn96pvn1pods8rhk4sjl"}],"supportSiteTargetFile":"n1rjdqy4g77hfpn1tb12mw89zk7v.htm"},{"name":"QMODEL","description":"The QMODEL statement specifies the neural network parameters to use for estimating the Q-function.","help":"QMODEL \n                        LAYERDIM=number <option>;","arguments":[{"name":"LAYERDIM=","description":"specifies the number of neurons in the neural network layer.","help":"LAYERDIM=*number*","type":"value","supportSiteTargetFragment":"p0upodlqr9hgddn13xdc2hv6jfw7"},{"name":"ACTIVATION=","optional":true,"description":"specifies the activation function type for the neural network layer.","help":"ACTIVATION=IDENTITY | RELU | SIGMOID | TANH","type":"choice","arguments":[{"name":"IDENTITY","type":"standalone"},{"name":"RELU","type":"standalone"},{"name":"SIGMOID","type":"standalone"},{"name":"TANH","type":"standalone"}],"supportSiteTargetFragment":"p1tw2a027wj17rn11ppbsp1t0p3n"}],"supportSiteTargetFile":"n1u50dhtievblnn0zmf27kw4k79q.htm"},{"name":"REWARD","description":"The REWARD statement specifies the reward variable in the data table to use for training and scoring the FQN model.","help":"REWARD \n                        <variable>;","arguments":[{"name":"REWARD","optional":true,"description":"specifies the reward variable in the data table.","help":"REWARD *variable*","type":"value","supportSiteTargetFragment":"p1h2oah91s0b10n16vq73qt6ivgo"}],"supportSiteTargetFile":"n14e2d4qnhro2dn1006mii9xqgb3.htm"},{"name":"SAVESTATE","description":"The SAVESTATE statement creates an analytic store for the model and saves it as a binary object in a data table. You can use the analytic store in the ASTORE procedure to score new data.","help":"SAVESTATE \n                        RSTORE=libref.data-table;","arguments":[{"name":"RSTORE=","description":"creates an analytic store for the model and saves it as a binary object in a data table. You can use the analytic store in the ASTORE procedure to score new data.","help":"RSTORE=*libref.data-table*","type":"dataSet","supportSiteTargetFragment":"n1i5skqco8qsf0n1hki58ah6dju5"}],"supportSiteTargetFile":"p00mkvo92mq4gan1sby3ed47799p.htm"},{"name":"STATES","description":"The STATES statement specifies the current and future state variables in the data table to use for training and scoring the FQN model.","help":"STATES \n                        CURRENTSTATE=variable NEXTSTATE=variable <option>;","arguments":[{"name":"CURRENTSTATE=","description":"specifies the variable that indicates the current state for training and scoring.","help":"CURRENTSTATE=*variable*","type":"value","supportSiteTargetFragment":"n0e0xvqy7851q0n1e0nv9q6dh1i9"},{"name":"NEXTSTATE=","description":"specifies the variable that indicates the next state for training and scoring.","help":"NEXTSTATE=*variable*","type":"value","supportSiteTargetFragment":"p0dfh4gzj44tp7n1ojoa8el90t36"},{"name":"NOMNOMINAL","optional":true,"description":"specifies whether the state is nominal.","type":"choice","arguments":[{"name":"NOM","type":"standalone"},{"name":"NOMINAL","type":"standalone"}],"supportSiteTargetFragment":"n1ag4xcau0goy9n16887na1aa5ab"}],"supportSiteTargetFile":"p0fhzodx4rg16gn1ek3v5fu8fo5i.htm"},{"name":"TRAIN","description":"The TRAIN statement specifies the training parameters to use for training the FQN model.","help":"TRAIN \n                        OUTMODEL=libref.data-table <options>;","arguments":[{"name":"OUTMODEL=","description":"specifies a table to be used to save the model structure and weights.","help":"OUTMODEL=*libref.data-table*","type":"dataSet","supportSiteTargetFragment":"p0hsniq355va03n1cuwvecxa5t7c"},{"name":"CHECKPOINTFREQ=","optional":true,"description":"specifies how often to save training parameters.","help":"CHECKPOINTFREQ=*number*","type":"value","supportSiteTargetFragment":"n192wqhndg0w3yn102ulcp2ex79r"},{"name":"GAMMA=","optional":true,"description":"specifies the discount factor to be used to compute long-term value.","help":"GAMMA=*number*","type":"value","supportSiteTargetFragment":"p0s41x1ge2nmn6n1l1jxo071f2oe"},{"name":"INCHECKPOINT=","optional":true,"aliases":["CHECKPOINTIN"],"description":"specifies the checkpoint table to be loaded to restore your model.","help":"INCHECKPOINT=*libref.data-table*","type":"dataSet","supportSiteTargetFragment":"p1vs1qqpsqxndfn16gx9x0id45f8"},{"name":"MAXGRADIENTNORM=","optional":true,"description":"specifies the maximum allowed value for the gradient magnitude.","help":"MAXGRADIENTNORM=*number*","type":"value","supportSiteTargetFragment":"p1byulpq4bw639n15x68ahnb6t3b"},{"name":"NUMEPOCHS=","optional":true,"description":"specifies the number of epochs to use in training the model.","help":"NUMEPOCHS=*number*","type":"value","supportSiteTargetFragment":"p1jvplzfafvx4rn1rvqy3e9bgifn"},{"name":"OUTCHECKPOINT=","optional":true,"aliases":["CHECKPOINTOUT"],"description":"specifies the table in which to save the current model as a checkpoint.","help":"OUTCHECKPOINT=*libref.data-table*","type":"dataSet","supportSiteTargetFragment":"p0642hc9idpc3ln18gv4kl8dh2xq"},{"name":"TARGETUPDATEINTERVAL=","optional":true,"description":"specifies how often to reset the target Q model parameters to the current Q model parameters.","help":"TARGETUPDATEINTERVAL=*number*","type":"value","supportSiteTargetFragment":"n0qe9n294i833bn17o7goqcja5fb"}],"supportSiteTargetFile":"p04o9j8zh4vv80n1na4hu6o8hmds.htm"}],"supportSiteInformation":{"docsetId":"casmlproc","docsetVersion":"v_004","docsetTargetFile":"p1jhqba7g7q9ckn1cb6pn1s4joux.htm"}}