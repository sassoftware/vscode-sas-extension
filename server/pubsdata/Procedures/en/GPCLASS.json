{"name":"GPCLASS","statements":[{"name":"PROC GPCLASS","description":"The GPCLASS procedure performs classification—a common step in data exploration—on quantitative data in SAS Viya. This procedure performs binary classification by using Gaussian process classification (GPC), which is a method of probabilistic modeling that assumes that an underlying function is generated by a Gaussian process (GP) that determines the class labels of the data. As a nonparametric method, GPC allows the model parameters to adapt to the input data. To be specific, the Gaussian process adaptively learns the parameters of the latent function that lies in its corresponding reproducing kernel Hilbert space (RKHS), which is defined by the kernel of the Gaussian process, thus enabling good prediction performance.","help":"PROC GPCLASS <options>;                 \n\tAUTOTUNE <options>;                 \n\tDISPLAY <table-list></ options>;                 \n\tDISPLAYOUT  table-spec-list </ options>;                 \n\tINFERENCE  inference-algorithm <options>;                 \n\tINPUT  variables <LEVEL=INTERVAL>;                 \n\tKERNEL  kernel-type <options>;                 \n\tOUTPUT  OUT=libref.data-table<options>;                 \n\tSAVESTATE  RSTORE=libref.data-table<option>;                 \n\tTARGET  variables <LEVEL=NOMINAL>;                 ","arguments":[{"name":"DATA=","optional":true,"description":"names the input data table for PROC GPCLASS to use. The default is the most recently created data table.","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"ID=","optional":true,"description":"specifies the variable that contains IDs of the observations in the input data table. This option specifies a column in the input data table to contain the input observations IDs.","help":"ID=*variable*","type":"value"},{"name":"LINK=","optional":true,"description":"specifies the link function to be used in the Gaussian process classification. In this method of classification, the link function is a sigmoid type of function that maps from the latent Gaussian process to a real number between 0 and 1 (that is, the predicted class probability). PROC GPCLASS currently supports only the logit function.","help":"LINK=*keyword*","type":"value"},{"name":"NTHREADS=","optional":true,"description":"specifies the number of threads to use in the computation. The default value is the number of CPUs available in the machine.","help":"NTHREADS=*number-of-threads*","type":"value"},{"name":"SEED=","optional":true,"description":"specifies an integer to be used to start the pseudorandom number generator. If you do not specify a seed or if you specify a value less than or equal to 0, the seed is generated by reading the time of day from the computer’s clock.","help":"SEED=*number*","type":"value"},{"name":"TESTDATA=","optional":true,"description":"names the input data table for PROC GPCLASS to use for testing. As a supervised machine learning procedure, PROC GPCLASS takes its input data in two parts: the training data table as specified by the DATA= option and the test testing data table as specified by the TESTDATA= option. The procedure first performs the training task of the Gaussian process classification, and then it performs the testing process in which the predicted class labels and probabilities are generated from the data in the testing data table.","help":"TESTDATA=*libref.data-table*","type":"dataSet"}]},{"name":"AUTOTUNE","description":"searches for the best combination of some option values in the PROC GPCLASS, KERNEL, and INFERENCE statement","help":"AUTOTUNE &lt;options&gt;;                                              ","arguments":[{"name":"TUNINGPARAMETERS=","optional":true,"aliases":["TUNEPARMS="],"description":"specifies which parameters to tune and which ranges to tune over. If USEPARAMETERS=STANDARD, this option is ignored.","help":"TUNINGPARAMETERS=(*suboption* |...| &lt;*suboption*&gt;)","type":"value","arguments":[{"name":"CONSTANT","description":"specifies the constant to be used in the linear kernel","help":"CONSTANT (LB=*number* UB=*number* VALUES=*value-list* INIT=*number* EXCLUDE)","type":"value","arguments":[{"name":"LB=","description":"specifies the minimum kernel constant to use in the tuning process, where number is a nonnegative double. If you specify this suboption, you cannot specify the VALUES= suboption. By default, LB=0.","help":"LB=*number*","type":"value"},{"name":"UB=","description":"specifies the maximum kernel constant to use in the tuning process, where number is a nonnegative double. If you specify this suboption, you cannot specify the VALUES= suboption. By default, UB=100.","help":"UB=*number*","type":"value"},{"name":"VALUES=","description":"specifies a list of kernel constants to use in the tuning process, where value-list is a space-separated list of nonnegative doubles. If you specify this suboption, you cannot specify either the LB= or UB= suboption.","help":"VALUES=*value-list*","type":"value"},{"name":"INIT=","description":"specifies the initial kernel constant in the tuning process. By default, INIT=0.","help":"INIT=*number*","type":"value"},{"name":"EXCLUDE","description":"excludes the kernel constant from the tuning process. If you specify this suboption, any specified LB=, UB=, VALUES=, and INIT= suboptions are ignored.","type":"standalone"}]},{"name":"KERNEL","description":"specifies the kernel type to be used in the Gaussian process","help":"KERNEL (VALUES=*value-list* INIT=*value* EXCLUDE)","type":"value","arguments":[{"name":"VALUES=","description":"specifies a list of kernel types to use in the tuning process, where value-list is a space-separated list of GAUSSIAN and LINEAR","help":"VALUES=*value-list*","type":"value"},{"name":"INIT=","description":"specifies the initial kernel type in the tuning process. By default, INIT=GAUSSIAN.","help":"INIT={GAUSSIAN | LINEAR}","type":"choice"},{"name":"EXCLUDE","description":"excludes the kernel type from the tuning process. If you specify this suboption, the VALUES= and INIT= suboptions are ignored.","type":"standalone"}]},{"name":"MAXLAITER","description":"specifies the maximum number of the iterations for the Laplacian approximation","help":"MAXLAITER (LB=*number* UB=*number* VALUES=*value-list* INIT=*number* EXCLUDE)","type":"value","arguments":[{"name":"LB=","description":"specifies the minimum number of the iterations to use in the tuning process, where number is a nonnegative integer. If you specify this suboption, you cannot also specify the VALUES= suboption. By default, LB=10.","help":"LB=*number*","type":"value"},{"name":"UB=","description":"specifies the maximum number of the iterations to use in the tuning process, where number is a nonnegative integer. If you specify this suboption, you cannot specify the VALUES= suboption. By default, UB=200.","help":"UB=*number*","type":"value"},{"name":"VALUES=","description":"specifies a list of numbers of the iterations to use in the tuning process, where value-list is a space-separated list of nonnegative integers. If you specify this suboption, you cannot specify either the LB= or UB= suboption.","help":"VALUES=*value-list*","type":"value"},{"name":"INIT=","description":"specifies the initial number of the iterations in the tuning process. By default, INIT=100.","help":"INIT=*number*","type":"value"},{"name":"EXCLUDE","description":"excludes the number of the iterations from the tuning process. If you specify this suboption, any specified LB=, UB=, VALUES=, and INIT= suboptions are ignored.","type":"standalone"}]},{"name":"SIGMA","description":"specifies the bandwidth to be used in the Gaussian kernel","help":"SIGMA (LB=*number* UB=*number* VALUES=*value-list* INIT=*number* EXCLUDE)","type":"value","arguments":[{"name":"LB=","description":"specifies the minimum bandwidth to use in the tuning process, where number is a nonnegative integer. If you specify this suboption, you cannot specify the VALUES= suboption. By default, LB=0.01.","help":"LB=*number*","type":"value"},{"name":"UB=","description":"specifies the maximum bandwidth to use in the tuning process, where number is a nonnegative double. If you specify this suboption, you cannot specify the VALUES= suboption. By default, UB=100.","help":"UB=*number*","type":"value"},{"name":"VALUES=","description":"specifies a list of bandwidths to use in the tuning process, where value-list is a space-separated list of nonnegative doubles. If you specify this suboption, you cannot specify either the LB= or UB= suboption.","help":"VALUES=*value-list*","type":"value"},{"name":"INIT=","description":"specifies the initial bandwidth in the tuning process. By default, INIT=1.","help":"INIT=*number*","type":"value"},{"name":"EXCLUDE","description":"excludes the bandwidth from the tuning process. If you specify this suboption, any specified LB=, UB=, VALUES=, and INIT= suboptions are ignored.","type":"standalone"}]},{"name":"THRESHOLD","description":"specifies the minimum change of the loss function between consecutive Newton iterations","help":"THRESHOLD (LB=*number* UB=*number* VALUES=*value-list* INIT=*number* EXCLUDE)","type":"value","arguments":[{"name":"LB=","description":"specifies the minimum threshold to use in the tuning process, where number is a nonnegative double. If you specify this suboption, you cannot specify the VALUES= suboption. By default, LB=1E–11.","help":"LB=*number*","type":"value"},{"name":"UB=","description":"specifies the maximum threshold to use in the tuning process, where number is a nonnegative double. If you specify this suboption, you cannot specify the VALUES= suboption. By default, UB=1.","help":"UB=*number*","type":"value"},{"name":"VALUES=","description":"specifies a list of thresholds to use in the tuning process, where value-list is a space-separated list of nonnegative doubles. If you specify this suboption, you cannot specify either the LB= or UB= suboption.","help":"VALUES=*value-list*","type":"value"},{"name":"INIT=","description":"specifies the initial threshold in the tuning process. By default, INIT=1E–10.","help":"INIT=*number*","type":"value"},{"name":"EXCLUDE","description":"excludes the threshold from the tuning process. If you specify this suboption, any specified LB=, UB=, VALUES=, and INIT= suboptions are ignored.","type":"standalone"}]}]}]},{"name":"DISPLAY","description":"enables you to specify a list of display tables to display or exclude. This statement is similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve performance when a large number of tables could be generated (such as in BY-group processing). The procedure processes the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. Because ODS statements are processed on a SAS client, first all the generated display tables are sent to the client, and then the client creates a subset. If you use both DISPLAY and ODS statements together, the DISPLAY statement takes precedence over the ODS statements. Note that the ODS EXCLUDE statement processes tables that are sent to the client after they have been filtered by the DISPLAY statement. In some cases, it might appear that the ODS EXCLUDE statement is taking precedence because it can further filter the tables.","help":"DISPLAY &lt;table-list&gt;&lt;/ options&gt;;                                              ","arguments":[{"name":"CASESENSITIVE","optional":true,"followsDelimiter":"/","description":"performs a case-sensitive comparison of table names in the table-list to display table names when tables are subsetted for display. To preserve case, you must enclose table names in the table-list in quotation marks.","type":"standalone"},{"name":"EXCLUDE","optional":true,"followsDelimiter":"/","description":"displays all display tables except those that you specify in the table-list","type":"standalone"},{"name":"EXCLUDEALL","optional":true,"followsDelimiter":"/","description":"suppresses display of all tables. This option takes precedence over the other options.","type":"standalone"},{"name":"TRACE","optional":true,"followsDelimiter":"/","description":"displays the display table names, labels, and paths","type":"standalone"}]},{"name":"DISPLAYOUT","description":"enables you to create output tables from your displayed output. This statement is similar to the ODS OUTPUT statement. The table-spec-list specifies a list of output tables in key=value or key format. key=value specifies key as the ODS table name, path, or partial pathname, and value as the output table name. key is the ODS table name and the output table name. You cannot specify the ODS table named OutputCasTables in the table-spec-list. You also cannot specify the ODS tables that are created by the AUTOTUNE statement. The DISPLAYOUT statement does not support regular expressions.","help":"DISPLAYOUT  table-spec-list &lt;/ options&gt;;                                                                            ","arguments":[{"name":"INCLUDEALL","optional":true,"followsDelimiter":"/","description":"creates output tables for all display tables. The name of the created output table is the same as the name of the corresponding display table. If you specify this option, the table-spec-list specification is ignored.","type":"standalone"},{"name":"NOREPLACE","optional":true,"followsDelimiter":"/","description":"does not replace any existing output table of the same name","type":"standalone"},{"name":"REPEATED","optional":true,"followsDelimiter":"/","description":"replicates all output tables on all nodes","type":"standalone"}]},{"name":"INFERENCE","description":"specifies the inference-related parameters to use in the Gaussian process classification","help":"INFERENCE  LA&lt;option&gt;;                                               LA uses Laplacian approximation.","arguments":[{"name":"MAXITER=","optional":true,"description":"specifies the maximum number of Newton iterations","help":"MAXITER=*number*","type":"value"},{"name":"THRESHOLD=","optional":true,"description":"specifies the minimum change of the loss function between consecutive Newton iterations","help":"THRESHOLD=*number*","type":"value"}]},{"name":"INPUT","description":"specifies the names of the variables to use in the classification. You can specify multiple INPUT statements, and one INPUT statement can include the LEVEL=INTERVAL option for interval input variables. For classification, only interval variables are accepted.","help":"INPUT  variables &lt;LEVEL=INTERVAL&gt;;                                              "},{"name":"KERNEL","description":"specifies the kernel-related parameters to use in the Gaussian process","help":"KERNEL  GAUSSIAN | LINEAR &lt;option&gt;;                                              ","arguments":[{"name":"CONSTANT=","optional":true,"description":"specifies the constant in the linear kernel function","help":"CONSTANT=*number*","type":"value"},{"name":"SIGMA=","optional":true,"description":"specifies the bandwidth in the Gaussian kernel function","help":"SIGMA=*number*","type":"value"}]},{"name":"OUTPUT","description":"writes the classification score of each observation to the output data table that you specify in the OUT= option. This information includes the variables that you specify in the COPYVARS= option and four new variables: _I_TARGET_ (the predicted class label of the target variable), _P_TARGETCLASS0_(the predicted class probability for class 0), _P_TARGETCLASS1_(the predicted class probability for class 1), and _P_VAR_ (the variance value of the prediction).","help":"OUTPUT  OUT=*libref.data-table*&lt;option&gt;;                                              ","arguments":[{"name":"OUT=","optional":true,"description":"names the output data table for PROC GPCLASS to use. You must specify this option before any other options. libref.data-table is a two-level name, where libref refers to a collection of information that is defined in the LIBNAME statement and includes the library, which includes a path to where the data table is to be stored, and a session identifier, which defaults to the active session but which can be explicitly defined in the LIBNAME statement. data-table specifies the name of the output data table. The output data table contains the scored data. When you specify this option, all variables that are specified in the COPYVARS= option are added to the output data table that is specified in this option.","help":"OUT=*libref.data-table*","type":"dataSet"},{"name":"COPYVAR=","optional":true,"aliases":["COPYVARS="],"description":"lists one or more variables from the input data table that are transferred to the scored output data table, provided that the output data table produces one or more records per input observation. By default, PROC GPCLASS does not transfer any variables from the input data table to the output data table. The COPYVARS= option accepts numeric and character variables. You can also use the COPYVARS=(_ALL_) option to include all the input variables.","help":"COPYVAR={*variable*}","type":"value"}]},{"name":"SAVESTATE","description":"creates an analytic store for the model and saves it as a binary object in a data table. You can then use the analytic store in the ASTORE procedure to score new data. The analytic store inherits the same parameters that the SAVESTATE statement uses.","help":"SAVESTATE  RSTORE=*libref.data-table*;                                              ","arguments":[{"name":"RSTORE=","optional":true,"description":"specifies a data table in which to save the analytic store for the model. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"RSTORE=*libref.data-table*","type":"dataSet"}]},{"name":"TARGET","description":"specifies the name of the variable to be used as the classification target. You can use one TARGET statement that includes the LEVEL=NOMINAL option for the nominal target variable. Only one nominal variable is accepted as the target.","help":"TARGET  variable &lt;LEVEL=NOMINAL&gt;;                                              "}],"supportSiteInformation":{"docsetId":"casml","docsetVersion":"latest","docsetTargetFile":"casml_gpclass_toc.htm"}}