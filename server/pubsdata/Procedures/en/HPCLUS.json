{"name":"HPCLUS","statements":[{"name":"PROC HPCLUS","description":"The HPCLUS procedure executes high-performance clustering. Clustering is a common step in the data exploration stage. The HPCLUS procedure takes only numeric variables. † The HPCLUS procedure performs an cluster analysis on the basis of distances computed from one or more variables. The observations are divided into clusters such that every observation belongs to one and only one cluster. † By default, the HPCLUS procedure uses Euclidean distances. The clustering method used is k-means model. In that model, the cluster centers are the means of the observations assigned to each cluster when the algorithm is run to complete convergence. Each iteration reduces the least-squared criterion for Euclidean until convergence is achieved. † PROC HPCLUS produces brief summaries of clusters that it computes.","help":"PROC HPCLUS <CLUSTERS=number> <DATA=<libref.>SAS-data-set> <DISTANCE=MANHATTAN | EUCLIDEAN | MINKOWSKI... > <INITIALIZE=keyword> <MAXITER=number> <OUTSTAT=< libref. >SAS-data-set> <number> <STOPCRITERION=keyword(VALUE=number)>;     \n\tCODE <FILE= filename> ; \n   \n\tFREQ variable ;     \n\tID variables ;     \n\tINPUT variables < options > ;     \n\tPERFORMANCE <COMMIT=n> <CPUCOUNT=<ACTUAL | <num>>> <DATASERVER=“name”> ...; \n   \n\tSCORE < options > ; ","arguments":[{"name":"CLUSTERS=","optional":true,"description":"Specifies the number of clusters. If you omit the CLUSTERS= option, a value of 6 is assumed. If the number of observations is less than the number specified in CLUSTERS= option, than CLUSTERS will be set to the number of observations. ADD DETAILS ABOUT REMOVING CLUSTERS THAT HAS ZERO OBSERVATIONS.","help":"CLUSTERS=*number*","type":"value"},{"name":"DATA=","optional":true,"description":"Names the SAS data set for which PROC HPCLUS is to compute clusters. The default is the most recently created data set. If the data are already distributed, PROC HPCLUS reads the data alongside the distributed database.","type":"value"},{"name":"DISTANCE=","optional":true,"description":"Syntax: DISTANCE=keyword specifies distance measure for similarity. You can choose from the following methods by specifying the appropriate keyword:","help":"DISTANCE=MANHATTAN | EUCLIDEAN | MINKOWSKI | CHEBYSHEV*keyword*","type":"value","arguments":[{"name":"MANHATTAN","description":"Performs Manhattan distance calculation (p = 1).","type":"standalone"},{"name":"EUCLIDEAN","description":"Performs Euclidean distance calculation (p = 2).","type":"standalone"},{"name":"MINKOWSKI","description":"Performs Minkowski distance calculation (1 < p > 2). The value for p can be specified using the suboption. The default value for p is 1.2. PUT THAT SUBOPTION HERE.","type":"standalone"},{"name":"CHEBYSHEV","description":"Performs Chebyshev distance calculation (p = ∞).","type":"standalone"}]},{"name":"INITIALIZE=","optional":true,"description":"Specifies the initialization technique for cluster centroids. For this release, only RANDOM keyword is supported and this is the default for that option.","help":"INITIALIZE=*keyword*","type":"value"},{"name":"MAXITER=","optional":true,"description":"specifies the maximum number of iterations for recomputing cluster centroids. When the value of the MAXITER= option is greater than zero, PROC HPCLUS executes the third of the four steps described in the section Background on page XXX. In each iteration, each observation is assigned to the nearest cluster centroid, and the centroids are recomputed as the means of the clusters. The default value of the MAXITER= option is 10.","help":"MAXITER=*number*","type":"value"},{"name":"OUTSTAT=","optional":true,"description":"Creates the output SAS data set to contain the cluster centroids for each cluster. If the OUTITER is specified, the dataset contains cluster centroids at each iteration.","type":"value"},{"name":"SEED=","optional":true,"description":"Specifies a positive integer as a starting value for the pseudo-random number generator for use with INITIALIZE=RANDOM. The default value for SEED= is 12345.","type":"value"},{"name":"STOPCRITERION=","optional":true,"description":"specifies the method that will be used for convergence. If you omit the STOPCRITERION= option, Only the following method is supported for this release:","help":"STOPCRITERION=VALUE=","type":"choice","arguments":[{"name":"VALUE=","type":"value"}]}]},{"name":"CODE","description":"The CODE statement generates SAS DATA step code that mimics the computations done by the SCORE statement. You can specify the following options: FILE=filename specifies the filename of the file to which the SAS score code is written.","help":"CODE &lt;FILE= filename&gt; ","arguments":[{"name":"FILE=","optional":true,"description":"Specifies the filename of the file to which the SAS score code is written.","type":"value"}]},{"name":"FREQ","description":"The variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency of occurrence for each observation. SAS High-Performance Analytics procedures that support the FREQ statement treat each observation as if it appeared f times, where f is the value of the FREQ variable for the observation. If the frequency value is not an integer, it is truncated to an integer. If the frequency value is less than 1 or missing, the observation is not used in the analysis. When the FREQ statement is not specified, each observation is assigned a frequency of 1.","help":"FREQ variable "},{"name":"ID","description":"The optional ID statement lists one or more variables from the input data set that are transferred to the output data set. The ID statement accepts numeric and character variables. For example, when you specify the OUT= option in the PROC HPCLUS statement, the ID variables, followed by cluster variables and cluster distance variables, are added to the output data set. By default, the HPCLUS procedure does not include any variables from the input data set in the output data sets.","help":"ID variables "},{"name":"INPUT","description":"The INPUT statement names one of more input variables with common options. You can specify multiple INPUT statements..","help":"INPUT variables &lt; options &gt; "},{"name":"PERFORMANCE","description":"he PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, passes variables about the distributed computing environment, and requests detailed results about the performance characteristics of the HPCLUS procedure. With the PERFORMANCE statement, you can also control whether the HPCLUS procedure executes in symmetric multiprocessing or massively parallel mode.","help":"PERFORMANCE &lt;COMMIT=n&gt; &lt;CPUCOUNT=&lt;ACTUAL | &lt;num&gt;&gt;&gt; &lt;DATASERVER=“name”&gt; ...","arguments":[{"name":"COMMIT=","optional":true,"description":"Requests that the High-Performance Analytics procedure write periodic updates to the SAS Log when observations are sent from the client to the appliance for distributed processing.","help":"COMMIT=*n*","type":"value"},{"name":"CPUCOUNT=","optional":true,"description":"Specifies how many processors the procedure assumes are available on each host in the computing environment. num can be any integer from 1 to 256. CPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","help":"CPUCOUNT=ACTUAL | &lt;*num*&gt;","type":"choice","arguments":[{"name":"ACTUAL","description":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","type":"standalone"},{"name":"num","placeholder":true,"description":"Replace <num> with an actual number. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","type":"standaloneOrValue"}]},{"name":"DATASERVER=","optional":true,"description":"Specifies the name of the server on Teradata systems as defined through the hosts file and as used in the LIBNAME statement for Teradata. For example, if the hosts file defines myservercop1 33.44.55.66 as the server for Teradata, then a LIBNAME specification would be as follows: libname TDLib teradata server=myserver user= password= database= ; A PERFORMANCE statement to induce running alongside the Teradata server would specify the following:","type":"value"},{"name":"DETAILS","optional":true,"description":"Requests a table that shows a timing breakdown of the procedure steps.","type":"standalone"},{"name":"HOST=","optional":true,"aliases":["GRIDHOST="],"description":"Specifies the name of the appliance host in single or double quotes. If the HOST= option is specified, it overrides the value of the GRIDHOST environment variable.","type":"value"},{"name":"INSTALL=","optional":true,"aliases":["INSTALLLOC="],"description":"Specifies the directory in which the High-Performance Analytics shared libraries are installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable.","type":"value"},{"name":"NODES=","optional":true,"aliases":["NNODES="],"description":"Specifies the number of nodes in the distributed computing environment, provided that the data are not processed alongside the database.","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads are determined based on the number of CPUs on the host on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count is specific to the High- Performance Analytics procedure. Most procedures create one thread per CPU for the analytic computations. By default, High-Performance Analytics procedures execute in multiple concurrent threads unless turned off by the NOTHREADS system option or you force single-threaded execution with NTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance Analytics procedures can impose more stringent limits if called for by algorithmic considerations. You can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE statement.","help":"NTHREADS=*n*","type":"value"},{"name":"TIMEOUT=","optional":true,"description":"Specifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection to the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs are submitted to the appliance through workload management tools that might suspend access to the appliance for a longer period, you might want to increase the timeout value.","help":"TIMEOUT=*s*","type":"value"}]},{"name":"SCORE","description":"The SCORE statement causes the HPCLUS procedure to write the closest cluster and the distance to that cluster for each observation in the input data set to the output data set that is specified by the OUT option. The variables from the input data set that are specified in the ID statement are also written to the OUT dataset. The SCORE statement is optional.","help":"SCORE &lt; options &gt; "}],"supportSiteInformation":{"docsetId":"emhpprcref","docsetVersion":"v_003","docsetTargetFile":"emhpprcref_hpclus_toc.htm"}}