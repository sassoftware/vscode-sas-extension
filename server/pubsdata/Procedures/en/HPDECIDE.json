{"name":"HPDECIDE","statements":[{"name":"PROC HPDECIDE","description":"The HPDECIDE procedure creates optimal decisions that are based on a decision matrix that you specify, on prior probabilities, and on output from a modeling procedure. This output can be either posterior probabilities for a categorical target variable or predicted values for an interval target variable. The HPDECIDE procedure can also adjust the posterior probabilities for changes in the prior probabilities. † Some modeling procedures assume that the prior probabilities for categorical variable level membership either are all equal or are proportional to the relative frequency of the corresponding response level in the data set. PROC HPDECIDE enables you to specify other prior probabilities. Thus, you can conduct a sensitivity analysis without running the modeling procedure again. † The HPDECIDE procedure can exploit computer grids by running in parallel independently on different grid nodes, while multithreading is supported at each node.","help":"PROC HPDECIDE <DATA=<libref.>SAS-data-set> <OUT=<libref.>SAS-data-set> <OUTFIT=<libref.>SAS-data-set> <ROLE=TRAIN | VALID|VALIDATION | TEST... >;     \n\tCODE <FILE= file-name> <METABASE=catalog-spec> <RESIDUAL> ...; \n   \n\tDECISION <COST=list-of-costs> <DECDATA=< libref. >SAS-data-set< (type) >> <DECVARS=variables> ...; \n   \n\tFREQ variable ;     \n\tID variables ;     \n\tPERFORMANCE <COMMIT=n> <CPUCOUNT=<ACTUAL | <num>>> <DATASERVER=“name”> ...; \n   \n\tPOSTERIORS variable-list ;     \n\tPREDICTED variable ;     \n\tTARGET variable ; ","arguments":[{"name":"DATA=","optional":true,"description":"Specifies the input data set that contains the output from a modeling procedure. The default is the most recently created data set. If the data are already distributed, the procedure reads the data alongside the distributed database.","type":"value"},{"name":"OUT=","optional":true,"description":"This option specifies the output data set, which contains the following information: 1. any variables from the input data set specified in the ID Statement 2. the chosen decision with a prefix of D_ 3. the expected consequence of the chosen decision with a prefix of either EL_ or EP_ If the target value is in the input data set, then the output data set also contains the following variables: 1. the consequence of the chosen decision computed from the target value with a prefix of either CL_ or CP_ 2. the consequence of the best possible decision knowing the target value with a prefix of either BL_ or BP_ If the profit matrix is revenue, then the output data set also contains the following variables: 1. the investment cost with a prefix of IC_ 2. the return on investment with a prefix of ROI_","type":"value"},{"name":"OUTFIT=","optional":true,"description":"This option specifies an output data set that contains fit statistics. These statistics include the total and average profit or loss. You cannot specify this option with a data set of type SCORE. By default, this data set is not created.","type":"value"},{"name":"ROLE=","optional":true,"description":"This option specifies the role of the data set. This option affects the variables that are created in the ROLE= data set. The default value is TEST.","help":"ROLE=TRAIN | VALID | TEST | SCORE","type":"choice","arguments":[{"name":"TRAIN","description":"TRAIN role","type":"standalone"},{"name":"VALID","aliases":["VALIDATION"],"description":"VALIDATION role","type":"standalone"},{"name":"TEST","description":"TEST role","type":"standalone"},{"name":"SCORE","description":"SCORE role","type":"standalone"}]}]},{"name":"CODE","description":"The CODE statement generates SAS DATA step code that can be used to score data sets. If neither the FILE= option nor the METABASE= option is specified, then the SAS code is written to the SAS log. You can specify both the FILE= option and the METABASE= option to write code to both locations. The target variable must appear both in the data set specified in the DATA= option in the PROC HPDECIDE statement and in the data set specified in the DECDATA= option in the DECISION statement.","help":"CODE &lt;FILE= file-name&gt; &lt;METABASE=catalog-spec&gt; &lt;RESIDUAL&gt; ...","arguments":[{"name":"FILE=","optional":true,"description":"Names the file into which score code is saved.","type":"value"},{"name":"METABASE=","optional":true,"description":"Specifies a catalog entry to contain the SAS score code. For example, you can specify METABASE=myLibrary.myCatalog.catalog-entry.","help":"METABASE=*catalog-spec*","type":"dataSet"},{"name":"RESIDUAL","optional":true,"description":"Computes the variables that depend on the target variable in the score code..","type":"standalone"}]},{"name":"DECISION","description":"Required Argument: DECDATA=<libref.>SAS-data-set Optional Arguments: DECVARS=variables COST=list-of-costs PRIORVAR=variable OLDPRIORVAR=variable","help":"DECISION &lt;COST=list-of-costs&gt; &lt;DECDATA=&lt; libref. &gt;SAS-data-set&lt; (type) &gt;&gt; &lt;DECVARS=variables&gt; ...","arguments":[{"name":"COST=","optional":true,"description":"Specifies the numeric constants that give the cost of a decision, the numeric variables in the input data set that contain case-specific costs, or any combination of constants and variables.","help":"COST=*list-of-costs*","type":"value"},{"name":"DECDATA=","optional":true,"description":"names the input data set that contains the decision matrix or the prior probabilities, or both. This argument is required. The named data set must contain the target variable, which is specified in the TARGET statement. It might also contain decision variables that are specified in the DECVARS= option and prior probability variables that are specified with the PRIORVAR= option, the OLDPRIORVAR= option, or both.","type":"value"},{"name":"DECVARS=","optional":true,"description":"Specifies the numeric decision variables in the DECDATA= data set that contain the target-specific consequences for each decision. The decision variables cannot contain any missing values.","help":"DECVARS=*variables*","type":"value"},{"name":"OLDPRIORVAR=","optional":true,"description":"Specifies the numeric variable in the DECDATA= data set that contains the prior probabilities that were used the first time the model was fit. If you specify this option, then you must also specify the PRIORVAR= option.","help":"OLDPRIORVAR=*variable*","type":"value"},{"name":"PRIORVAR=","optional":true,"description":"Specifies the number variable in the DECDATA= data set that contains the prior probabilities that are used to make decisions. Prior probabilities are also used to adjust the total and average profit or loss. Prior probabilities cannot be missing or negative, and there must be at least one positive prior probability. The prior probabilities are not required to sum 1. But if they do not sum to 1, then they are scaled by some constant so that they do sum to 1. If you do not specify this option, then no adjustment for prior probabilities is applied to the posterior probabilities.","help":"PRIORVAR=*variable*","type":"value"}]},{"name":"FREQ","description":"The FREQ statement specifies a single numeric variable whose value represents the frequency of each observation. If you use the FREQ statement, the HPDECIDE procedure treats the data set as if each observation appeared n times, where n is the value of the FREQ variable. The FREQ variable has no effect on decisions of the adjustment for prior probabilities. It affects only the summary statistics in the OUTFIT= data set. If a value of the FREQ variable is not an integer, then the fractional part is not truncated. If a value of the FREQ variable is less than or equal to 0, then the observation does not contribute to the summary statistics. However, all the variables in the OUT= data set are processed as if the FREQ variable were positive.","help":"FREQ variable "},{"name":"ID","description":"The ID statement lists one or more variables from the input data set that are transferred to the output data sets created by High-Performance Analytics procedures, provided that the output data set produces one (or more) records per input observation. By default, the HPDECIDE procedure does not include all variables from the input data set in the output data sets. The ID statement accepts numeric and character variables.","help":"ID variables "},{"name":"PERFORMANCE","description":"The PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, passes variables about the distributed computing environment, and requests detailed results about the performance characteristics of a High-Performance Analytics procedure. With the PERFORMANCE statement, you can also control whether the HPNLIN procedure executes in SMP or MPP mode.","help":"PERFORMANCE &lt;COMMIT=n&gt; &lt;CPUCOUNT=&lt;ACTUAL | &lt;num&gt;&gt;&gt; &lt;DATASERVER=“name”&gt; ...","arguments":[{"name":"COMMIT=","optional":true,"description":"Requests that the High-Performance Analytics procedure write periodic updates to the SAS Log when observations are sent from the client to the appliance for distributed processing.","help":"COMMIT=*n*","type":"value"},{"name":"CPUCOUNT=","optional":true,"description":"Specifies how many processors the procedure assumes are available on each host in the computing environment. num can be any integer from 1 to 256. CPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","help":"CPUCOUNT=ACTUAL | &lt;num&gt;","type":"choice","arguments":[{"name":"ACTUAL","description":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","type":"standalone"},{"name":"<num>","description":"Replace <num> with an actual number. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","type":"standalone"}]},{"name":"DATASERVER=","optional":true,"description":"Specifies the name of the server on Teradata systems as defined through the hosts file and as used in the LIBNAME statement for Teradata. For example, if the hosts file defines myservercop1 33.44.55.66 as the server for Teradata, then a LIBNAME specification would be as follows: libname TDLib teradata server=myserver user= password= database= ; A PERFORMANCE statement to induce running alongside the Teradata server would specify the following:","type":"value"},{"name":"DETAILS","optional":true,"description":"Requests a table that shows a timing breakdown of the procedure steps.","type":"standalone"},{"name":"HOST=","optional":true,"aliases":["GRIDHOST="],"description":"Specifies the name of the appliance host in single or double quotes. If the HOST= option is specified, it overrides the value of the GRIDHOST environment variable.","type":"value"},{"name":"INSTALL=","optional":true,"aliases":["INSTALLLOC="],"description":"Specifies the directory in which the High-Performance Analytics shared libraries are installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable.","type":"value"},{"name":"NODES=","optional":true,"aliases":["NNODES="],"description":"Specifies the number of nodes in the distributed computing environment, provided that the data are not processed alongside the database.","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads are determined based on the number of CPUs on the host on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count is specific to the High- Performance Analytics procedure. Most procedures create one thread per CPU for the analytic computations. By default, High-Performance Analytics procedures execute in multiple concurrent threads unless turned off by the NOTHREADS system option or you force single-threaded execution with NTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance Analytics procedures can impose more stringent limits if called for by algorithmic considerations. You can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE statement.","help":"NTHREADS=*n*","type":"value"},{"name":"TIMEOUT=","optional":true,"description":"Specifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection to the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs are submitted to the appliance through workload management tools that might suspend access to the appliance for a longer period, you might want to increase the timeout value.","help":"TIMEOUT=*s*","type":"value"}]},{"name":"POSTERIORS","description":"The POSTERIORS statement specifies a list of the numeric variables in the input data set that contain the estimated posterior probabilities that correspond to the categories of the target variable. If one of the following conditions is met, then an observation is set to missing and the variable _WARN_ contains the flag P: These conditions are as follows: o The posterior probability is missing, negative, or greater than 1. o There is a nonzero posterior that corresponds to a zero posterior. o There is not at least one valid positive posterior probability. Note that the order of the variables in this list must correspond exactly to the order of the classes in the DECDATA= data set.","help":"POSTERIORS variable-list "},{"name":"PREDICTED","description":"The PREDICTED statement specifies the numeric variable in the input data set that contains the predicted values of an interval target variable. You can specify only an interval target variable in the PREDICTED statement. You cannot use both the POSTERIORS statement and the PREDICTED statement.","help":"PREDICTED variable "},{"name":"TARGET","description":"The TARGET statement specifies which variable is the target variable in the data set that is specified in the DECDATA= option in the DECISION statement. The TARGET statement is required. The HPDECIDE procedure searches for a target variable with the same name in the input data set. If none is found, then the HPDECIDE procedure assumes that actual target values are unknown. For a categorical variable, the target variables in the data sets that are specified in the DATA= option in the PROC HPDECIDE statement and in the DECDATA= option in the DECISION statement do not need to be the same type because only the formatted values are used for comparisons. For an interval target, both variables must be numeric. If scoring code is generated by the CODE statement, the code formats the target variable with the format and length from the DATA= data set.","help":"TARGET variable "}],"supportSiteInformation":{"docsetId":"emhpprcref","docsetVersion":"v_003","docsetTargetFile":"emhpprcref_hpdecide_toc.htm"}}