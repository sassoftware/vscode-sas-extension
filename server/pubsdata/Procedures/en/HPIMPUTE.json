{"name":"HPIMPUTE","statements":[{"name":"PROC HPIMPUTE","description":"The HPIMPUTE procedure executes high-performance numeric variable imputation. Imputation is a common step in the data preparation stage. The HPIMPUTE procedure takes only numeric variables. † The HPIMPUTE procedure can replace numeric missing values with a specified value. It can also replace numeric missing values with the mean, the pseudo-median, or some random value between the minimum value and the maximum value of the nonmissing values. † When the mean, the pseudo-median, or a random value is being calculated, the HPIMPUTE procedure ignores any observation that has a FREQ variable whose value is less than or equal to 0.","help":"PROC HPIMPUTE <DATA=<libref.>SAS-data-set><DMDBCAT=<libref.>SAS-catalog><OUT=<libref.>SAS-data-set>; \n\tCODE                         <FILE= filename> ;\n\tFREQ variable ;\n\tID variables ;\n\tIMPUTE                                 <METHOD=<MEAN | RANDOM | PMEDIAN>><VALUE=<value>> ;\n\tINPUT                                 <LEVEL=<BINARY | NOMINAL | ORDINAL>... ><ORDER=<ASCENDING | ASCFORMATTED | DESCENDING>...                     > ;\n\tPERFORMANCE <COMMIT=n><CPUCOUNT=<ACTUAL | <num>>><DATASERVER=“name”> ...;","arguments":[{"name":"DATA=","optional":true,"description":"Names the SAS data set to be used by PROC HPIMPUTE for imputation. The default is the most recently created data set. If the data are already distributed, the procedure reads the data alongside the distributed database. See the section SMP and MPP Modes for the various execution modes and the section Alongside-the-Database Execution for the alongside-the-database model. WHERE processing is supported.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DMDBCAT=","optional":true,"description":"Names the SAS catalog to be used by PROC HPIMPUTE for looking up the variable metadata. If the DMDBCAT is specified and the imputation value is available in the DMDBCAT, PROC HPIMPUTE will impute with the value in the DMDBCAT. Otherwise, PROC HPIMPUTE will first compute the imputation value and then impute with that value.","type":"value"},{"name":"OUT=","optional":true,"description":"Names the SAS data set to be used by PROC HPIMPUTE write the data with ID variables (if applicable), imputation indicator variables (0: not imputed, 1: imputed) and imputed variables.","help":"OUT=*SAS-data-set*","type":"dataSet"}]},{"name":"CODE","description":"The CODE statement generates SAS DATA step code that mimics the computations done by the IMPUTE statement.","help":"CODE &lt;FILE= filename&gt;","arguments":[{"name":"FILE=","optional":true,"description":"Specifies the filename of the file to which the SAS score code is written.","type":"value"}]},{"name":"FREQ","description":"The variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency of occurrence for each observation. SAS High-Performance Analytics procedures that support the FREQ statement treat each observation as if it appeared f times, where f is the value of the FREQ variable for the observation. If the frequency value is not an integer, it is truncated to an integer. If the frequency value is less than 1 or missing, the observation is not used in the analysis. When the FREQ statement is not specified, each observation is assigned a frequency of 1.","help":"FREQ variable "},{"name":"ID","description":"The ID statement lists one or more variables from the input data set that are transferred to the output data set. The ID statement accepts numeric and character variables. For example, when an OUTPUT statement is used, the ID variables, followed by indicator variables and imputed variables, are added to the output data set. Default: By default, the HPIMPUTE procedure does not include all variables from the input data set in the output data sets. Requirement: The variables in an ID statement must not appear in any INPUT statement, otherwise an error will be reported. The ID statement is optional.","help":"ID variables "},{"name":"IMPUTE","description":"The IMPUTE statement names the variable(s) whose values PROC HPIMPUTE imputes. The statement can appear multiple times. Note that the IMPUTE statement only takes numeric variables, character variables are reported as an error. The variables in an IMPUTE statement must appear in an INPUT statement; otherwise an error will be reported.","help":"IMPUTE                                     &lt;METHOD=&lt;MEAN | RANDOM | PMEDIAN&gt;&gt;&lt;VALUE=&lt;value&gt;&gt;","arguments":[{"name":"METHOD=","optional":true,"description":"Specifies the method of imputation.","help":"METHOD=MEAN | RANDOM | PMEDIAN","type":"choice","arguments":[{"name":"MEAN","description":"Replaces missing values with the algebraic mean of the variable. If there is no non-missing value, the mean is 0.","type":"standalone"},{"name":"RANDOM","description":"Replaces missing values with a random value drawn between the minimum and maximum of the variable. If there is no non-missing value, the random value is 0.","type":"standalone"},{"name":"PMEDIAN","description":"Replaces missing values with the pseudo-median of the variable. If there is no non-missing value, the mean is 0.","type":"standalone"}]},{"name":"VALUE=","optional":true,"description":"Replaces missing values with the value specified by the user.","type":"value"}]},{"name":"INPUT","description":"The INPUT statement names input variables with common options. The INPUT statement can be repeated.","help":"INPUT                                     &lt;LEVEL=&lt;BINARY | NOMINAL | ORDINAL&gt;... &gt;&lt;ORDER=&lt;ASCENDING | ASCFORMATTED | DESCENDING&gt;...                         &gt;","arguments":[{"name":"LEVEL=","optional":true,"description":"Specifies the level of measurement of the variables.","help":"LEVEL=BINARY | NOMINAL | ORDINAL | INTERVAL*level*","type":"value","arguments":[{"name":"BINARY","description":"BINARY level of measurement","type":"standalone"},{"name":"NOMINAL","description":"NOMINAL level of measurement","type":"standalone"},{"name":"ORDINAL","description":"ORDINAL level of measurement","type":"standalone"},{"name":"INTERVAL","description":"INTERVAL level of measurement","type":"standalone"}]},{"name":"ORDER=","optional":true,"description":"Specifies the sorting order of the values of an ordinal input variable.","help":"ORDER=ASCENDING | ASCFORMATTED | DESCENDING | DESFORMATTED | DSORDER*order*","type":"value","arguments":[{"name":"ASCENDING","description":"Ascending order of unformatted values","type":"standalone"},{"name":"ASCFORMATTED","description":"Ascending order of formatted values","type":"standalone"},{"name":"DESCENDING","description":"Descending order of unformatted values","type":"standalone"},{"name":"DESFORMATTED","description":"Descending order of formatted values","type":"standalone"},{"name":"DSORDER","description":"Order of appearance in the input data set","type":"standalone"}]}]},{"name":"PERFORMANCE","description":"The PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, passes variables about the distributed computing environment, and requests detailed results about the performance characteristics of a High-Performance Analytics procedure. With the PERFORMANCE statement, you can also control whether the HPNLIN procedure executes in SMP or MPP mode.","help":"PERFORMANCE &lt;COMMIT=n&gt;&lt;CPUCOUNT=&lt;ACTUAL | &lt;num&gt;&gt;&gt;&lt;DATASERVER=“name”&gt; ...","arguments":[{"name":"COMMIT=","optional":true,"description":"Requests that the High-Performance Analytics procedure write periodic updates to the SAS Log when observations are sent from the client to the appliance for distributed processing.","help":"COMMIT=*n*","type":"value"},{"name":"CPUCOUNT=","optional":true,"description":"Specifies how many processors the procedure assumes are available on each host in the computing environment. num can be any integer from 1 to 256. CPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","help":"CPUCOUNT=ACTUAL | &lt;num&gt;","type":"choice","arguments":[{"name":"ACTUAL","description":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","type":"standalone"},{"name":"<num>","description":"Replace <num> with an actual number. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","type":"standalone"}]},{"name":"DATASERVER=","optional":true,"description":"Specifies the name of the server on Teradata systems as defined through the hosts file and as used in the LIBNAME statement for Teradata. For example, if the hosts file defines myservercop1 33.44.55.66 as the server for Teradata, then a LIBNAME specification would be as follows: libname TDLib teradata server=myserver user= password= database= ; A PERFORMANCE statement to induce running alongside the Teradata server would specify the following:","type":"value"},{"name":"DETAILS","optional":true,"description":"Requests a table that shows a timing breakdown of the procedure steps.","type":"standalone"},{"name":"HOST=","optional":true,"aliases":["GRIDHOST="],"description":"Specifies the name of the appliance host in single or double quotes. If the HOST= option is specified, it overrides the value of the GRIDHOST environment variable.","type":"value"},{"name":"INSTALL=","optional":true,"aliases":["INSTALLLOC="],"description":"Specifies the directory in which the High-Performance Analytics shared libraries are installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable.","type":"value"},{"name":"NODES=","optional":true,"aliases":["NNODES="],"description":"Specifies the number of nodes in the distributed computing environment, provided that the data are not processed alongside the database.","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads are determined based on the number of CPUs on the host on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count is specific to the High- Performance Analytics procedure. Most procedures create one thread per CPU for the analytic computations. By default, High-Performance Analytics procedures execute in multiple concurrent threads unless turned off by the NOTHREADS system option or you force single-threaded execution with NTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance Analytics procedures can impose more stringent limits if called for by algorithmic considerations. You can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE statement.","help":"NTHREADS=*n*","type":"value"},{"name":"TIMEOUT=","optional":true,"description":"Specifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection to the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs are submitted to the appliance through workload management tools that might suspend access to the appliance for a longer period, you might want to increase the timeout value.","help":"TIMEOUT=*s*","type":"value"}]}],"supportSiteInformation":{"docsetId":"prochp","docsetVersion":"v_001","docsetTargetFile":"prochp_hpimpute_toc.htm"}}