{"name":"HPNLMOD","statements":[{"name":"PROC HPNLMOD","description":"The HPNLMOD procedure is a high-performance procedure that uses either nonlinear least squares or maximum likelihood to fit nonlinear regression models on the SAS appliance. PROC HPNLMOD enables you to specify the model with SAS programming statements, which gives you greater flexibility in modeling the relationship between the response variable and independent (regressor) variables than SAS procedures that use a more structured MODEL statement. † The HPNLMOD procedure does the following: • can perform analysis on a massively parallel SAS high-performance appliance • reads input data in parallel and writes output data in parallel when the data source is the appliance database • is highly multithreaded during all phases of analytic execution • computes analytical derivatives of user-provided expressions for more robust parameter estimations • evaluates user-provided expressions and their confidence limits with the ESTIMATE and PREDICT statements • estimates parameters without specifying a particular distribution function by using the least squares method • estimates parameters by using the maximum likelihood method when either a built-in distribution function is specified or a likelihood function is provided † With the HPNLMOD procedure you can read and write data in distributed form and perform analyses in parallel in symmetric multiprocessing (SMP) or massively parallel processing (MPP) mode.","help":"PROC HPNLMOD <ABSCONV= | ABSTOL=r> <ABSFCONV=r<n> | ABSFTOL=r<n>> <ABSGCONV=r<n> | ABSGTOL=r<n>> <ALPHA=α> <CORR> <COV> <DATA=SAS-data-set> <DF=n> <ECORR> <ECOV> <FCONV=r<n> | FTOL=r<n>> <FMTLIBXML=file-ref> <GCONV=r | GTOL=r> <MAXFUNC=n | MAXFU=n> <MAXITER=n | MAXIT=n> <MAXTIME=r> <MINITER=n | MINIT=n> <NOITPRINT> <NOPRINT> <OUT=SAS-data-set> <SINGULAR=number> <TECHNIQUE=CONGRA | DBLDOG | LEVMAR... > <XMLFORMAT=filename>;     \n\tABORT;     \n\tBOUNDS constraint < , constraint . . . > ;     \n\tBY <DESCENDING> <NOTSORTED> ; \n   \n\tCALL name [ ( expression [, expression ... ] ) ]; \n   \n\tDELETE;     \n\tDO[variable = expression;     \n\tELSE <DO> <IF> <THEN> ...; \n   \n\tEND;     \n\tESTIMATE <ALPHA=α> <DF=d> ; \n   \n\tGOTO statement_label;     \n\tIF <DO> <THEN> <WHEN> ...; \n   \n\tLINK statement_label;     \n\tMODEL <binary(p)> <binomial(n, p)> <gamma(a, b)> ...; \n   \n\t;     \n\tPARAMETERS <BEST=i > 0> <PDATA=SAS-data-set | DATA=SAS-data-set> <START=value | DEFSTART=value> ...;     \n\tPERFORMANCE <COMMIT=n> <CPUCOUNT=<ACTUAL | <num>>> <DATASERVER=“name”> ...; \n   \n\tPREDICT <ALPHA=α> <DF=d> <LOWER=name> ...; \n   \n\tPUT <_PDV_> ;   \n \n\tRESTRICT restriction1 < , restriction2 . . . > ;     \n\tRETURN;     \n\t; \n   \n\tSTOP ;     \n\tSUBSTR( variable, index, length )= expression;     \n\tWHEN <DO> ; ","arguments":[{"name":"ABSCONV=","optional":true,"aliases":["ABSTOL="],"description":"Specifies an absolute function convergence criterion.","type":"value"},{"name":"ABSFCONV=","optional":true,"aliases":["ABSFTOL="],"description":"Specifies an absolute function convergence criterion.","type":"value"},{"name":"ABSGCONV=","optional":true,"aliases":["ABSGTOL="],"description":"Specifies an absolute gradient convergence criterion. Termination requires the maximum absolute gradient element to be small.","type":"value"},{"name":"ALPHA=","optional":true,"description":"Specifies the level of significance α used in the construction of 100(1-α)% confidence intervals. The value must be strictly between 0 and 1; the default value of α=05 results in 95% intervals. This value is used as the default confidence level for limits computed in the “Parameter Estimates” table and is used in the LOWER and UPPER options in the PREDICT statement.","type":"value"},{"name":"CORR","optional":true,"description":"Requests the approximate correlation matrix for the parameter estimates.","type":"standalone"},{"name":"COV","optional":true,"description":"Requests the approximate covariance matrix for the parameter estimates.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Names the SAS data set to be used by PROC HPNLMOD. The default is the most recently created data set.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DF=","optional":true,"description":"Specifies the default number of degrees of freedom to use in the calculation of p-values and confidence limits for additional parameter estimates.","help":"DF=*n*","type":"value"},{"name":"ECORR","optional":true,"description":"Requests the approximate correlation matrix for all expressions that are specified in ESTIMATE statements.","type":"standalone"},{"name":"ECOV","optional":true,"description":"Requests the approximate covariance matrix for all expressions that are specified in ESTIMATE statements.","type":"standalone"},{"name":"FCONV=","optional":true,"aliases":["FTOL="],"description":"Specifies the relative function convergence criterion.","type":"value"},{"name":"FMTLIBXML=","optional":true,"description":"Specifies the file reference for the XML stream that contains the user-defined format definitions. Userdefined formats are handled differently in a distributed computing environment than they are handled in other SAS products.","help":"FMTLIBXML=*file-ref*","type":"value"},{"name":"GCONV=","optional":true,"aliases":["GTOL="],"description":"Specifies the relative gradient convergence criterion.","type":"value"},{"name":"MAXFUNC=","optional":true,"aliases":["MAXFU="],"description":"Specifies the maximum number n of function calls in the optimization process. The default values are as follows, depending on the optimization technique (which you specify in the TECHNIQUE= option): • TRUREG, NRRIDG, NEWRAP: 125 • QUANEW, DBLDOG: 500 • CONGRA: 1,000 • NMSIMP: 3,000","type":"value"},{"name":"MAXITER=","optional":true,"aliases":["MAXIT="],"description":"Specifies the maximum number n of iterations in the optimization process. The default values are as follows, depending on the optimization technique (which you specify in the TECHNIQUE= option): • TRUREG, NRRIDG, NEWRAP: 50 • QUANEW, DBLDOG: 200 • CONGRA: 400 • NMSIMP: 1,000 These default values also apply when n is specified as a missing value.","type":"value"},{"name":"MAXTIME=","optional":true,"description":"Specifies an upper limit of r seconds of CPU time for the optimization process. The default value is the largest floating-point double representation of your computer. The time specified by the MAXTIME= option is checked only once at the end of each iteration. Therefore, the actual running time can be longer than that specified by the MAXTIME= option.","help":"MAXTIME=*r*","type":"value"},{"name":"MINITER=","optional":true,"aliases":["MINIT="],"description":"Specifies the minimum number of iterations. The default value is 0. If you request more iterations than are actually needed for convergence to a stationary point, the optimization algorithms can behave strangely. For example, the effect of rounding errors can prevent the algorithm from continuing for the required number of iterations..","type":"value"},{"name":"NOITPRINT","optional":true,"description":"Suppresses the display of the “Iteration History” table.","type":"standalone"},{"name":"NOPRINT","optional":true,"description":"Suppresses the generation of ODS output.","type":"standalone"},{"name":"OUT=","optional":true,"description":"Names the SAS data set to be created when one or more PREDICT statements are specified. A single OUT= data set is created to contain all predicted values when more than one PREDICT statement is specified. An error message is produced if a PREDICT statement is specified and an OUT= data set is not specified.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"SINGULAR=","optional":true,"description":"Tunes the general singularity criterion applied by the HPNLMOD procedure in sweeps and inversions. The default is 1E4 times the machine epsilon; this product is approximately 1E􀀀12 on most computers.","help":"SINGULAR=*number*","type":"value"},{"name":"TECHNIQUE=","optional":true,"aliases":["TECH="],"description":"Specifies the optimization technique.","help":"TECHNIQUE=CONGRA | DBLDOG | LEVMAR | NEWRAP | NMSIMP | NRRIDG | QUANEW | TRUREG | NONE","type":"choice","arguments":[{"name":"CONGRA","description":"Performs a conjugate-gradient optimization.","type":"standalone"},{"name":"DBLDOG","description":"Performs a version of double-dogleg optimization.","type":"standalone"},{"name":"LEVMAR","description":"Performs a Levenberg-Marquardt optimization.","type":"standalone"},{"name":"NEWRAP","description":"Performs a Newton-Raphson optimization that combines a line-search algorithm with ridging.","type":"standalone"},{"name":"NMSIMP","description":"Performs a Nelder-Mead simplex optimization.","type":"standalone"},{"name":"NRRIDG","description":"Performs a Newton-Raphson optimization with ridging.","type":"standalone"},{"name":"QUANEW","description":"Performs a quasi-Newton optimization.","type":"standalone"},{"name":"TRUREG","description":"Performs a trust-region optimization.","type":"standalone"},{"name":"NONE","description":"Performs no optimization.","type":"standalone"}]},{"name":"XMLFORMAT=","optional":true,"description":"Specifies the file name for the XML stream that contains the user-defined format definitions. Userdefined formats are handled differently in a distributed computing environment than they are handled in other SAS products.","help":"XMLFORMAT=*filename*","type":"value"}]},{"name":"ABORT","description":"Stops executing the current procedure, SAS job, or SAS session. The ABORT statement does not allow any arguments.","help":"ABORT"},{"name":"BOUNDS","description":"where constraint represents < number operator > parameter-list < operator number > Boundary constraints are specified with a BOUNDS statement. One- or two-sided boundary constraints are allowed. The list of boundary constraints are separated by commas. For example: bounds 0 <= a1-a9 X <= 1, -1 <= c2-c5; bounds b1-b10 y >= 0; You can specify more than one BOUNDS statement. If you specify more than one lower (or upper) bound for the same parameter, the maximum (or minimum) of these is taken.","help":"BOUNDS constraint &lt; , constraint . . . &gt; "},{"name":"BY","description":"You can specify a BY statement with PROC HPNLMOD to obtain separate analyses of observations in groups that are defined by the BY variables. When a BY statement appears, the procedure expects the input data set to be sorted in order of the BY variables. If you specify more than one BY statement, only the last one specified is used. If your input data set is not sorted in ascending order, use one of the following alternatives: • Sort the data by using the SORT procedure with a similar BY statement. • Specify the NOTSORTED or DESCENDING option in the BY statement for the HPNLMOD procedure. The NOTSORTED option does not mean that the data are unsorted but rather that the data are arranged in groups (according to values of the BY variables) and that these groups are not necessarily in alphabetical or increasing numeric order. • Create an index on the BY variables by using the DATASETS procedure (in Base SAS software). BY statement processing is not supported when the HPNLMOD procedure runs alongside the database or alongside the Hadoop Distributed File System (HDFS). These modes are used if the input data are stored in a database or HDFS and the grid host is the appliance that houses the data.","help":"BY &lt;DESCENDING&gt; &lt;NOTSORTED&gt; ","arguments":[{"name":"DESCENDING","optional":true,"description":"Specifies that the observations are sorted in descending order by the variable that immediately follows the word DESCENDING in the BY statement.","type":"standalone"},{"name":"NOTSORTED","optional":true,"description":"The NOTSORTED option does not mean that the data are unsorted but rather that the data are arranged in groups (according to values of the BY variables) and that these groups are not necessarily in alphabetical or increasing numeric order.","type":"standalone"}]},{"name":"CALL","description":"Invokes a function or routine.","help":"CALL name [ ( expression [, expression ... ] ) ]"},{"name":"DELETE","description":"Stops processing the current observation.","help":"DELETE"},{"name":"DO","description":"","help":"DO[variable = expression"},{"name":"ELSE","description":"If the condition in an IF-THEN statement is false and an ELSE statement is present, then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"ESTIMATE","description":"The ESTIMATE statement enables you to compute an additional estimate that is a function of the parameter values. You must provide a quoted string to identify the estimate and then provide a valid SAS expression. Multiple ESTIMATE statements are permitted, and results from all statements are listed in a common table. PROC HPNLMOD computes approximate standard errors for the estimates by using the delta method (Billingsley 1986). It uses these standard errors to compute corresponding t statistics, p-values, and confidence limits. The ECOV option in the PROC HPNLMOD statement produces a table that contains the approximate covariance matrix of all the additional estimates you specify. The ECORR option produces the corresponding correlation matrix.","help":"ESTIMATE &lt;ALPHA=α&gt; &lt;DF=d&gt; ","arguments":[{"name":"ALPHA=","optional":true,"description":"Specifies the alpha level to be used in computing confidence limits. The default value corresponds to the ALPHA= option in the PROC HPNLMOD statement.","type":"value"},{"name":"DF=","optional":true,"description":"Specifies the degrees of freedom to be used in computing p-values and confidence limits. The default value corresponds to the DF= option in the PROC HPNLMOD statement.","help":"DF=*d*","type":"value"}]},{"name":"GOTO","description":"Jumps to a new statement.","help":"GOTO statement_label"},{"name":"IF","description":"","help":"IF &lt;DO&gt; &lt;THEN&gt; &lt;WHEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"GO","optional":true,"aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GO TO","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"PUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"SET","optional":true,"description":"Reads an observation from one or more SAS data sets.","type":"standalone"},{"name":"STOP","optional":true,"description":"Action statement in an IF-THEN construct. Stops execution of the current DATA step.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"},{"name":"WHEN","optional":true,"description":"WHEN statement in an IF-THEN-WHEN construct.","type":"standalone"}]},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK statement_label"},{"name":"MODEL","description":"The MODEL statement is the mechanism for either using a distribution specification to specify the distribution of the data or using the RESIDUAL distribution to specify a predicted value. You must specify a single dependent variable from the input data set, a tilde (~), and then a distribution with its parameters. The MODEL statement must follow any SAS programming statements you specify for computing parameters of the preceding distributions.","help":"MODEL &lt;binary(p)&gt; &lt;binomial(n, p)&gt; &lt;gamma(a, b)&gt; ...","arguments":[{"name":"BINARY","optional":true,"description":"Specifies a binary (Bernoulli) distribution with probability of success p.","type":"standalone"},{"name":"BINOMIAL","optional":true,"description":"Specifies a binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"GAMMA","optional":true,"description":"Specifies a gamma distribution with shape a and scale b.","type":"standalone"},{"name":"GENERAL","optional":true,"description":"Specifies a general log-likelihood function that you construct using SAS programming statements.","type":"standalone"},{"name":"NEGBIN","optional":true,"description":"Specifies a negative binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"NORMAL","optional":true,"description":"Specifies a normal (Gaussian) distribution with mean m and variance v","type":"standalone"},{"name":"POISSON","optional":true,"description":"Specifies a Poisson distribution with mean m","type":"standalone"},{"name":"RESIDUAL","optional":true,"aliases":["LS"],"description":"Specifies no particular distribution. Instead minimize the sum of squares of the differences between m and the dependent variable.","type":"standalone"}]},{"name":"OTHERWISE","description":">","help":""},{"name":"PARAMETERS","description":"The purpose of the PARAMETERS (PARMS) statement is to provide starting values for the HPNLMOD procedure. You can provide values that define a single point in the parameter space or a set of points.","help":"PARAMETERS &lt;BEST=i &gt; 0&gt; &lt;PDATA=SAS-data-set | DATA=SAS-data-set&gt; &lt;START=value | DEFSTART=value&gt; ...","arguments":[{"name":"BEST=","optional":true,"followsDelimiter":"/","description":"Specifies the maximum number of parameter grid points and corresponding objective function values to display in the “Parameters” table. If the BEST= option is specified, parameter grid points are listed in ascending order of objective function value. By default, all parameter grid points are displayed.","type":"value"},{"name":"PDATA=","optional":true,"followsDelimiter":"/","aliases":["DATA="],"description":"Specifies the data set used to provide parameter starting values.","type":"value"},{"name":"START=","optional":true,"followsDelimiter":"/","aliases":["DEFSTART="],"description":"specifies a default starting value for all parameters.","type":"value"}]},{"name":"PERFORMANCE","description":"The PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, passes variables about the distributed computing environment, and requests detailed results about the performance characteristics of a SAS High-Performance Analytics procedure. With the PERFORMANCE statement, you can also control whether a SAS High-Performance Analytics procedure executes in symmetric multiprocessing or massively parallel processing mode.","help":"PERFORMANCE &lt;COMMIT=n&gt; &lt;CPUCOUNT=&lt;ACTUAL | &lt;num&gt;&gt;&gt; &lt;DATASERVER=“name”&gt; ...","arguments":[{"name":"COMMIT=","optional":true,"description":"Requests that the High-Performance Analytics procedure write periodic updates to the SAS Log when observations are sent from the client to the appliance for distributed processing.","help":"COMMIT=*n*","type":"value"},{"name":"CPUCOUNT=","optional":true,"description":"Specifies how many processors the procedure assumes are available on each host in the computing environment. num can be any integer from 1 to 256. CPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","help":"CPUCOUNT=ACTUAL | &lt;*num*&gt;","type":"choice","arguments":[{"name":"ACTUAL","description":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","type":"standalone"},{"name":"num","placeholder":true,"description":"Replace <num> with an actual number. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","type":"standaloneOrValue"}]},{"name":"DATASERVER=","optional":true,"description":"Specifies the name of the server on Teradata systems as defined through the hosts file and as used in the LIBNAME statement for Teradata. For example, if the hosts file defines myservercop1 33.44.55.66 as the server for Teradata, then a LIBNAME specification would be as follows: libname TDLib teradata server=myserver user= password= database= ; A PERFORMANCE statement to induce running alongside the Teradata server would specify the following:","type":"value"},{"name":"DETAILS","optional":true,"description":"Requests a table that shows a timing breakdown of the procedure steps.","type":"standalone"},{"name":"HOST=","optional":true,"aliases":["GRIDHOST="],"description":"Specifies the name of the appliance host in single or double quotes. If the HOST= option is specified, it overrides the value of the GRIDHOST environment variable.","type":"value"},{"name":"INSTALL=","optional":true,"aliases":["INSTALLLOC="],"description":"Specifies the directory in which the High-Performance Analytics shared libraries are installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable.","type":"value"},{"name":"NODES=","optional":true,"aliases":["NNODES="],"description":"Specifies the number of nodes in the distributed computing environment, provided that the data are not processed alongside the database.","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads are determined based on the number of CPUs on the host on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count is specific to the High- Performance Analytics procedure. Most procedures create one thread per CPU for the analytic computations. By default, High-Performance Analytics procedures execute in multiple concurrent threads unless turned off by the NOTHREADS system option or you force single-threaded execution with NTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance Analytics procedures can impose more stringent limits if called for by algorithmic considerations. You can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE statement.","help":"NTHREADS=*n*","type":"value"},{"name":"TIMEOUT=","optional":true,"description":"Specifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection to the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs are submitted to the appliance through workload management tools that might suspend access to the appliance for a longer period, you might want to increase the timeout value.","help":"TIMEOUT=*s*","type":"value"}]},{"name":"PREDICT","description":"Cox 1998). Results for all PREDICT statements are placed in the output data set that you specify with the OUT= option in the PROC HPNLMOD statement.","help":"PREDICT &lt;ALPHA=α&gt; &lt;DF=d&gt; &lt;LOWER=name&gt; ...","arguments":[{"name":"ALPHA=","optional":true,"description":"Specifies the alpha level to be used in computing confidence limits. The default value corresponds to the ALPHA= option in the PROC HPNLIN statement..","type":"value"},{"name":"DF=","optional":true,"description":"Specifies the degrees of freedom to be used in computing confidence limits. The default value corresponds to the DF= option in the PROC HPNLIN statement.","help":"DF=*d*","type":"value"},{"name":"LOWER=","optional":true,"description":"Specifies a variable that contains the lower confidence limit of the predicted value.","help":"LOWER=*name*","type":"value"},{"name":"MEAN","optional":true,"description":"If you specify the keyword MEAN, the predicted mean value for the distribution specified in the MODEL statement is used. Predicted values are computed using the final parameter estimates.","type":"standalone"},{"name":"PRED=","optional":true,"description":"Specifies a variable that contains the predicted value.","help":"PRED=*name*","type":"value"},{"name":"PROBT=","optional":true,"description":"Specifies a variable that contains the p-value of the predicted value.","help":"PROBT=*name*","type":"value"},{"name":"STDERR=","optional":true,"description":"Specifies a variable that contains the standard error of the predicted value.","help":"STDERR=*name*","type":"value"},{"name":"TVALUE=","optional":true,"description":"Specifies a variable that contains the t statistic for the predicted value.","help":"TVALUE=*name*","type":"value"},{"name":"UPPER=","optional":true,"description":"Specifies a variable that contains the upper confidence limit of the predicted value.","help":"UPPER=*name*","type":"value"}]},{"name":"PUT","description":"The PUT statement, used mostly for program debugging in PROC HPNLIN, supports only some of the features of the DATA step PUT statement, and it has some new features that the DATA step PUT statement does not have: o The PROC HPNLIN PUT statement does not support line pointers, factored lists, iteration factors, overprinting, _INFILE_, the colon (:) format modifier, or “$”. o The PROC HPNLIN PUT statement supports expressions, but the expression must be enclosed in parentheses. For example, the following statement displays the square root of x: put (sqrt(x)); o The PROC HPNLIN PUT statement supports the item _PDV_ to display a formatted listing of all variables in the program. For example, the following statement displays a much more readable listing of the variables than the _ALL_ print item: put _pdv_;","help":"PUT &lt;_PDV_&gt; ","arguments":[{"name":"_PDV_","optional":true,"description":"Displays a formatted listing of all variables in the program.","type":"standalone"}]},{"name":"RESTRICT","description":"The RESTRICT statement imposes linear restrictions on the model’s parameters estimates. You can specify any number of RESTRICT statements. Each restriction is written as an expression, followed by an equality operator (=) or an inequality operator (<, >, <=, >=), followed by a second expression: expression operator expression The operator can be =, <, >, <=, or >=. The operator and second expression are optional. When they are omitted, the operator defaults to = and the second expression defaults to the value 0. Restriction expressions can be composed of parameter names, arithmetic operators, functions, and constants. Comparison operators (such as = or <) and logical operators (such as &) cannot be used in RESTRICT statement expressions. Parameters named in restriction expressions must be among the parameters estimated by the model. Restriction expressions cannot refer to other variables defined in the program or the DATA= data set. The restriction expressions must be linear functions of the parameters.","help":"RESTRICT restriction1 &lt; , restriction2 . . . &gt; "},{"name":"RETURN","description":"Stops executing statements at the current point and returns to a predetermined point in the step.","help":"RETURN"},{"name":"SELECT","description":"","help":""},{"name":"STOP","description":"The STOP statement halts the execution of all statements that contain it, including DO statements and other control or looping statements. Execution continues with the next top-level source statement.","help":"STOP "},{"name":"SUBSTR","description":"The SUBSTR function used as a programming statement in PROC HPNLIN.","help":"SUBSTR( variable, index, length )= expression"},{"name":"WHEN","description":"","help":"WHEN &lt;DO&gt; ","arguments":[{"name":"DO","optional":true,"description":"","type":"standalone"}]}],"supportSiteInformation":{"docsetId":"statug","docsetVersion":"latest","docsetTargetFile":"statug_hpnlin_toc.htm"}}