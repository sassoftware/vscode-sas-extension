{"name":"HPQLIM","statements":[{"name":"PROC HPQLIM","description":"The HPQLIM (high-performance qualitative and limited dependent variable model) procedure is a high-performance version of the QLIM procedure in SAS/ETS software, which analyzes univariate limited dependent variable models in which dependent variables are observed only in a limited range of values. Unlike the QLIM procedure, which can be run only on an individual workstation, the HPQLIM procedure takes advantage of a computing environment that enables it to distribute the optimization task among one or more nodes. In addition, each node can use one or more threads to carry out the optimization on its subset of the data. When several nodes are used with each node using several threads to carry out its part of the work, the result is a highly parallel computation that provides a dramatic gain in performance. † With the HPQLIM procedure you can read and write data in distributed form and perform analyses in massively parallel processing (MPP) and symmetric multiprocessing (SMP) mode. The HPQLIM procedure is specifically designed to operate in the high-performance distributed environment. By default, PROC HPQLIM performs computations in multiple threads","help":"PROC HPQLIM <ABSCONV=r | ABSTOL=r> <ABSFCONV=r | ABSFTOL=r> <ABSGCONV=r | ABSGTOL=r> <ABSXCONV=r | ABSXTOL=r> <CORRB> <CORROUT> <COVB> <COVEST=OP | HESSIAN | QML> <COVOUT> <DATA=SAS-data-set> <FCONV=r | FTOL=r> <GCONV=r | GTOL=r> <ITPRINT> <MAXFUNC= | MAXFU=i> <MAXITER= | MAXIT=i[n> <MAXTIME=r> <METHOD=CONGRA | DBLDOG | NONE... > <NOPRINT> <OUTEST=SAS-data-set> <PRINTALL>;     \n\tBOUNDS bound1 < , bound2 ...> ;\n    \n\tENDOGENOUS <CENSORED <(censored-options )>> <FRONTIER <(frontier-options )>> <CENSORED <(truncated-options )>> ...;\n    \n\tFREQ variable ;\n    \n\tHETERO <LINK=<EXP | LINEAR>> <NOCONST> <SQUARE> ...;\n    \n\tINIT initvalue1 < , initvalue2 ...> ;\n    \n\tMODEL <CENSORED <(censored-options )>> <NOINT> <CENSORED <(truncated-options )>> ...;\n    \n\tOUTPUT <CONDITIONAL> <ERRSTD> <OUT=SAS-data-set> ...;\n    \n\tPERFORMANCE <COMMIT=n> <CPUCOUNT=<ACTUAL | <num>>> <DATASERVER=“name”> ...;\n    \n\tRESTRICT restriction1 <, restriction2 ...> ;\n    \n\tTEST <ALL> <LM> <WALD> ...;\n    \n\tWEIGHT <NONORMALIZE> ;\n","arguments":[{"name":"ABSCONV=","optional":true,"aliases":["ABSTOL="],"description":"Specifies an absolute function convergence criterion by which minimization stops when f(ϴ⁽ⁿ⁾) ≤ r. The default value of r is the negative square root of the largest double-precision value, which serves only as a protection against overflows.","type":"value"},{"name":"ABSFCONV=","optional":true,"aliases":["ABSFTOL="],"description":"Specifies an absolute function convergence criterion by which minimization stops when the function value has a small change in successive iterations: |f(ϴ⁽ⁿ⁻¹⁾) - f(ϴ⁽ⁿ⁾)| ≤ r","type":"value"},{"name":"ABSGCONV=","optional":true,"aliases":["ABSGTOL="],"description":"Specifies an absolute gradient convergence criterion.Optimization stops when the maximum absolute gradient element is small: max|gₓ(ϴ⁽ⁿ⁾)| ≤ r","type":"value"},{"name":"ABSXCONV=","optional":true,"aliases":["ABSXTOL="],"description":"Specifies the absolute parameter convergence criterion. Optimization stops when the Euclidean distance between successive parameter vectors is small: ||f(ϴ⁽ⁿ⁻¹⁾) - f(ϴ⁽ⁿ⁾)||₂ ≤ r","type":"value"},{"name":"CORRB","optional":true,"description":"Prints the correlation matrix of the parameter estimates.","type":"standalone"},{"name":"CORROUT","optional":true,"description":"Writes the correlation matrix for the parameter estimates to the OUTEST= data set. This option is valid only if the OUTEST= option is specified.","type":"standalone"},{"name":"COVB","optional":true,"description":"Prints the covariance matrix of the parameter estimates.","type":"standalone"},{"name":"COVEST=","optional":true,"description":"Specifies the method to calculate the covariance matrix of parameter estimates. The default is COVEST=HESSIAN.","help":"COVEST=OP | HESSIAN | QML","type":"choice","arguments":[{"name":"OP","description":"Specifies the covariance from the outer product matrix.","type":"standalone"},{"name":"HESSIAN","description":"Specifies the covariance from the inverse Hessian matrix.","type":"standalone"},{"name":"QML","description":"Specifies the covariance from the outer product and Hessian matrices (the quasi-maximum likelihood estimates).","type":"standalone"}]},{"name":"COVOUT","optional":true,"description":"Writes the covariance matrix for the parameter estimates to the OUTEST= data set. This option is valid only if the OUTEST= option is specified.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Specifies the input SAS data set. If the DATA= option is not specified, PROC HPQLIM uses the most recently created SAS data set.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"FCONV=","optional":true,"aliases":["FTOL="],"description":"Specifies a relative function convergence criterion. Optimization stops when a relative change of the function value in successive iterations is small: |f(ϴ⁽ⁿ⁻¹⁾) - f(ϴ⁽ⁿ⁾)| / |f(ϴ⁽ⁿ⁻¹⁾)| ≤ r","type":"value"},{"name":"GCONV=","optional":true,"aliases":["GTOL="],"description":"Specifies a relative gradient convergence criterion. For all techniques except CONGRA, optimization stops when the normalized predicted function reduction is small.","type":"value"},{"name":"ITPRINT","optional":true,"description":"Prints the initial parameter estimates, convergence criteria, and all constraints of the optimization. At each iteration, objective function value, step size, maximum gradient, and slope of search direction are also printed.","type":"standalone"},{"name":"MAXFUNC=","optional":true,"aliases":["MAXFU="],"description":"Specifies the maximum number of function calls in the optimization process. The default is 1,000.","type":"value"},{"name":"MAXITER=","optional":true,"aliases":["MAXIT="],"description":"Specifies the maximum number of iterations in the optimization process. The default value is 200.","type":"value"},{"name":"MAXTIME=","optional":true,"description":"Specifies an upper limit of r seconds of CPU time for the optimization process. The default value is the largest floating-point double representation of your computer. The time specified by this option is checked only once at the end of each iteration. Therefore, the actual running time can be much longer than r. The actual running time includes the remaining time needed to finish the iteration and the time needed to generate the output of the results.","help":"MAXTIME=*r*","type":"value"},{"name":"METHOD=","optional":true,"description":"Specifies the iterative minimization method to use. The default is METHOD=NEWRAP.","help":"METHOD=CONGRA | DBLDOG | NONE | NEWRAP | NRRIDG | QUANEW | TRUREG","type":"choice","arguments":[{"name":"CONGRA","description":"Specifies a conjugate-gradient method","type":"standalone"},{"name":"DBLDOG","description":"Specifies the double dogleg method","type":"standalone"},{"name":"NONE","description":"Specifies that no optimization be performed beyond using the ordinary least squares method to compute the parameter estimates.","type":"standalone"},{"name":"NEWRAP","description":"Specifies the Newton-Raphson method (the default).","type":"standalone"},{"name":"NRRIDG","description":"Specifies the Newton-Raphson Ridge method.","type":"standalone"},{"name":"QUANEW","description":"Specifies the quasi-Newton method.","type":"standalone"},{"name":"TRUREG","description":"Specifies the trust region method.","type":"standalone"}]},{"name":"NOPRINT","optional":true,"description":"Suppresses the normal printed output but does not suppress error listings. If this option is specified, then any other print option is turned off.","type":"standalone"},{"name":"OUTEST=","optional":true,"description":"Writes the parameter estimates to an output data set.","help":"OUTEST=*SAS-data-set*","type":"dataSet"},{"name":"PRINTALL","optional":true,"description":"Turns on all the printing options. The options set by PRINTALL are COVB and CORRB.","type":"standalone"}]},{"name":"BOUNDS","description":"The BOUNDS statement imposes simple boundary constraints on the parameter estimates. BOUNDS statement constraints refer to the parameters estimated by the HPQLIM procedure. You can specify any number of BOUNDS statements. Each bound is composed of parameters and constants and inequality operators. Parameters associated with regressor variables are referred to by the names of the corresponding regressor variables. Specify each bound as follows: item operator item < operator item < operator item ...> > Each item is a constant, the name of a parameter, or a list of parameter names. Each operator is <, >, <=, or >=.","help":"BOUNDS bound1 &lt; , bound2 ...&gt; "},{"name":"ENDOGENOUS","description":"The ENDOGENOUS statement specifies the type of dependent variables that appear on the left-hand side of the equation. Endogenous variables listed refer to the dependent variables that appear on the left-hand side of the equation. Currently, no right-hand side endogeneity is handled in PROC QLIM. All variables appearing on the right-hand side of the equation are treated as exogenous","help":"ENDOGENOUS &lt;CENSORED &lt;(censored-options )&gt;&gt; &lt;FRONTIER &lt;(frontier-options )&gt;&gt; &lt;CENSORED &lt;(truncated-options )&gt;&gt; ...","arguments":[{"name":"CENSORED=","optional":true,"description":"Specifies that the endogenous variables in this statement be censored. You can specify the following censored-options: LB=value or variable LOWERBOUND=value or variable specifies the lower bound of the censored variables. If value is missing or the value in variable is missing, no lower bound is set. By default, no lower bound is set.","help":"CENSORED=LB= | LOWERBOUND= | UB= | UPPERBOUND=","type":"choice","arguments":[{"name":"LB=","type":"value"},{"name":"LOWERBOUND=","type":"value"},{"name":"UB=","type":"value"},{"name":"UPPERBOUND=","type":"value"}]},{"name":"FRONTIER=","optional":true,"description":"Specifies that the endogenous variable in this statement follow a production or cost function. Valid frontier-options are as follows: TYPE=HALF | EXPONENTIAL | TRUNCATED HALF specifies half-normal model. EXPONENTIAL specifies exponential model. TRUNCATED specifies truncated normal model. PRODUCTION specifies that the model estimated be a production function.","help":"FRONTIER=TYPE= | PRODUCTION | COST","type":"choice","arguments":[{"name":"TYPE=","type":"value"},{"name":"PRODUCTION","type":"standalone"},{"name":"COST","type":"standalone"}]},{"name":"TRUNCATED=","optional":true,"description":"Specifies that the endogenous variables in this statement be truncated. You can specify the following truncated-options: LB=value or variable LOWERBOUND=value or variable specifies the lower bound of the truncated variables. If value is missing or the value in variable is missing, no lower bound is set. By default, no lower bound is set.","help":"TRUNCATED=LB= | LOWERBOUND= | UB= | UPPERBOUND=","type":"choice","arguments":[{"name":"LB=","type":"value"},{"name":"LOWERBOUND=","type":"value"},{"name":"UB=","type":"value"},{"name":"UPPERBOUND=","type":"value"}]}]},{"name":"FREQ","description":"The FREQ statement identifies a variable that contains the frequency of occurrence of each observation. PROC HPQLIM treats each observation as if it appears n times, where n is the value of the FREQ variable for the observation. If the frequency value is not an integer, it is truncated to an integer. If the frequency value is less than 1 or missing, the observation is not used in the model fitting. When the FREQ statement is not specified, each observation is assigned a frequency of 1. If you specify more than one FREQ statement, then the first FREQ statement is used.","help":"FREQ variable "},{"name":"HETERO","description":"The HETERO statement specifies variables that are related to the heteroscedasticity of the residuals and the way these variables are used to model the error variance.","help":"HETERO &lt;LINK=&lt;EXP | LINEAR&gt;&gt; &lt;NOCONST&gt; &lt;SQUARE&gt; ...","arguments":[{"name":"LINK=","optional":true,"followsDelimiter":"/","description":"Specifies the functional form.","help":"LINK=EXP | LINEAR","type":"choice","arguments":[{"name":"EXP","followsDelimiter":"/","description":"Specifies a exponential link function. This is the default.","type":"standalone"},{"name":"LINEAR","followsDelimiter":"/","description":"Specifies a linear link function.","type":"standalone"}]},{"name":"NOCONST","optional":true,"followsDelimiter":"/","description":"Specifies that there be no constant in the linear or exponential heteroscedasticity model. This option is ignored if you do not specify the LINK= option.","type":"standalone"},{"name":"SQUARE","optional":true,"followsDelimiter":"/","description":"Estimates the model by using the square of linear heteroscedasticity function. This option is ignored if you do not specify the LINK= option.","type":"standalone"}]},{"name":"INIT","description":"The INIT statement sets initial values for parameters in the optimization. You can specify any number of INIT statements. Each initvalue is written as a parameter or parameter list, followed by an optional equality operator (=), followed by a number: parameter <=> number","help":"INIT initvalue1 &lt; , initvalue2 ...&gt; "},{"name":"MODEL","description":"The MODEL statement specifies the dependent variable and independent regressor variables for the regression model.","help":"MODEL &lt;CENSORED &lt;(censored-options )&gt;&gt; &lt;NOINT&gt; &lt;CENSORED &lt;(truncated-options )&gt;&gt; ...","arguments":[{"name":"CENSORED=","optional":true,"followsDelimiter":"/","description":"Specifies that the endogenous variables in this statement be censored. You can specify the following censored-options: LB=value or variable LOWERBOUND=value or variable specifies the lower bound of the censored variables. If value is missing or the value in variable is missing, no lower bound is set. By default, no lower bound is set.","help":"CENSORED=LB= | LOWERBOUND= | UB= | UPPERBOUND=","type":"choice","arguments":[{"name":"LB=","type":"value"},{"name":"LOWERBOUND=","type":"value"},{"name":"UB=","type":"value"},{"name":"UPPERBOUND=","type":"value"}]},{"name":"FRONTIER=","optional":true,"followsDelimiter":"/","description":"Specifies that the endogenous variable in this statement follow a production or cost function. Valid frontier-options are as follows: TYPE=HALF | EXPONENTIAL | TRUNCATED HALF specifies half-normal model. EXPONENTIAL specifies exponential model. TRUNCATED specifies truncated normal model. PRODUCTION specifies that the model estimated be a production function.","help":"FRONTIER=TYPE= | PRODUCTION | COST","type":"choice","arguments":[{"name":"TYPE=","type":"value"},{"name":"PRODUCTION","type":"standalone"},{"name":"COST","type":"standalone"}]},{"name":"NOINT","optional":true,"followsDelimiter":"/","description":"Suppresses the intercept parameter.","type":"standalone"},{"name":"TRUNCATED=","optional":true,"followsDelimiter":"/","description":"Specifies that the endogenous variables in this statement be truncated. You can specify the following truncated-options: LB=value or variable LOWERBOUND=value or variable specifies the lower bound of the truncated variables. If value is missing or the value in variable is missing, no lower bound is set. By default, no lower bound is set.","help":"TRUNCATED=LB= | LOWERBOUND= | UB= | UPPERBOUND=","type":"choice","arguments":[{"name":"LB=","type":"value"},{"name":"LOWERBOUND=","type":"value"},{"name":"UB=","type":"value"},{"name":"UPPERBOUND=","type":"value"}]}]},{"name":"OUTPUT","description":"The OUTPUT statement creates a new SAS data set to contain variables specified with the OUTVAR option and the following data if they are specified by output-options: estimates of x'β, predicted value, residual, marginal effects, probability, standard deviation of the error, expected value, conditional expected value, technical efficiency measures, and inverse Mills ratio. When the response values are missing for the observation, all output estimates except the residual are still computed as long as none of the explanatory variables is missing. This enables you to compute these statistics for prediction. You can specify only one OUTPUT statement.","help":"OUTPUT &lt;CONDITIONAL&gt; &lt;ERRSTD&gt; &lt;OUT=SAS-data-set&gt; ...","arguments":[{"name":"CONDITIONAL","optional":true,"description":"Output estimates of conditional expected values of continuous endogenous","type":"standalone"},{"name":"ERRSTD","optional":true,"description":"Output estimates of σj, the standard deviation of the error term.","type":"standalone"},{"name":"EXPECTED","optional":true,"description":"Output estimates of expected values of continuous endogenous variables.","type":"standalone"},{"name":"MARGINAL","optional":true,"description":"Output marginal effects.","type":"standalone"},{"name":"OUT=","optional":true,"description":"Names the output data set.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"OUTVAR","optional":true,"description":"Adds SAS variables to the output data set.","type":"standalone"},{"name":"PREDICTED","optional":true,"description":"Output estimates of predicted endogenous variables.","type":"standalone"},{"name":"RESIDUAL","optional":true,"description":"Output estimates of residuals of continuous endogenous variables.","type":"standalone"},{"name":"TE1","optional":true,"description":"Outputs estimates of technical efficiency for each producer in the stochastic frontier model suggested by Battese and Coelli (1988).","type":"standalone"},{"name":"TE2","optional":true,"description":"Outputs estimates of technical efficiency for each producer in the stochastic frontier model suggested by Jondrow et al. (1982).","type":"standalone"},{"name":"XBETA","optional":true,"description":"Output estimates of x'β.","type":"standalone"}]},{"name":"PERFORMANCE","description":"The PERFORMANCE statement specifies performance-options to control the multithreaded and distributed computing environment and requests detailed results about the performance characteristics of the HPQLIM procedure. With the PERFORMANCE statement, you can also control whether the HPQLIM procedure executes in SMP or MPP mode.","help":"PERFORMANCE &lt;COMMIT=n&gt; &lt;CPUCOUNT=&lt;ACTUAL | &lt;num&gt;&gt;&gt; &lt;DATASERVER=“name”&gt; ...","arguments":[{"name":"COMMIT=","optional":true,"description":"Requests that the High-Performance Analytics procedure write periodic updates to the SAS Log when observations are sent from the client to the appliance for distributed processing.","help":"COMMIT=*n*","type":"value"},{"name":"CPUCOUNT=","optional":true,"description":"Specifies how many processors the procedure assumes are available on each host in the computing environment. num can be any integer from 1 to 256. CPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","help":"CPUCOUNT=ACTUAL | &lt;num&gt;","type":"choice","arguments":[{"name":"ACTUAL","description":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","type":"standalone"},{"name":"<num>","description":"Replace <num> with an actual number. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","type":"standalone"}]},{"name":"DATASERVER=","optional":true,"description":"Specifies the name of the server on Teradata systems as defined through the hosts file and as used in the LIBNAME statement for Teradata. For example, if the hosts file defines myservercop1 33.44.55.66 as the server for Teradata, then a LIBNAME specification would be as follows: libname TDLib teradata server=myserver user= password= database= ; A PERFORMANCE statement to induce running alongside the Teradata server would specify the following:","type":"value"},{"name":"DETAILS","optional":true,"description":"Requests a table that shows a timing breakdown of the procedure steps.","type":"standalone"},{"name":"HOST=","optional":true,"aliases":["GRIDHOST="],"description":"Specifies the name of the appliance host in single or double quotes. If the HOST= option is specified, it overrides the value of the GRIDHOST environment variable.","type":"value"},{"name":"INSTALL=","optional":true,"aliases":["INSTALLLOC="],"description":"Specifies the directory in which the High-Performance Analytics shared libraries are installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable.","type":"value"},{"name":"NODES=","optional":true,"aliases":["NNODES="],"description":"Specifies the number of nodes in the distributed computing environment, provided that the data are not processed alongside the database.","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads are determined based on the number of CPUs on the host on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count is specific to the High- Performance Analytics procedure. Most procedures create one thread per CPU for the analytic computations. By default, High-Performance Analytics procedures execute in multiple concurrent threads unless turned off by the NOTHREADS system option or you force single-threaded execution with NTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance Analytics procedures can impose more stringent limits if called for by algorithmic considerations. You can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE statement.","help":"NTHREADS=*n*","type":"value"},{"name":"TIMEOUT=","optional":true,"description":"Specifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection to the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs are submitted to the appliance through workload management tools that might suspend access to the appliance for a longer period, you might want to increase the timeout value.","help":"TIMEOUT=*s*","type":"value"}]},{"name":"RESTRICT","description":"The RESTRICT statement imposes linear restrictions on the parameter estimates. You can specify any number of RESTRICT statements, but the number of restrictions imposed is limited by the number of regressors. Each restriction is written as an expression, followed by an equality operator (=) or an inequality operator (<, >, ≤, ≥), followed by a second expression: expression operator expression The operator can be =, <, >, ≤ , or ≥. The operator and second expression are optional. Restriction expressions can be composed of parameter names, multiplication (), addition (), and substitution () operators, and constants. Parameters named in restriction expressions must be among the parameters that are estimated by the model. Parameters that are associated with a regressor variable are referred to by the name of the corresponding regressor variable. The restriction expressions must be a linear function of the parameters. The following statements illustrate the use of the RESTRICT statement: proc hpqlim data=one; model y = x1-x10 / censored(lb=0); restrict x1*2 <= x2 + x3; run;","help":"RESTRICT restriction1 &lt;, restriction2 ...&gt; "},{"name":"TEST","description":"The TEST statement performs the Wald, Lagrange multiplier, and likelihood ratio tests of linear hypotheses about the regression parameters in the preceding MODEL statement. Each equation specifies a linear hypothesis to be tested. All hypotheses in one TEST statement are tested jointly. Variable names in the equations must correspond to regressors in the preceding MODEL statement, and each name represents the coefficient of the corresponding regressor. Use the keyword INTERCEPT for a test that includes a constant.","help":"TEST &lt;ALL&gt; &lt;LM&gt; &lt;WALD&gt; ...","arguments":[{"name":"ALL","optional":true,"followsDelimiter":"/","description":"Requests the Wald, Lagrange multiplier, and likelihood ratio tests.","type":"standalone"},{"name":"LM","optional":true,"followsDelimiter":"/","description":"Requests the Lagrange multiplier test.","type":"standalone"},{"name":"LR","optional":true,"followsDelimiter":"/","description":"Requests the likelihood ratio test.","type":"standalone"},{"name":"WALD","optional":true,"followsDelimiter":"/","description":"Requests the Wald test.","type":"standalone"}]},{"name":"WEIGHT","description":"The WEIGHT statement specifies a variable that supplies weighting values to use for each observation in estimating parameters. The log likelihood for each observation is multiplied by the corresponding weight variable value. If the weight of an observation is nonpositive, that observation is not used in the estimation.","help":"WEIGHT &lt;NONORMALIZE&gt; ","arguments":[{"name":"NONORMALIZE","optional":true,"followsDelimiter":"/","description":"Specifies that the weights must be used as is. When this option is not specified, the weights are normalized so that they add up to the actual sample size.","type":"standalone"}]}],"supportSiteInformation":{"docsetId":"etsug","docsetVersion":"latest","docsetTargetFile":"etsug_hpqlim_toc.htm"}}