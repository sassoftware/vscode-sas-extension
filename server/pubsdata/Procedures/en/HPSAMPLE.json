{"name":"HPSAMPLE","statements":[{"name":"PROC HPSAMPLE","description":"The HPSAMPLE procedure is a high-performance procedure that performs either simple random sampling or stratified sampling. The HPSAMPLE procedure creates the following: † • one output data set, which contains the sample data set • one performance table, which contains performance information • one frequency table, which contains the frequency information for the population and sample † The HPSAMPLE procedure is high-performance in that it takes advantage of distributed computing environments (currently only using single thread) when the input data is stored on the SAS appliance.","help":"PROC HPSAMPLE DATA=< libref. >SAS-data-set or database table <NONORM> OUT=< libref. >SAS-data-set <PARTITION> SAMPOBS=number of sample observations SAMPPCT=sample percentage <SEED=random seed>;     \n\tCLASS variable < variable ... variable > ;\n\tPERFORMANCE <COMMIT=n><CPUCOUNT=<ACTUAL | <num>>><DATASERVER=“name”> ...;\n\tTARGET variable < variable ... variable > ;\n\tVAR variable < variable ... variable > ;","arguments":[{"name":"DATA=","description":"Names the table (SAS data set or database table) that you want to sample from. The default is the most recently created data set. If the data are already distributed, the procedure reads the data alongside the distributed database.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"OUT=","description":"Names the SAS data set that you want to output the sample to. If you run alongside database, you need to specify a dataset with the same database libname as the input data and make sure it does not exist in the database before.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"SAMPOBS=","description":"Names the minimal number of observations you want to sample from the input data. It must be a positive integer. If it exceeds the total number of observations in the input data, you get the original dataset in the output sample.","type":"value"},{"name":"SAMPPCT=","description":"Names sample percentage to be used by PROC HPSAMPLE. It should be a positive number which is less than 100. For example, SAMPPCT=50.5 specifies that you want to sample 50.5 percent of data.","type":"value"},{"name":"NONORM","optional":true,"description":"Enables you to distinguish target values which share the same normalized value when you do stratified sampling. For example, a target has three distinct values “A”, “B” and “b”, and you want to treat “B” and “b” as different levels, you need to use NONORM; By default, “B” and “b” are treated as the same level. A value is normalized by: 1. Removing leading blanks; 2. Truncating to 32 characters; 3. Changing lowercase letters to uppercase.","type":"standalone"},{"name":"PARTITION","optional":true,"description":"Enables you to get an output dataset with the same number of rows as the input dataset but with an additional partition indicator(_PARTIND_), indicating whether an observation is selected to the sample(1) or not(0).","type":"standalone"},{"name":"SEED=","optional":true,"description":"specifies the seed for the random number generator. If it is not specified or specified as a negative number, the seed is set to be the default 12345. The seed option enables you to reproduce same sample output.","type":"value"}]},{"name":"CLASS","description":"The CLASS statement specifies one or more classification variables to be included in the sample. At least one variable is required. A variable can be character or numeric. The CLASS and VAR statements are mutually exclusive. NOTE: Each variable in the TARGET statement must be specified in the CLASS statement.","help":"CLASS variable &lt; variable ... variable &gt; "},{"name":"PERFORMANCE","description":"The PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, passes variables about the distributed computing environment, and requests detailed results about the performance characteristics of a SAS High-Performance Analytics procedure. With the PERFORMANCE statement you can also control whether a SAS High-Performance Analytics procedure executes in symmetric multiprocessor (SMP) or massively parallel processor (MPP) mode. Note: Proc HPSAMPLE does not support multi-threading in this release.","help":"PERFORMANCE &lt;COMMIT=n&gt;&lt;CPUCOUNT=&lt;ACTUAL | &lt;num&gt;&gt;&gt;&lt;DATASERVER=“name”&gt; ...","arguments":[{"name":"COMMIT=","optional":true,"description":"Requests that the High-Performance Analytics procedure write periodic updates to the SAS Log when observations are sent from the client to the appliance for distributed processing.","help":"COMMIT=*n*","type":"value"},{"name":"CPUCOUNT=","optional":true,"description":"Specifies how many processors the procedure assumes are available on each host in the computing environment. num can be any integer from 1 to 256. CPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","help":"CPUCOUNT=ACTUAL | &lt;*num*&gt;","type":"choice","arguments":[{"name":"ACTUAL","description":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","type":"standalone"},{"name":"num","placeholder":true,"description":"Replace <num> with an actual number. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","type":"standaloneOrValue"}]},{"name":"DATASERVER=","optional":true,"description":"Specifies the name of the server on Teradata systems as defined through the hosts file and as used in the LIBNAME statement for Teradata. For example, if the hosts file defines myservercop1 33.44.55.66 as the server for Teradata, then a LIBNAME specification would be as follows: libname TDLib teradata server=myserver user= password= database= ; A PERFORMANCE statement to induce running alongside the Teradata server would specify the following:","type":"value"},{"name":"DETAILS","optional":true,"description":"Requests a table that shows a timing breakdown of the procedure steps.","type":"standalone"},{"name":"HOST=","optional":true,"aliases":["GRIDHOST="],"description":"Specifies the name of the appliance host in single or double quotes. If the HOST= option is specified, it overrides the value of the GRIDHOST environment variable.","type":"value"},{"name":"INSTALL=","optional":true,"aliases":["INSTALLLOC="],"description":"Specifies the directory in which the High-Performance Analytics shared libraries are installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable.","type":"value"},{"name":"NODES=","optional":true,"aliases":["NNODES="],"description":"Specifies the number of nodes in the distributed computing environment, provided that the data are not processed alongside the database.","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads are determined based on the number of CPUs on the host on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count is specific to the High- Performance Analytics procedure. Most procedures create one thread per CPU for the analytic computations. By default, High-Performance Analytics procedures execute in multiple concurrent threads unless turned off by the NOTHREADS system option or you force single-threaded execution with NTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance Analytics procedures can impose more stringent limits if called for by algorithmic considerations. You can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE statement.","help":"NTHREADS=*n*","type":"value"},{"name":"TIMEOUT=","optional":true,"description":"Specifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection to the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs are submitted to the appliance through workload management tools that might suspend access to the appliance for a longer period, you might want to increase the timeout value.","help":"TIMEOUT=*s*","type":"value"}]},{"name":"TARGET","description":"The TARGET statement specifies one or two classification variables to be used for stratificaiton. Each variable must be specified in the CLASS statement. Currently up to two target variables are supported. The maximum number of levels (that is, distinct values) in any target variable is 256.","help":"TARGET variable &lt; variable ... variable &gt; "},{"name":"VAR","description":"The VAR statement specifies one or more numeric variables to be included in the sample. At least one variable is required; all variables must be numeric. You can use this statement to include only the variables of interests in your sample. The CLASS and VAR statements are mutually exclusive.","help":"VAR variable &lt; variable ... variable &gt; "}],"supportSiteInformation":{"docsetId":"prochp","docsetVersion":"v_001","docsetTargetFile":"prochp_hpsample_toc.htm"}}