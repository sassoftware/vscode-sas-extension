{"name":"HPSUMMARY","statements":[{"name":"PROC HPSUMMARY","description":"The HPSUMMARY procedure enables you to summarize data on a SAS High Performance Analytics grid for parallel execution. The output data created by PROC HPSUMMA RY can then be written in parallel back to the grid data store. † Although it is possible to use PROC HPSUMMARY on data that do not reside on the grid or produce result tables that do not reside on the grid, this usage is not recommended for production due to the overhead of transferring data to and from the grid. † PROC HPSUMMARY is a high-performance version of the SUMMARY procedure in Base SAS software.","help":"PROC HPSUMMARY <ALLTYPES><ALPHA=α><CHARTYPE><CSS><CV><DATA=SAS-data-set<(data-set-option(s))>><EXCLNPWGT><KURTOSIS><LCLM><MAX><MEAN><MEDIAN><MIN><MISSING><MODE><N><NMISS><P1><P10><P5><P90><P95><P99><PROBT><Q1><Q3><QMARKERS=number><QMETHOD=OS | P2><QNTLDEF=1 | 2 | 3... ><QRANGE><RANGE><SKEWNESS><STDERR><STD><SUM><SUMWGT><T><UCLM><USS><VAR><VARDEF=DF | N | WDF... >;     \n\tCLASS <GROUPINTERNAL><MISSING> ;\n\tFREQ variable;\n\tOUTPUT IDGROUP(<MIN|MAX (variable-list-1) <...MIN|MAX (variable-list-n)>> MAXID<(variable-1 <(id-variable-list-1)> <...variable-n <(id-variable-list-n)>>)> = name(s) OUT=SAS-data-set ...;\n\tPERFORMANCE <COMMIT=n><CPUCOUNT=<ACTUAL | <num>>><DATASERVER=“name”> ...;\n\tTYPES request(s);\n\tVAR <WEIGHT=weight-variable> ;\n\tWAYS list;\n\tWEIGHT variable;","arguments":[{"name":"ALLTYPES","optional":true,"aliases":["ALLWAYS"],"description":"Requests that PROC HPSUMMARY compute descriptive statistics for all combinations of classification variables. By default, PROC HPSUMMARY generates only the n-way.","type":"standalone"},{"name":"ALPHA=","optional":true,"description":"Specifies the confidence level to compute the confidence limits for the mean. The percentage for the confidence limits is (1 - α)×100. For example, ALPHA=.05 results in a 95% confidence limit.","type":"value"},{"name":"CHARTYPE","optional":true,"description":"Specifies that the _TYPE_ variable in the output data set is a character representation of the binary value of _TYPE_.","type":"standalone"},{"name":"CSS","optional":true,"description":"Sum of squares corrected for the mean","type":"standalone"},{"name":"CV","optional":true,"description":"Percent coefficient of variation","type":"standalone"},{"name":"DATA=","optional":true,"description":"Identifies the input SAS data set.","type":"value"},{"name":"EXCLNPWGT","optional":true,"aliases":["EXCLNPWGTS"],"description":"Excludes observations with nonpositive weight values (zero or negative) from the analysis.","type":"standalone"},{"name":"KURTOSIS","optional":true,"aliases":["KURT"],"description":"Measures heaviness of tails.","type":"standalone"},{"name":"LCLM","optional":true,"description":"One-sided confidence limit below the mean","type":"standalone"},{"name":"MAX","optional":true,"description":"Maximum value","type":"standalone"},{"name":"MEAN","optional":true,"description":"Arithmetic mean","type":"standalone"},{"name":"MEDIAN","optional":true,"aliases":["P50"],"description":"Middle value","type":"standalone"},{"name":"MIN","optional":true,"description":"Minimum value","type":"standalone"},{"name":"MISSING","optional":true,"description":"Considers missing values as valid values to create the combinations of class variables.","type":"standalone"},{"name":"MODE","optional":true,"description":"Most frequent value","type":"standalone"},{"name":"N","optional":true,"description":"Number of observations that are not missing","type":"standalone"},{"name":"NMISS","optional":true,"description":"Number of observations that are missing","type":"standalone"},{"name":"P1","optional":true,"description":"1st percentile","type":"standalone"},{"name":"P10","optional":true,"description":"10th percentile","type":"standalone"},{"name":"P5","optional":true,"description":"5th percentile","type":"standalone"},{"name":"P90","optional":true,"description":"90th percentile","type":"standalone"},{"name":"P95","optional":true,"description":"95th percentile","type":"standalone"},{"name":"P99","optional":true,"description":"99th percentile","type":"standalone"},{"name":"PROBT","optional":true,"aliases":["PRT"],"description":"Two-tailed p-value for Student's t statistic","type":"standalone"},{"name":"Q1","optional":true,"aliases":["P25"],"description":"Lower quartile (25th percentile)","type":"standalone"},{"name":"Q3","optional":true,"aliases":["P75"],"description":"Upper quartile (75th percentile)","type":"standalone"},{"name":"QMARKERS=","optional":true,"description":"Specifies the default number of markers to use for the P² quantile estimation method.","help":"QMARKERS=*number*","type":"value"},{"name":"QMETHOD=","optional":true,"description":"Specifies the method that PROC SUMMARY uses to process the input data when it computes quantiles.","help":"QMETHOD=OS | P2","type":"choice","arguments":[{"name":"OS","description":"Specifies that PROC HPSUMMARY use order statistics. NOTE: This technique can be very memory-intensive.","type":"standalone"},{"name":"P2","description":"Specifies that PROC HPSUMMARY use the P² method to approximate the quantile. When QMETHOD=P2, PROC HPSUMMARY does not compute MODE or weighted quantiles. In addition, reliable estimations of some quantiles (P1, P5, P95, P99) might not be possible for some data sets.","type":"standalone"}]},{"name":"QNTLDEF=","optional":true,"aliases":["PCTLDEF="],"description":"Specifies the mathematical definition that PROC SUMMARY uses to calculate quantiles when QMETHOD=OS. To use QMETHOD=P2, you must use QNTLDEF=5.","help":"QNTLDEF=1 | 2 | 3 | 4 | 5","type":"choice","arguments":[{"name":"1","description":"Definition 1 for computing quantile statistics","type":"standalone"},{"name":"2","description":"Definition 2 for computing quantile statistics","type":"standalone"},{"name":"3","description":"Definition 3 for computing quantile statistics","type":"standalone"},{"name":"4","description":"Definition 4 for computing quantile statistics","type":"standalone"},{"name":"5","description":"Definition 5 for computing quantile statistics","type":"standalone"}]},{"name":"QRANGE","optional":true,"description":"Interquartile range and is calculated as Q3-Q1","type":"standalone"},{"name":"RANGE","optional":true,"description":"Range calculated as the difference between maximum value and minimum value.","type":"standalone"},{"name":"SKEWNESS","optional":true,"aliases":["SKEW"],"description":"Measures the tendency of the deviations to be larger in one direction than in the other.","type":"standalone"},{"name":"STDERR","optional":true,"description":"Standard error of the mean","type":"standalone"},{"name":"STD","optional":true,"aliases":["STDDEV"],"description":"[STDDEV] Standard deviation","type":"standalone"},{"name":"SUM","optional":true,"description":"Sum","type":"standalone"},{"name":"SUMWGT","optional":true,"description":"Sum of the weights","type":"standalone"},{"name":"T","optional":true,"description":"Student's t statistic","type":"standalone"},{"name":"UCLM","optional":true,"description":"One-sided confidence limit above the mean","type":"standalone"},{"name":"USS","optional":true,"description":"Uncorrected sum of squares","type":"standalone"},{"name":"VAR","optional":true,"description":"Variance","type":"standalone"},{"name":"VARDEF=","optional":true,"description":"Specifies the divisor to use in the calculation of the variance and standard deviation.","help":"VARDEF=DF | N | WDF | WEIGHT","type":"choice","arguments":[{"name":"DF","description":"Degrees of freedom","type":"standalone"},{"name":"N","description":"Number of observations","type":"standalone"},{"name":"WDF","description":"Sum of weights minus one","type":"standalone"},{"name":"WEIGHT","aliases":["WGT"],"description":"Sum of weights","type":"standalone"}]}]},{"name":"CLASS","aliases":["CLASSES"],"description":"Specifies the variables whose values define the subgroup combinations for the analysis. Required Arguments: variable(s) specifies one or more variables that the procedure uses to group the data. Variables in a CLASS statement are referred to as class variables. Class variables are numeric or character. Class variables can have continuous values, but they typically have a few discrete values that define levels of the variable. You do not have to sort the data by class variables.","help":"CLASS &lt;GROUPINTERNAL&gt;&lt;MISSING&gt;","arguments":[{"name":"GROUPINTERNAL","optional":true,"followsDelimiter":"/","description":"Specifies not to apply formats to the class variables when PROC HPSUMMARY groups the values to create combinations of class variables.","type":"standalone"},{"name":"MISSING","optional":true,"followsDelimiter":"/","description":"Considers missing values as valid values for the class variable levels.","type":"standalone"}]},{"name":"FREQ","aliases":["FREQUENCY"],"description":"Specifies a numeric variable that contains the frequency of each observation. Required Argument: variable specifies a numeric variable whose value represents the frequency of the observation. If you use the FREQ statement, then the procedure assumes that each observation represents n observations, where n is the value of variable. If n is not an integer, then SAS truncates it. If n is less than 1 or is missing, then the procedure does not use that observation to calculate statistics. The sum of the frequency variable represents the total number of observations. Note: The FREQ variable does not affect how PROC HPSUMMARY identifies multiple extremes when you use the IDGROUP syntax in the OUTPUT statement.","help":"FREQ variable"},{"name":"OUTPUT","description":"and so on.","help":"OUTPUT IDGROUP(&lt;MIN|MAX (variable-list-1) &lt;...MIN|MAX (variable-list-n)&gt;&gt; MAXID&lt;(variable-1 &lt;(id-variable-list-1)&gt; &lt;...variable-n &lt;(id-variable-list-n)&gt;&gt;)&gt; = name(s) OUT=SAS-data-set ...","arguments":[{"name":"CSS","description":"Sum of squares corrected for the mean","type":"standalone"},{"name":"CSS=","description":"Sum of squares corrected for the mean","type":"value"},{"name":"CV","description":"Percent coefficient of variation","type":"standalone"},{"name":"CV=","description":"Percent coefficient of variation","type":"value"},{"name":"IDGROUP=","aliases":["IDGRP="],"description":"[Syntax: IDGROUP(<MIN|MAX (variable-list-1) <...MIN|MAX (variable-list-n)>> <<MISSING> <OBS> <LAST>> OUT <[n]> (id-variable-list)=<name(s)>)","help":"IDGROUP=MIN | MAX | MISSING | OBS | LAST | OUT","type":"choice","arguments":[{"name":"MIN","type":"standalone"},{"name":"MAX","type":"standalone"},{"name":"MISSING","type":"standalone"},{"name":"OBS","type":"standalone"},{"name":"LAST","type":"standalone"},{"name":"OUT","type":"standalone"}]},{"name":"KURTOSIS=","aliases":["KURT="],"description":"Measures heaviness of tails.","type":"value"},{"name":"KURTOSIS","aliases":["KURT"],"description":"Measures heaviness of tails.","type":"standalone"},{"name":"LCLM","description":"One-sided confidence limit below the mean","type":"standalone"},{"name":"LCLM=","description":"One-sided confidence limit below the mean","type":"value"},{"name":"MAX","description":"Maximum value","type":"standalone"},{"name":"MAX=","description":"Maximum value","type":"value"},{"name":"MAXID=","description":"Specifies that one or more identification variables be associated with the maximum values of the analysis variables.","type":"value"},{"name":"MEAN","description":"Arithmetic mean","type":"standalone"},{"name":"MEAN=","description":"Arithmetic mean","type":"value"},{"name":"MEDIAN=","aliases":["P50="],"description":"Middle value","type":"value"},{"name":"MEDIAN","aliases":["P50"],"description":"Middle value","type":"standalone"},{"name":"MIN","description":"Minimum value","type":"standalone"},{"name":"MIN=","description":"Minimum value","type":"value"},{"name":"MINID=","description":"Specifies that one or more identification variables be associated with the minimum values of the analysis variables.","type":"value"},{"name":"MODE","description":"Most frequent value","type":"standalone"},{"name":"MODE=","description":"Most frequent value","type":"value"},{"name":"N","description":"Number of observations that are not missing","type":"standalone"},{"name":"N=","description":"Number of observations that are not missing","type":"value"},{"name":"NMISS","description":"Number of observations that are missing","type":"standalone"},{"name":"NMISS=","description":"Number of observations that are missing","type":"value"},{"name":"OUT=","description":"Names the new output data set. If SAS-data-set does not exist, then PROC MEANS creates it. If you omit OUT=, then the data set is named DATAn, where n is the smallest integer that makes the name unique.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"P1","description":"1st percentile","type":"standalone"},{"name":"P10","description":"10th percentile","type":"standalone"},{"name":"P10=","description":"10th percentile","type":"value"},{"name":"P1=","description":"1st percentile","type":"value"},{"name":"P25","description":"25th percentile","type":"standalone"},{"name":"P25=","description":"25th percentile","type":"value"},{"name":"P5","description":"5th percentile","type":"standalone"},{"name":"P5=","description":"5th percentile","type":"value"},{"name":"P75","description":"75th percentile (upper quartile)","type":"standalone"},{"name":"P75=","description":"75th percentile (upper quartile)","type":"value"},{"name":"P90","description":"90th percentile","type":"standalone"},{"name":"P90=","description":"90th percentile","type":"value"},{"name":"P95","description":"95th percentile","type":"standalone"},{"name":"P95=","description":"95th percentile","type":"value"},{"name":"P99","description":"99th percentile","type":"standalone"},{"name":"P99=","description":"99th percentile","type":"value"},{"name":"PROBT=","aliases":["PRT="],"description":"Two-tailed p-value for Student's t statistic","type":"value"},{"name":"PROBT","aliases":["PRT"],"description":"Two-tailed p-value for Student's t statistic","type":"standalone"},{"name":"Q1","description":"Lower quartile (25th percentile)","type":"standalone"},{"name":"Q1=","description":"Lower quartile (25th percentile)","type":"value"},{"name":"Q3","description":"Upper quartile (75th percentile)","type":"standalone"},{"name":"Q3=","description":"Upper quartile (75th percentile)","type":"value"},{"name":"QRANGE","description":"Interquartile range and is calculated as Q3-Q1","type":"standalone"},{"name":"QRANGE=","description":"Interquartile range and is calculated as Q3-Q1","type":"value"},{"name":"RANGE","description":"Range calculated as the difference between maximum value and minimum value.","type":"standalone"},{"name":"RANGE=","description":"Range calculated as the difference between maximum value and minimum value.","type":"value"},{"name":"SKEWNESS=","aliases":["SKEW="],"description":"Measures the tendency of the deviations to be larger in one direction than in the other.","type":"value"},{"name":"SKEWNESS","aliases":["SKEW"],"description":"Measures the tendency of the deviations to be larger in one direction than in the other.","type":"standalone"},{"name":"STDDEV=","aliases":["STD="],"description":"Standard deviation","type":"value"},{"name":"STDDEV","aliases":["STD"],"description":"Standard deviation","type":"standalone"},{"name":"STDERR","description":"Standard error of the mean","type":"standalone"},{"name":"STDERR=","description":"Standard error of the mean","type":"value"},{"name":"SUM","description":"Sum","type":"standalone"},{"name":"SUM=","description":"Sum","type":"value"},{"name":"SUMWGT","description":"Sum of the weights","type":"standalone"},{"name":"SUMWGT=","description":"Sum of the weights","type":"value"},{"name":"T","description":"Student's t statistic","type":"standalone"},{"name":"T=","description":"Student's t statistic","type":"value"},{"name":"UCLM","description":"One-sided confidence limit above the mean","type":"standalone"},{"name":"UCLM=","description":"One-sided confidence limit above the mean","type":"value"},{"name":"USS","description":"Uncorrected sum of squares","type":"standalone"},{"name":"USS=","description":"Uncorrected sum of squares","type":"value"},{"name":"VAR","description":"Variance","type":"standalone"},{"name":"VAR=","description":"Variance","type":"value"},{"name":"AUTONAME","optional":true,"description":"Specifies that PROC MEANS creates a unique variable name for an output statistic when you do not assign the variable name in the OUTPUT statement. This action is accomplished by appending the statistic-keyword to the end of the input variable name from which the statistic was derived. For example, the statement","type":"standalone"},{"name":"WAYS","optional":true,"description":"Includes a variable named _WAY_ in the output data set. This variable contains a value from 1 to the maximum number of class variables that indicates how many class variables PROC HPSUMMARY combines to create the TYPE value.","type":"standalone"}]},{"name":"PERFORMANCE","description":"The PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, passes variables about the distributed computing environment, and requests detailed results about the performance characteristics of a High-Performance Analytics procedure. With the PERFORMANCE statement, you can also control whether a High-Performance Analytics procedure executes in SMP or MPP mode. It is important to remember the distinction between the NODES= and NTHREADS= options. The NODES= option specifies the number of separate grid nodes that participate in the HPSUMMARY execution, while the NTHREADS= option determines how many independent copies of the DS2 program are run in parallel on each node. If the data are located on the grid, then all nodes must be engaged; therefore, the NODES= option might be overridden. Setting NODES=0 causes the HPSUMMARY code to execute on the client side only. Setting the NTHREADS= option to a value that is greater than the CPU count on each grid node is not likely to improve overall throughput.","help":"PERFORMANCE &lt;COMMIT=n&gt;&lt;CPUCOUNT=&lt;ACTUAL | &lt;num&gt;&gt;&gt;&lt;DATASERVER=“name”&gt; ...","arguments":[{"name":"COMMIT=","optional":true,"description":"Requests that the High-Performance Analytics procedure write periodic updates to the SAS Log when observations are sent from the client to the appliance for distributed processing.","help":"COMMIT=*n*","type":"value"},{"name":"CPUCOUNT=","optional":true,"description":"Specifies how many processors the procedure assumes are available on each host in the computing environment. num can be any integer from 1 to 256. CPUCOUNT=ACTUAL sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","help":"CPUCOUNT=ACTUAL | &lt;*num*&gt;","type":"choice","arguments":[{"name":"ACTUAL","description":"Sets CPUCOUNT to the number of physical processors available. This number can be less than the physical number of CPUs if the SAS process has been restricted by system administration tools.","type":"standalone"},{"name":"num","placeholder":true,"description":"Replace <num> with an actual number. Setting CPUCOUNT= to a number greater than the actual number of available CPUs might result in reduced performance. This option overrides the CPUCOUNT= SAS system option.","type":"value"}]},{"name":"DATASERVER=","optional":true,"description":"Specifies the name of the server on Teradata systems as defined through the hosts file and as used in the LIBNAME statement for Teradata. For example, if the hosts file defines myservercop1 33.44.55.66 as the server for Teradata, then a LIBNAME specification would be as follows: libname TDLib teradata server=myserver user= password= database= ; A PERFORMANCE statement to induce running alongside the Teradata server would specify the following:","type":"value"},{"name":"DETAILS","optional":true,"description":"Requests a table that shows a timing breakdown of the procedure steps.","type":"standalone"},{"name":"HOST=","optional":true,"aliases":["GRIDHOST="],"description":"Specifies the name of the appliance host in single or double quotes. If the HOST= option is specified, it overrides the value of the GRIDHOST environment variable.","type":"value"},{"name":"INSTALL=","optional":true,"aliases":["INSTALLLOC="],"description":"Specifies the directory in which the High-Performance Analytics shared libraries are installed on the appliance. Specifying the INSTALL= option overrides the GRIDINSTALLLOC environment variable.","type":"value"},{"name":"NODES=","optional":true,"aliases":["NNODES="],"description":"Specifies the number of nodes in the distributed computing environment, provided that the data are not processed alongside the database.","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for analytic computations and overrides the SAS system option THREADS | NOTHREADS. If you do not specify the NTHREADS= option, the number of threads are determined based on the number of CPUs on the host on which the analytic computations execute. The algorithm by which a CPU count is converted to a thread count is specific to the High- Performance Analytics procedure. Most procedures create one thread per CPU for the analytic computations. By default, High-Performance Analytics procedures execute in multiple concurrent threads unless turned off by the NOTHREADS system option or you force single-threaded execution with NTHREADS=1. The largest number that can be specified for n is 256. Individual High-Performance Analytics procedures can impose more stringent limits if called for by algorithmic considerations. You can affect the determination of the CPU count with the CPUCOUNT= option in the PERFORMANCE statement.","help":"NTHREADS=*n*","type":"value"},{"name":"TIMEOUT=","optional":true,"description":"Specifies the timeout in seconds for a High-Performance Analytics procedure to wait for a connection to the appliance and establish a connection back to the client. The default is s=120 seconds. If jobs are submitted to the appliance through workload management tools that might suspend access to the appliance for a longer period, you might want to increase the timeout value.","help":"TIMEOUT=*s*","type":"value"}]},{"name":"TYPES","description":"Identifies which of the possible combinations of class variables to generate. Required Arguments: request(s) specifies which of the 2^k combinations of class variables PROC HPSUMMARY uses to create the types, where k is the number of class variables. A request is composed of one class variable name, several class variable names separated by asterisks, or (). To request class variable combinations quickly, use a grouping syntax by placing parentheses around several variables and joining other variables or variable combinations. For example, the following statements illustrate grouping syntax: types A*(B C); --Equivalent to: types A*B A*C; types (A B)*(C D); --Equivalent to: types A*C A*D B*C B*D; types (A B C)*D; --Equivalent to: types A*D B*D C*D;","help":"TYPES request(s)"},{"name":"VAR","aliases":["VARS","VARIABLE","VARIABLES"],"description":"VAR variable(s) </ WEIGHT=weight-variable>; Identifies the analysis variables and their order in the output. Required Arguments: variable(s) identifies the analysis variables and specifies their order in the results.","help":"VAR &lt;WEIGHT=weight-variable&gt;","arguments":[{"name":"WEIGHT=","optional":true,"description":"Specifies a numeric variable whose values weight the values of the variables that are specified in the VAR statement.","help":"WEIGHT=*weight-variable*","type":"value"}]},{"name":"WAYS","description":"Specifies the number of ways to make unique combinations of class variables. Required Arguments: list specifies one or more integers that define the number of class variables to combine to form all the unique combinations of class variables. For example, you can specify 2 for all possible pairs and 3 for all possible triples. The list can be specified in the following ways: m m1 m2 ... mn m1,m2,...,mn m TO n <BY increment> m1,m2, TO m3 <BY increment>, m4 Range: 0 to maximum number of class variables","help":"WAYS list"},{"name":"WEIGHT","aliases":["WGT"],"description":"Specifies weights for observations in the statistical calculations. Required Arguments: variable specifies a numeric variable whose values weight the values of the analysis variables. The values of the variable do not have to be integers. If the value of the weight variable is o Weight value... PROC HPSUMMARY... o 0 counts the observation in the total number of observations o less than 0 converts the value to zero and counts the observation in the total number of observations o missing excludes the observation To exclude observations that contain negative and zero weights from the analysis, use EXCLNPWGT. Note that most SAS/STAT procedures, such as PROC GLM, exclude negative and zero weights by default. Restriction: To compute weighted quantiles, use QMETHOD=OS in the PROC statement. Restriction: Skewness and kurtosis are not available with the WEIGHT statement. Restriction: PROC HPSUMMARY will not compute MODE when a weight variable is active. Instead, try using The UNIVARIATE Procedure when MODE needs to be computed and a weight variable is active.","help":"WEIGHT variable"}],"supportSiteInformation":{"docsetId":"prochp","docsetVersion":"v_001","docsetTargetFile":"prochp_hpsummary_toc.htm"}}