{"name":"KCLUS","statements":[{"name":"PROC KCLUS","description":"The KCLUS procedure performs clustering (a common step in data exploration) in SAS Viya. You can use the KCLUS procedure to read and write data in distributed form, and to perform clustering and scoring in parallel by making full use of multicore computers or distributed computing environments. † The KCLUS procedure performs a cluster analysis on the basis of distances that are computed from one or more quantitative variables. The observations are divided into clusters such that every observation belongs to one and only one cluster. † The KCLUS procedure uses the k-means algorithm for clustering interval input variables, uses the k-modes algorithm for clustering nominal input variables, and uses k-prototypes algorithm for clustering mixed input that contains both interval and nominal variables.","help":"PROC KCLUS <DATA=CAS-libref.data-table>\n        <DISTANCE=EUCLIDEAN | MANHATTAN>\n        <DISTANCENOM=BINARY | GLOBALFREQ | RELATIVEFREQ>\n        <IMPUTE=MEAN | NONE>\n        <IMPUTENOM=MEAN | NONE>\n        <INIT=FORGY | RAND>\n        <MAXCLUSTERS=number>\n        <MAXITER=number>\n        <NOC=NONE | ABC>\n        <NTHREADS=number-of-threads>\n        <OUTSTAT < (OUTITER) >=CAS-libref.data-table>\n        <SEED=number>\n        <STANDARDIZE=NONE | RANGE | STD>\n        <STOPCRITERION=CLUSTER_CHANGE | WCSS_CHANGE>;           \n\tCODE <FILE=filename>\n          <LABELID=number> ;\n        \n\tDISPLAY <CASESENSITIVE>\n          <EXCLUDE>\n          <EXCLUDEALL> ...;\n        \n\tDISPLAYOUT <NOREPLACE>\n          <REPEATED> ;\n        \n\tFREQ variable ;\n        \n\tINPUT           <LEVEL=<NOMINAL | INTERVAL>>           ;\n        \n\tSCORE <COPYVAR=variable | COPYVARS=(variables)>\n          <OUT=CAS-libref.data-table> ;\n      ","arguments":[{"name":"DATA=","optional":true,"description":"Names the input data table for PROC KCLUS to use. CAS-libref.data-table is a two-level name, where","help":"DATA=*CAS-libref.data-table*","type":"dataSet"},{"name":"DISTANCE=","optional":true,"description":"Specifies the distance measure for similarity that is used for interval input variables.","help":"DISTANCE=EUCLIDEAN | MANHATTAN","type":"choice","arguments":[{"name":"EUCLIDEAN","description":"Calculates the Euclidean distance.","type":"standalone"},{"name":"MANHATTAN","description":"Calculates the Manhattan distance.","type":"standalone"}]},{"name":"DISTANCENOM=","optional":true,"description":"Specifies the distance measure for similarity that is used for nominal input variables.","help":"DISTANCENOM=BINARY | GLOBALFREQ | RELATIVEFREQ","type":"choice","arguments":[{"name":"BINARY","description":"Calculates a simple matching distance.","type":"standalone"},{"name":"GLOBALFREQ","description":"Calculates distance based on the frequency of levels of nominal input variables in the input data set.","type":"standalone"},{"name":"RELATIVEFREQ","description":"Calculates distance based on the frequency of levels of nominal input variables in each cluster.","type":"standalone"}]},{"name":"IMPUTE=","optional":true,"description":"Specifies the imputation method to be used when the INPUT statement specifies numeric interval variables. You can choose from the following methods:","help":"IMPUTE=MEAN | NONE","type":"choice","arguments":[{"name":"MEAN","description":"Imputes missing values of variables in observations by using the mean value for that variable.","type":"standalone"},{"name":"NONE","description":"Does not do any imputation and excludes observations that have any missing values.","type":"standalone"}]},{"name":"IMPUTENOM=","optional":true,"description":"Specifies the imputation method to be used when the INPUT statement specifies nominal variables. You can choose from the following methods: MODE imputes missing values of variables in observations by using the mode value for that variable. NONE does not do any imputation and excludes observations that have any missing values. If IMPUTENOM=NONE and the number of observations that have nonmissing values is less than the value of the MAXCLUSTERS= option, then the number of clusters is set to the number of observations that have nonmissing values.","help":"IMPUTENOM=MEAN | NONE","type":"choice","arguments":[{"name":"MEAN","description":"Imputes missing values of variables in observations by using the mean value for that variable.","type":"standalone"},{"name":"NONE","description":"Does not do any imputation and excludes observations that have any missing values.","type":"standalone"}]},{"name":"INIT=","optional":true,"description":"Specifies the method for obtaining the initial estimate of cluster centers.","help":"INIT=FORGY | RAND","type":"choice","arguments":[{"name":"FORGY","description":"Selects the initial cluster centers randomly from observations.","type":"standalone"},{"name":"RAND","description":"Assigns all observations randomly to one of the clusters.","type":"standalone"}]},{"name":"MAXCLUSTERS=","optional":true,"description":"Specifies either the number of clusters to be used (if the NOC= option is not specified or NOC=NONE) or the maximum number of clusters to be searched (if NOC=ABC).","help":"MAXCLUSTERS=*number*","type":"value"},{"name":"MAXITER=","optional":true,"description":"Specifies the maximum number of iterations for the algorithm to perform. In each iteration of the k-means or k-modes clustering method, each observation is assigned to the nearest cluster centroid, and the centroids are recomputed.","help":"MAXITER=*number*","type":"value"},{"name":"NOC=","optional":true,"description":"Specifies the method to use for estimating the number of clusters.","help":"NOC=NONE | ABC","type":"choice","arguments":[{"name":"NONE","description":"Does not estimate the number of clusters and uses the value specified in MAXCLUSTERS= option.","type":"standalone"},{"name":"ABC","description":"Estimates number of clusters by using the aligned box criterion (ABC) method. You can specify one or more of the following suboptions: ALIGN=keyword specifies the method for aligning the reference data set based on the input data. You can specify the following values: NONE generates the reference data set from a uniform distribution over the range of values for each subset of the input data set. PCA generates the reference data set from a uniform distribution over a box that is aligned with the principal components of each subset of the input data set. By default, ALIGN=NONE. B=number specifies the number of reference data sets to be created for each cluster candidate. By default, B=1. CRITERION=keyword specifies the criterion to use to estimate the number of clusters that use the statistics obtained in the ABC method. You can specify the following values: ALL uses all the following options. FIRSTMAXWITHSTD uses the smallest k such that the gap value for that k is greater than the onestandard-error adjusted gap value for k+1. ALL uses all the preceding options and selects the number of clusters based on which one is chosen the most often. If each option selects a different number, then the number selected by GLOBALPEAK is used. By default, CRITERION=GLOBALPEAK. FIRSTPEAK uses the first peak value among the peak values in gap statistics. GLOBALPEAK uses the peak value that has the maximum value among all the peak values in gap statistics. MINCLUSTERS=number specifies the minimum number of clusters for searching for the best number of clusters. By default, MINCLUSTERS=2.","type":"standalone"}]},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads that are used in the computation. The default value is the number of CPUs available in the machine.","help":"NTHREADS=*number-of-threads*","type":"value"},{"name":"OUTSTAT=","optional":true,"description":"creates the output data table that contains the cluster centroids for each cluster. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table. You can also specify the following suboption:","help":"OUTSTAT=OUTITER","type":"choice","arguments":[{"name":"OUTITER","type":"standalone"}]},{"name":"SEED=","optional":true,"description":"Specifies an integer to be used to start the pseudorandom number generator for random partitioning of data for training, testing, and validation. If you do not specify a seed or if you specify a value less than or equal to 0, the seed is generated from reading the time of day from the computer’s clock.","help":"SEED=*number*","type":"value"},{"name":"STANDARDIZE=","optional":true,"description":"Specifies the method for standardizing the interval input variables. PROC KCLUS uses the location and scale measures specific to the method. You can specify the following values:","help":"STANDARDIZE=NONE | RANGE | STD","type":"choice","arguments":[{"name":"NONE","description":"Does not standardize and uses the actual values for the input variables.","type":"standalone"},{"name":"RANGE","description":"Standardizes the input variables by using the range method. PROC KCLUS uses the minimum as the location and the range as the scale.","type":"standalone"},{"name":"STD","description":"Standardizes the input variables by using the traditional standardization method.","type":"standalone"}]},{"name":"STOPCRITERION=","optional":true,"description":"Specifies the method to use for convergence. If you do not specify the STOPCRITERION= option, the algorithm stops after it reaches the maximum number of iterations (which is specified in MAXITER= option).","help":"STOPCRITERION=CLUSTER_CHANGE | WCSS_CHANGE","type":"choice","arguments":[{"name":"CLUSTER_CHANGE","description":"Syntax: CLUSTER_CHANGE(< VALUE=number >) Uses the percentile of observations that do not change their cluster membership for that iteration. The optional VALUE= suboption enables you to specify the percentile of observations. By default or if VALUE=0, PROC KCLUS runs until the cluster centroids no longer change.","type":"standalone"},{"name":"WCSS_CHANGE","description":"Syntax: WCSS_CHANGE(< VALUE=number >) Uses the within-cluster distance change as a convergence criterion. The optional VALUE= suboption enables you to specify the change in SSE for the k-means algorithm or the sum of within-cluster distance for the k-modes algorithm.","type":"standalone"}]}]},{"name":"CODE","description":"The CODE statement generates the SAS DATA step code that mimics the computations that are done by the SCORE statement.","help":"CODE <FILE=filename>\n            <LABELID=number>\n          ","arguments":[{"name":"FILE=","optional":true,"description":"Specifies the filename of the file to write the SAS score code to.","help":"FILE=*filename*","type":"value"},{"name":"LABELID=","optional":true,"description":"Specifies a number used to construct array names and statement labels in the generated code. You can specify a value in the range 0 to 1024; by default, LABELID=0.","help":"LABELID=*number*","type":"value"}]},{"name":"DISPLAY","description":"The DISPLAY statement enables you to specify a list of ODS tables to display or exclude. This statement is similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve performance when a large number of tables could be generated (such as in BY-group processing). The procedure processes the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. Because ODS statements are processed on a SAS client, all ODS tables are sent to the client and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY statement takes precedence over the ODS statements.","help":"DISPLAY <CASESENSITIVE>\n            <EXCLUDE>\n            <EXCLUDEALL> ...","arguments":[{"name":"CASESENSITIVE","optional":true,"followsDelimiter":"/","description":"Performs a case-sensitive comparison of table names in the table-list to ODS table names when tables are subsetted for display. To preserve case, you must enclose table names in the table-list in quotation marks.","type":"standalone"},{"name":"EXCLUDE","optional":true,"followsDelimiter":"/","description":"Displays all ODS tables except those specified in the table-list.","type":"standalone"},{"name":"EXCLUDEALL","optional":true,"followsDelimiter":"/","description":"Suppresses display of all tables. This option takes precedence over the other options.","type":"standalone"},{"name":"TRACE","optional":true,"followsDelimiter":"/","description":"Displays the ODS table names, labels, and paths.","type":"standalone"}]},{"name":"DISPLAYOUT","description":"The DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This statement is similar to the ODS OUTPUT statement. The table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a key=value format: key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the CAS output table name. key specifies key as the ODS table name and also as the CAS output table name. Table names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT statement does not support regular expressions.","help":"DISPLAYOUT <NOREPLACE>\n            <REPEATED>\n          ","arguments":[{"name":"NOREPLACE","optional":true,"followsDelimiter":"/","description":"Does not replace an existing CAS output table of the same name.","type":"standalone"},{"name":"REPEATED","optional":true,"followsDelimiter":"/","description":"Replicates the CAS output tables on all nodes.","type":"standalone"}]},{"name":"FREQ","description":"The variable in the FREQ statement identifies a numeric variable in the data set that contains the frequency of occurrence of each observation. PROC KCLUS treats each observation as if it appears f times, where f is the value of the FREQ variable for the observation. If f is not an integer, it is truncated to an integer. If f is less than 1 or missing, the observation is not used in the analysis. When the FREQ statement is not specified, each observation is assigned a frequency of 1.","help":"FREQ variable "},{"name":"INPUT","description":"The INPUT statement specifies the names of the variables to be used in clustering. It names one or more input variables that use common options. If you want to use different options for different variables, you can specify multiple INPUT statements.","help":"INPUT             <LEVEL=<NOMINAL | INTERVAL>>\n          ","arguments":[{"name":"LEVEL=","optional":true,"description":"Specifies the level of measurement of the variables. For clustering, only interval, binary, and nominal variables are accepted.","help":"LEVEL=NOMINAL | INTERVAL","type":"choice","arguments":[{"name":"NOMINAL","description":"Specifies a nominal level of measurement.","type":"standalone"},{"name":"INTERVAL","description":"Specifies an interval level of measurement.","type":"standalone"}]}]},{"name":"SCORE","aliases":["OUTPUT"],"description":"The SCORE statement causes the KCLUS procedure to write the cluster membership information of each observation to the output data table. This information includes the variables that are specified in the COPYVARS= option and two new variables, _CLUSTER_ID_ (the ID of the closest cluster) and _DISTANCE_ (the distance between the observation and the centroid of that cluster). If you specify STANDARDIZE=RANGE or STANDARDIZE=STD in the PROC KCLUS statement, then PROC KCLUS adds another column called _STANDARDIZED_DISTANCE_, which contains the distance between the standardized values of the observation and the standardized values of cluster centroid.","help":"SCORE <COPYVAR=variable | COPYVARS=(variables)>\n            <OUT=CAS-libref.data-table>\n          ","arguments":[{"name":"COPYVAR=","optional":true,"aliases":["COPYVARS="],"description":"Lists one or more variables from the input data table that are transferred to the scored output data table, provided that the output data table produces one or more records per input observation. By default, the KCLUS procedure does not transfer any variables from the input data table to the output data table. The COPYVARS= option accepts numeric and character variables.","type":"value"},{"name":"OUT=","optional":true,"description":"names the output data table for PROC KCLUS to use. CAS-libref.data-table is a two-level name, where CAS-libref refers to a collection of information that is defined in the LIBNAME statement and includes the caslib, which includes a path to where the data table is to be stored, and a session identifier, which defaults to the active session but which can be explicitly defined in the LIBNAME statement.","help":"OUT=*CAS-libref.data-table*","type":"dataSet"}]}],"supportSiteInformation":{"docsetId":"casstat","docsetVersion":"v_039","docsetTargetFile":"casstat_kclus_toc.htm"}}