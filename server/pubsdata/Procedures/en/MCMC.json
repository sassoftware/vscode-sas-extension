{"name":"MCMC","statements":[{"name":"PROC MCMC","description":"The MCMC procedure is a general purpose Markov chain Monte Carlo (MCMC) simulation procedure that is designed to fit Bayesian models. Bayesian statistics is different from traditional statistical methods such as frequentist or classical methods. † In essence, Bayesian statistics treats parameters as unknown random variables, and it makes inferences based on the posterior distributions of the parameters. There are several advantages associated with this approach to statistical inference. Some of the advantages include its ability to use prior information and to directly answer specific scientific questions that can be easily understood.","help":"PROC MCMC <ACCEPTTOL=n> <ALG=HMC | NORMAL|N | NUTS... > <AUTOCORLAG=n> <BINARYJOINT> <DATA=SAS-data-set> <DIAGNOSTICS=NONE | <(keyword-list)>> <DIC> <DISCRETE=BINNING | GEO> <INF=value> <INIT=(keyword-list)> <JOINTMODEL> <LIST> <LISTCODE> <MAXINDEXPRINT=number | ALL | MAXIPRINT=number | ALL> <MAXSUBVALUEPRINT=number | ALL | MAXSVPRINT=number | ALL> <MAXTUNE=n> <MCHISTORY=BRIEF | DETAILED | NONE> <MINTUNE=n> <MISSING=ALLCASE|AC | COMPLETECASE|CC> <MONITOR= (symbol-list)> <NBI=n> <NMC=n> <NOLOGDIST> <NTHREADS=n> <NTU=n> <OUTPOST=SAS-data-set> <PLOTS=ALL | AUTOCORR|ACF | DENSITY |D|KERNEL|K... > <PROPCOV=IND | CONGRA | DBLDOG... > <REOBSINFO <(display-options)>> <SCALE=value> <SEED=n> <SIMREPORT=n> <SINGDEN=value> <STATISTICS=ALL |  | CORR... > <TARGACCEPT=value> <TARGACCEPTI=value> <THIN=n> <TRACE> <TUNEWT=value>;     \n\tABORT <ABEND> <CANCEL> <CANCEL FILE> ...;     \n\tARRAY arrayname [ dimensions ] <$> <variables-and-constants> ; \n   \n\tBEGINCNST ;     \n\tBEGINHYPER ;     \n\tBEGINNODATA ; | BEGINPRIOR ; \n   \n\tBY <DESCENDING> <NOTSORTED> ; \n   \n\tCALL routine(parameter-1<, ...parameter-n>); \n   \n\tDELETE;     \n\tDO <OVER> <> <> ...; \n   \n\tELSE <DO> <IF> <THEN> ...; \n   \n\tEND;     \n\tENDCNST ; \n   \n\tENDHYPER ;     \n\tENDNODATA | ENDPRIOR ;     \n\tGOTO label; \n   \n\tHYPERPRIOR <beta(<a=>α, <b=>β)> <binary(<prob|p=>p)> <binomial(<n=>n, <prob|p=>p)> ...;     \n\tIF <DO> <THEN> <WHEN> ...; \n   \n\tLINK statement-label;     \n\tMODEL <beta(<a=>α, <b=>β)> <binary(<prob|p=>p)> <binomial(<n=>n, <prob|p=>p)> ...;     \n\t; \n   \n\tPARMS <NORMAL> <SLICE> <T<(df)>> ...; \n   \n\tPREDDIST <COVARIATES=SAS-data-set> <NSIM=n> <OUTPRED=SAS-data-set> ...; \n   \n\tPRIOR <beta(<a=>α, <b=>β)> <binary(<prob|p=>p)> <binomial(<n=>n, <prob|p=>p)> ...;     \n\tPUT <_PAGE_> ; \n   \n\tRANDOM <beta(<a=>α, <b=>β)> <binary(<prob|p=>p)> <gamma(<shape|sp=>α, scale|s=λ) | gamma(<shape|sp=>α, isscale|is=λ)> ...; \n   \n\tRETURN;     \n\t; \n   \n\tSTOP ;     \n\tUDS subroutine-name ( subroutine-argument-list) ;     \n\tWHEN <DO> ; ","arguments":[{"name":"ACCEPTTOL=","optional":true,"description":"Specifies a tolerance for acceptance probabilities. By default, ACCEPTTOL=0.075.","help":"ACCEPTTOL=*n*","type":"value"},{"name":"ALG=","optional":true,"aliases":["PROPDIST="],"description":"Specifies a proposal distribution for the Metropolis algorithm.","help":"ALG=HMC | NORMAL | NUTS | T&lt;*(df)*&gt;","type":"choice","arguments":[{"name":"HMC","description":"Syntax: HMC<(hmc-options)> Specifies the Hamiltonian Monte Carlo algorithm with a fixed step size and predetermined number of steps. You can specify the following hmc-options: NSTEPS=value N=value specifies the number of steps in the HMC algorithm. By default, N=15. SAVEGRAD saves the gradient calculation in the OUTPOST= data set. STEPSIZE=value specifies the step size in the HMC algorithm. By default, STEPSIZE=0.1.","type":"standalone"},{"name":"NORMAL","aliases":["N"],"description":"Specifies a normal distribution as the proposal distribution. This is the default.","type":"standalone"},{"name":"NUTS","description":"Syntax: NUTS <(nuts-options)> Specifies the No-U-Turn Sampler of the Hamiltonian algorithm. You can specify the following nuts-options: DELTA=value specifies the target acceptance rate during the tuning process. By default, DELTA=0.6. FCALLS outputs the number of function evaluations at each iteration. MAXHEIGHT=value specifies the maximum height of the NUTS tree. MAXTIME=value specifies the maximum number of iterations that it takes the algorithm to surpass the MAXHEIGHT of the NUTS tree before the procedure stops. By default, MAXTIME=1. NTU=value specifies the number of tuning iterations used by NUTS. By default, NTU=1000. SAVEGRAD saves the gradient calculation in the OUTPOST= data set.","type":"standalone"},{"name":"T","description":"Specifies a t-distribution with the degrees of freedom df. By default, df=3. If df > 100, the normal distribution is used since the two distributions are almost identical.","help":"T&lt;*(df)*&gt;","type":"value"}]},{"name":"AUTOCORLAG=","optional":true,"aliases":["ACLAG="],"description":"Specifies the maximum number of autocorrelation lags used in computing the effective sample size.","help":"AUTOCORLAG=*n*","type":"value"},{"name":"BINARYJOINT","optional":true,"description":"Jointly samples binary parameters in a block. Binary parameters in a block are sampled separately in SAS/STAT 13.2 and later. This option reverts to the behavior in SAS/STAT 13.1 and earlier.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Specifies the input data set.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DIAGNOSTICS=","optional":true,"aliases":["DIAG="],"description":"Specifies options for MCMC convergence diagnostics.","help":"DIAGNOSTICS=NONE | &lt;*(keyword-list)*&gt;","type":"choice","arguments":[{"name":"NONE","description":"Suppress all the tests.","type":"standalone"},{"name":"<(keyword-list)>","placeholder":true,"description":"The following keywords are available: ALL -- computes all diagnostic tests and statistics. You can combine the option ALL with any other specific tests to modify test options. AUTOCORR <(autocorr-options)> -- computes default autocorrelations at lags 1, 5, 10, and 50 for each variable. ESS -- computes the effective sample sizes (Kass et al. (1998)) of the posterior samples of each parameter. GEWEKE <(FRAC1=value FRAC2=value)> computes the Geweke spectral density diagnostics, where FRAC1 and FRAC2 specify the beginning FRAC1 and end FRAC2 proportion of the Markov chain, respectively. HEIDELBERGER <(SALPHA=value value EPS=value)> computes the Heidelberger and Welch diagnostic (which consists of a stationarity test and a halfwidth test) for each variable. SALPHA= -- specifies the α level (0 < a < 1) for the stationarity test. By default, SALPHA=0.05 HALPHA= -- specifies the α level (0 < a < 1) for the halfwidth test. By default, HALPHA=0.05. EPS= -- specifies a small positive number ε such that if the halfwidth is less than ε times the sample mean of the retaining iterates, the halfwidth test is passed. MCSE -- computes the Monte Carlo standard error for the posterior samples of each parameter. NONE -- suppresses all of the diagnostic tests and statistics. This is not recommended. RAFTERY <(QUANTILE=value ACCURACY=value PROB=value EPS=value)> -- computes the Raftery and Lewis diagnostics.","type":"value"}]},{"name":"DIC","optional":true,"description":"Computes the Deviance Information Criterion (DIC). DIC is calculated using the posterior mean estimates of the parameters.","type":"standalone"},{"name":"DISCRETE=","optional":true,"description":"Specifies the proposal distribution used in sampling discrete parameters. The default is DISCRETE=BINNING.","help":"DISCRETE=BINNING | GEO","type":"choice","arguments":[{"name":"BINNING","description":"Uses continuous proposal distributions for all discrete parameter blocks.","type":"standalone"},{"name":"GEO","description":"Uses independent symmetric geometric proposal distributions for all discrete parameter blocks.","type":"standalone"}]},{"name":"INF=","optional":true,"description":"Specifies the numerical definition of infinity in the procedure.","help":"INF=*value*","type":"value"},{"name":"INIT=","optional":true,"description":"Specifies options for generating the initial values for the parameters. The following keywords are used:","help":"INIT=MODE | PINIT | RANDOM | REINIT","type":"choice","arguments":[{"name":"MODE","type":"standalone"},{"name":"PINIT","type":"standalone"},{"name":"RANDOM","type":"standalone"},{"name":"REINIT","type":"standalone"}]},{"name":"JOINTMODEL","optional":true,"aliases":["JOINTLLIKE"],"description":"Specifies how the likelihood function is calculated.","type":"standalone"},{"name":"LIST","optional":true,"description":"Displays the model program and variable lists. The LIST option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTCODE","optional":true,"description":"Displays the compiled program code. The LISTCODE option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"MAXINDEXPRINT=","optional":true,"aliases":["MAXIPRINT="],"description":"Specifies the maximum number of observation indices to print in the ODS tables \"Missing Response Information\" table and \"Missing Covariates Information\" table. This option applies only to programs that model missing data. The default value is 20. MAXINDEXPRINT=ALL prints all observation indices for every missing variable that is modeled in PROC MCMC.","type":"value"},{"name":"MAXSUBVALUEPRINT=","optional":true,"aliases":["MAXSVPRINT="],"description":"Specifies the maximum number of subject values to display in the \"Subject Values\" column of the ODS table \"Random Effects Parameters.\" This option applies only to programs that have RANDOM statements. The default value is 20. MAXSUBVALUEPRINT=ALL prints all subject values for every random effect in the program.","type":"value"},{"name":"MAXTUNE=","optional":true,"description":"Specifies an upper limit for the number of proposal tuning loops. By default, MAXTUNE=24.","help":"MAXTUNE=*n*","type":"value"},{"name":"MCHISTORY=","optional":true,"aliases":["MCHIST="],"description":"Controls the display of the Metropolis sampling history. This option is ignored for nested logit and probit models.","help":"MCHISTORY=BRIEF | DETAILED | NONE","type":"choice","arguments":[{"name":"BRIEF","description":"Produces a summary output for the tuning, burn-in, and sampling history tables. No tuning history table is produced if there is no tuning stage. The tables show the following when applicable: o Scale shows the scale, or the range of the scales, that is used in each random walk Metropolis block that has a normal distribution. o Acceptance Rate shows the acceptance rate, or the range of the acceptance rates, for each Metropolis block.","type":"standalone"},{"name":"DETAILED","description":"","type":"standalone"},{"name":"NONE","description":"","type":"standalone"}]},{"name":"MINTUNE=","optional":true,"description":"Specifies a lower limit for the number of proposal tuning loops. By default, MINTUNE=2.","help":"MINTUNE=*n*","type":"value"},{"name":"MISSING=","optional":true,"aliases":["MISS="],"description":"Specifies how missing values are handled.","help":"MISSING=ALLCASE | COMPLETECASE","type":"choice","arguments":[{"name":"ALLCASE","aliases":["AC"],"description":"Gives you the option to model the missing values in an all-case analysis.","type":"standalone"},{"name":"COMPLETECASE","aliases":["CC"],"description":"Assumes a complete case analysis, so all observations with missing variable values are discarded prior to the simulation.","type":"standalone"}]},{"name":"MONITOR=","optional":true,"description":"Specifies a list of program symbols for which a posterior analysis is to be done. The symbols can be any of the following: model parameters (symbols in the PARMS statement), secondary parameters (assigned using the operator \"=\"), the log of the posterior density (LOGPOST), the log of the prior density (LOGPRIOR), the log of the hyperprior density (LOGHYPER), if the HYPER statement is used, or the log of the likelihood function (LOGLIKE).","type":"value"},{"name":"NBI=","optional":true,"description":"Specifies the number of burn-in iterations to perform before beginning to save parameter estimate chains. By default, NBI=1000.","help":"NBI=*n*","type":"value"},{"name":"NMC=","optional":true,"description":"Specifies the number of iterations in the main simulation loop. This is the MCMC sample size if THIN=1. By default, NMC=1000.","help":"NMC=*n*","type":"value"},{"name":"NOLOGDIST","optional":true,"description":"Omits the calculation of the logarithm of the joint distribution of the model parameters at each iteration. The option applies only if all parameters in the model are updated directly from their target distribution, either from the full conditional posterior via conjugacy or from the marginal distribution.","type":"standalone"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads for simulation. PROC MCMC performs two types of threading.","help":"NTHREADS=*n*","type":"value"},{"name":"NTU=","optional":true,"description":"Specifies the number of iterations to use in each proposal tuning phase. By default, NTU=500.","help":"NTU=*n*","type":"value"},{"name":"OUTPOST=","optional":true,"description":"Specifies an output data set that contains the posterior samples of all model parameters, the iteration numbers (variable name ITERATION), the log of the posterior density (LOGPOST), the log of the prior density (LOGPRIOR), the log of the hyperprior density (LOGHYPER), if the HYPER statement is used, and the log likelihood (LOGLIKE).","help":"OUTPOST=*SAS-data-set*","type":"dataSet"},{"name":"PLOTS=","optional":true,"aliases":["PLOT="],"description":"1996).","help":"PLOTS=ALL | AUTOCORR | DENSITY | NONE | TRACE","type":"choice","arguments":[{"name":"ALL","description":"Requests all types of plots. PLOTS=ALL is equivalent to specifying PLOTS=(TRACE AUTOCORR DENSITY).","type":"standalone"},{"name":"AUTOCORR","aliases":["ACF"],"description":"Displays the autocorrelation function plots for the parameters.","type":"standalone"},{"name":"DENSITY","aliases":["D","KERNEL","K"],"description":"Displays the kernel density plots for the parameters.","type":"standalone"},{"name":"NONE","description":"Suppresses the display of all plots.","type":"standalone"},{"name":"TRACE","aliases":["T"],"description":"Displays the trace plots for the parameters.","type":"standalone"}]},{"name":"PROPCOV=","optional":true,"description":"Specifies the method used in constructing the initial covariance matrix for the Metropolis-Hastings algorithm.","help":"PROPCOV=IND | CONGRA | DBLDOG | QUANEW | NMSIMP","type":"choice","arguments":[{"name":"IND","description":"Uses the identity covariance matrix.","type":"standalone"},{"name":"CONGRA","description":"Syntax: CONGRA <(optimize-options)> Performs a conjugate-gradient optimization. The optimize-options are as follows: ITPRINT prints optimization iteration steps and results.","type":"standalone"},{"name":"DBLDOG","description":"Syntax: DBLDOG <(optimize-options)> Performs a double-dogleg optimization. The optimize-options are as follows: ITPRINT prints optimization iteration steps and results.","type":"standalone"},{"name":"QUANEW","description":"Syntax: QUANEW <(optimize-options)> Performs a quasi-Newton optimization. The optimize-options are as follows: ITPRINT prints optimization iteration steps and results.","type":"standalone"},{"name":"NMSIMP","description":"Syntax: NMSIMP | SIMPLEX <(optimize-options)> Performs a Nelder-Mead simplex optimization. The optimize-options are as follows: ITPRINT prints optimization iteration steps and results.","type":"standalone"}]},{"name":"REOBSINFO=","optional":true,"description":"Displays the ODS table \"Random Effect Observation Information.\" The table lists the name of each random effect, the unique values in the corresponding subject variable, the number of observations in each subject, and the observation indices for each subject value. The display-options are as follows:","help":"REOBSINFO=MAXVALUEPRINT= | MAXOBSPRINT=","type":"choice","arguments":[{"name":"MAXVALUEPRINT=","type":"value"},{"name":"MAXOBSPRINT=","type":"value"}]},{"name":"SCALE=","optional":true,"description":"Controls the initial multiplicative scale to the covariance matrix of the proposal distribution. By default, SCALE=2.38.","help":"SCALE=*value*","type":"value"},{"name":"SEED=","optional":true,"description":"Specifies the random number seed. By default, SEED=0, and PROC MCMC gets a random number seed from the clock.","help":"SEED=*n*","type":"value"},{"name":"SIMREPORT=","optional":true,"description":"Controls the number of times that PROC MCMC reports the expected run time of the simulation.","help":"SIMREPORT=*n*","type":"value"},{"name":"SINGDEN=","optional":true,"description":"Defines the singularity criterion in the procedure. By default, SINGDEN=1E-11.","help":"SINGDEN=*value*","type":"value"},{"name":"STATISTICS=","optional":true,"aliases":["STATS="],"description":"The global-stats-options includes the following: ALPHA=numeric-list specifies the α level for the equal-tail and HPD intervals. The value α must be between 0 and 0.5. By default, ALPHA=0.05","help":"STATISTICS=ALL | BRIEF | CORR | COV | SUMMARY|SUM | INTERVAL|INT | NONE","type":"choice","arguments":[{"name":"ALL","description":"Computes all posterior statistics.","type":"standalone"},{"name":"BRIEF","description":"Computes the posterior means, standard deviations, and the $00(1 - α)% equal-tail intervals for each variable.","type":"standalone"},{"name":"CORR","description":"Computes the posterior correlation matrix.","type":"standalone"},{"name":"COV","description":"Computes the posterior covariance matrix.","type":"standalone"},{"name":"SUMMARY","aliases":["SUM"],"description":"Computes the posterior means, standard deviations, and percentile points for each variable. By default, the 25th, 50th, and 75th percentile points are produced, but you can use the global PERCENT= option to request specific percentile points.","type":"standalone"},{"name":"INTERVAL","aliases":["INT"],"description":"Computes the 100(1 - α)% equal-tail and HPD credible intervals for each variable.","type":"standalone"},{"name":"NONE","description":"Suppresses all of the statistics.","type":"standalone"}]},{"name":"TARGACCEPT=","optional":true,"description":"Specifies the target acceptance rate for the random walk based Metropolis algorithm. The numeric value must be between 0.01 and 0.99. By default, TARGACCEPT=0.45 for models with 1 parameter; TARGACCEPT=0.35 for models with 2, 3, or 4 parameters; and TARGACCEPT=0.234 for models with more than 4 parameters.","help":"TARGACCEPT=*value*","type":"value"},{"name":"TARGACCEPTI=","optional":true,"description":"Specifies the target acceptance rate for the independence sampler algorithm. The independence sampler is used for blocks of binary parameters. The numeric value must be between 0 and 1. By default, TARGACCEPTI=0.6.","help":"TARGACCEPTI=*value*","type":"value"},{"name":"THIN=","optional":true,"aliases":["NTHIN="],"description":"Controls the thinning rate of the simulation. PROC MCMC keeps every n-th simulation sample and discards the rest.","help":"THIN=*n*","type":"value"},{"name":"TRACE","optional":true,"description":"Displays the result of each operation in each statement in the model program as it is executed.","type":"standalone"},{"name":"TUNEWT=","optional":true,"description":"Specifies the multiplicative weight used in updating the covariance matrix of the proposal distribution. The numeric value must be between 0 and 1. By default, TUNEWT=0.75.","help":"TUNEWT=*value*","type":"value"}]},{"name":"ABORT","description":"Stops executing the current DATA step, SAS job, or SAS session.","help":"ABORT &lt;ABEND&gt; &lt;CANCEL&gt; &lt;CANCEL FILE&gt; ...","arguments":[{"name":"ABEND","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the ABEND option of the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment; further action is based on how your operating environment and your site treat jobs that end abnormally. o windowing environment and interactive line mode","type":"standalone"},{"name":"CANCEL","optional":true,"description":"Causes the cancellation of the current submitted statements. The results depend on the method of operation: o batch mode and noninteractive mode o The entire SAS program and SAS system are terminated. o The error message is written to the SAS log. o windowing environment and interactive line mode o It only clears the current submitted program. o Other subsequent submitted programs are not affected. o The error message is written to the SAS log. o workspace server and stored process server o It only clears currently submitted program. o Other subsequent submit calls are not affected. o The error message is written to the SAS log. o SAS IntrNet application server","type":"standalone"},{"name":"CANCEL​ FILE","optional":true,"description":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. Other submitted source statements will be executed after the autoexec or %INCLUDE file.","type":"standalone"},{"name":"NOLIST","optional":true,"description":"suppresses the output of all variables to the SAS log.","type":"standalone"},{"name":"RETURN","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the RETURN option in the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment with a condition code indicating an error. o windowing environment and interactive line mode","type":"standalone"}]},{"name":"ARRAY","description":"The ARRAY statement associates a name (of no more than eight characters) with a list of variables and constants. The ARRAY statement is similar to, but not the same as, the ARRAY statement in the DATA step, and it is the same as the ARRAY statements in the NLIN, NLP, NLMIXED, and MODEL procedures. The array name is used with subscripts in the program to refer to the array elements, as illustrated in the following statements: array r[8] r1-r8; do i = 1 to 8; r[i] = 0; end; The ARRAY statement does not support all the features of the ARRAY statement in the DATA step. Implicit indexing of variables cannot be used; all array references must have explicit subscript expressions. Only exact array dimensions are allowed; lower- bound specifications are not supported. A maximum of six dimensions is allowed.","help":"ARRAY arrayname [ dimensions ] &lt;$&gt; &lt;variables-and-constants&gt; "},{"name":"BEGINCNST","description":"The BEGINCNST statement indicates that PROC MCMC processes the programming statements that follow it once for every observation in the input data set before the first iteration.","help":"BEGINCNST "},{"name":"BEGINHYPER","description":"The BEGINHYPER statement is an alias for the BEGINPRIOR statement, and they are treated the same.","help":"BEGINHYPER "},{"name":"BEGINNODATA","aliases":["BEGINPRIOR"],"description":"The BEGINNODATA and ENDNODATA statements define a block within which PROC MCMC processes the programming statements without stepping through the entire data set. The programming statements are executed only twice: at the first and the last observation of the data set. The BEGINNODATA and ENDNODATA statements are best used to reduce unnecessary observation-level computations. Any computations that are identical to every observation, such as transformation of parameters, should be enclosed in these statements. The BEGINPRIOR and ENDPRIOR statements are aliases for the BEGINNODATA and ENDNODATA statements, respectively. You can enclose PRIOR statements in the BEGINNODATA and ENDNODATA statements.","help":"BEGINNODATA ; | BEGINPRIOR "},{"name":"BY","description":"You can specify a BY statement with PROC MCMC to obtain separate analyses of observations in groups that are defined by the BY variables. When a BY statement appears, the procedure expects the input data set to be sorted in order of the BY variables. If you specify more than one BY statement, only the last one specified is used. If your input data set is not sorted in ascending order, use one of the following alternatives: • Sort the data by using the SORT procedure with a similar BY statement. • Specify the NOTSORTED or DESCENDING option in the BY statement for the BCHOICE procedure. The NOTSORTED option does not mean that the data are unsorted but rather that the data are arranged in groups (according to values of the BY variables) and that these groups are not necessarily in alphabetical or increasing numeric order. • Create an index on the BY variables by using the DATASETS procedure (in Base SAS software).","help":"BY &lt;DESCENDING&gt; &lt;NOTSORTED&gt; ","arguments":[{"name":"DESCENDING","optional":true,"description":"Specifies that the observations are sorted in descending order by the variable that immediately follows the word DESCENDING in the BY statement.","type":"standalone"},{"name":"NOTSORTED","optional":true,"description":"Specifies that observations are not necessarily sorted in alphabetic or numeric order.","type":"standalone"}]},{"name":"CALL","description":"Invokes a SAS CALL routine.","help":"CALL routine(parameter-1&lt;, ...parameter-n&gt;)"},{"name":"DELETE","description":"Stops processing the current observation.","help":"DELETE"},{"name":"DO","description":"","help":"DO &lt;OVER&gt; &lt;&gt; &lt;&gt; ...","arguments":[{"name":"BY","optional":true,"description":"Precedes an increment integer (other than 0) or an expression that generates an integer to be added to the value of the index variable in each iteration of the DO loop.","type":"standalone"},{"name":"OVER","optional":true,"description":"","type":"standalone"},{"name":"TO","optional":true,"description":"Separates the start and stop integers or expressions that control the number of times the portion of the DATA step between the iterative DO and END statements is processed.","type":"standalone"},{"name":"UNTIL","optional":true,"description":"...more SAS statements... END","type":"standalone"},{"name":"WHILE","optional":true,"description":"","type":"standalone"}]},{"name":"ELSE","description":"If the condition in an IF-THEN statement is false and an ELSE statement is present, \\ then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"ENDCNST","description":"Ends a BEGINCNST block, and indicates a return to normal processing.","help":"ENDCNST "},{"name":"ENDHYPER","description":"The ENDHYPER statement is an alias for the ENDPRIOR statement, and they are treated the same.","help":"ENDHYPER "},{"name":"ENDNODATA","aliases":["ENDPRIOR"],"description":"Ends a BEGINNODATA block.","help":"ENDNODATA | ENDPRIOR "},{"name":"GOTO","description":"Jumps to a new statement.","help":"GOTO label"},{"name":"HYPERPRIOR","aliases":["HYPER"],"description":"The HYPERPRIOR statement is internally treated the same as the PRIOR statement. It provides a notational convenience in case you wish to fit a multilevel hierarchical model. It is used to specify the hyperprior distribution of the prior distribution parameters. The log of the hyperprior is the sum of the log hyperprior values from each of the HYPERPRIOR statements. If you want to specify a multilevel hierarchical model, you can use either a PRIOR or a HYPERPRIOR statement as if it were a hyper-HYPERPRIOR statement. Your model can have as many hierarchical levels as desired.","help":"HYPERPRIOR &lt;beta(&lt;a=&gt;α, &lt;b=&gt;β)&gt; &lt;binary(&lt;prob|p=&gt;p)&gt; &lt;binomial(&lt;n=&gt;n, &lt;prob|p=&gt;p)&gt; ...","arguments":[{"name":"BETA","optional":true,"description":"Beta distribution with shape parameters α and β.","type":"standalone"},{"name":"BINARY","optional":true,"description":"Binary (Bernoulli) distribution with probability of success p.","type":"standalone"},{"name":"BINOMIAL","optional":true,"description":"Binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"CAUCHY","optional":true,"description":"Cauchy distribution with location θ and scale parameter λ","type":"standalone"},{"name":"CHISQ","optional":true,"description":"Chi-square χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"DGENERAL","optional":true,"description":"General log-likelihood function that you construct using SAS programming statements for single or multiple discrete variables.","type":"standalone"},{"name":"EXPCHISQ","optional":true,"description":"Log transformation of a χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"EXPEXPON","optional":true,"description":"Log transformation of an exponential distribution with scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPGAMMA","optional":true,"description":"Log transformation of a gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPICHISQ","optional":true,"description":"Log transformation of an inverse χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"EXPIGAMMA","optional":true,"description":"Log transformation of an inverse-gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPON","optional":true,"description":"Exponential distribution with scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPSICHISQ","optional":true,"description":"Log transformation of a scaled inverse χ² distribution with v degrees of freedom and scale parameter s.","type":"standalone"},{"name":"GAMMA","optional":true,"description":"Gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"GENERAL","optional":true,"description":"General log-likelihood function that you construct using SAS programming statements for single or multiple continuous variables.","type":"standalone"},{"name":"ICHISQ","optional":true,"description":"Inverse χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"IGAMMA","optional":true,"description":"Inverse gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"LAPLACE","optional":true,"description":"Laplace distribution with location θ and scale or inverse-scale parameter λ","type":"standalone"},{"name":"LOGISTIC","optional":true,"description":"Logistic distribution with location a and scale parameter b","type":"standalone"},{"name":"LOGNORMAL","optional":true,"description":"Log-normal distribution with mean µ and standard deviation or variance or precision λ","type":"standalone"},{"name":"NEGBIN","optional":true,"description":"Negative binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"NORMAL","optional":true,"description":"Normal (Gaussian) distribution with mean µ and standard deviation or variance or precision λ","type":"standalone"},{"name":"PARETO","optional":true,"description":"Pareto distribution with shape α and scale parameter b.","type":"standalone"},{"name":"POISSON","optional":true,"description":"Poisson distribution with mean λ","type":"standalone"},{"name":"SICHISQ","optional":true,"description":"Scaled inverse χ² distribution with v degrees of freedom and scale parameter s.","type":"standalone"},{"name":"T","optional":true,"description":"T distribution with mean µ, standard deviation or variance or precision λ, and v degrees of freedom.","type":"standalone"},{"name":"UNIFORM","optional":true,"description":"Uniform distribution with range a and b.","type":"standalone"},{"name":"WALD","optional":true,"description":"Wald distribution with mean µ and inverse-scale parameter λ.","type":"standalone"},{"name":"WEIBULL","optional":true,"description":"Weibull distribution with location (threshold) parameter µ, shape parameter c, and scale parameter σ.","type":"standalone"}]},{"name":"IF","description":"","help":"IF &lt;DO&gt; &lt;THEN&gt; &lt;WHEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"GO","optional":true,"aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GO TO","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"PUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"SET","optional":true,"description":"Reads an observation from one or more SAS data sets.","type":"standalone"},{"name":"STOP","optional":true,"description":"Action statement in an IF-THEN construct. Stops execution of the current DATA step.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"},{"name":"WHEN","optional":true,"description":"WHEN statement in an IF-THEN-WHEN construct.","type":"standalone"}]},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK statement-label"},{"name":"MODEL","description":"The MODEL statement specifies the conditional distribution of the data given the parameters (the likelihood function). You specify a single dependent variable or a list of dependent variables, a tilde ~, and then a distribution with its arguments. The dependent variables can be variables from the input data set or functions of the symbols in the program. You must specify the dependent variables unless you use the GENERAL function or the DGENERAL function.","help":"MODEL &lt;beta(&lt;a=&gt;α, &lt;b=&gt;β)&gt; &lt;binary(&lt;prob|p=&gt;p)&gt; &lt;binomial(&lt;n=&gt;n, &lt;prob|p=&gt;p)&gt; ...","arguments":[{"name":"BETA","optional":true,"description":"Beta distribution with shape parameters α and β.","type":"standalone"},{"name":"BINARY","optional":true,"description":"Binary (Bernoulli) distribution with probability of success p.","type":"standalone"},{"name":"BINOMIAL","optional":true,"description":"Binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"CAUCHY","optional":true,"description":"Cauchy distribution with location θ and scale parameter λ","type":"standalone"},{"name":"CHISQ","optional":true,"description":"Chi-square χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"DGENERAL","optional":true,"description":"General log-likelihood function that you construct using SAS programming statements for single or multiple discrete variables.","type":"standalone"},{"name":"DIRICHLET","optional":true,"description":"Dirichlet distribution with parameter vector α, where α must be a one-dimensional array of length greater than 1.","type":"standalone"},{"name":"EXPCHISQ","optional":true,"description":"Log transformation of a χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"EXPEXPON","optional":true,"description":"Log transformation of an exponential distribution with scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPGAMMA","optional":true,"description":"Log transformation of a gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPICHISQ","optional":true,"description":"Log transformation of an inverse χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"EXPIGAMMA","optional":true,"description":"Log transformation of an inverse-gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPON","optional":true,"description":"Exponential distribution with scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPSICHISQ","optional":true,"description":"Log transformation of a scaled inverse χ² distribution with v degrees of freedom and scale parameter s.","type":"standalone"},{"name":"GAMMA","optional":true,"description":"Gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"GENERAL","optional":true,"description":"General log-likelihood function that you construct using SAS programming statements for single or multiple continuous variables.","type":"standalone"},{"name":"ICHISQ","optional":true,"description":"Inverse χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"ICOND=","optional":true,"description":"Specifies the initial conditions (or initial states) of the lag or lead variables for the response variable when the observation indices are out of the range.","type":"value"},{"name":"IGAMMA","optional":true,"description":"Inverse gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"INITIAL=","optional":true,"description":"Specifies the initial values of the missing values. By default, PROC MCMC uses a sample average of the nonmissing values of a response variable as the starting values for all missing values in the simulation for that variable. You can use the INITIAL= option to start the Markov chain at a different place.","type":"value"},{"name":"IWISH","optional":true,"description":"Inverse Wishart distribution with v degrees of freedom and symmetric positive definite scale array S.","type":"standalone"},{"name":"LAPLACE","optional":true,"description":"Laplace distribution with location θ and scale or inverse-scale parameter λ","type":"standalone"},{"name":"LOGISTIC","optional":true,"description":"Logistic distribution with location a and scale parameter b","type":"standalone"},{"name":"LOGNORMAL","optional":true,"description":"Log-normal distribution with mean µ and standard deviation or variance or precision λ","type":"standalone"},{"name":"MONITOR=","optional":true,"description":"Outputs analysis for selected missing data variables. You can choose to monitor the missing values by listing the response variable names, the missing data variable names, or indices, or you can have them randomly selected by PROC MCMC. With the RANDOM keyword, PROC MCMC can randomly choose a subset of the variables to monitor. The following statement randomly selects 3 variables to monitor:","help":"MONITOR=RANDOM","type":"choice","arguments":[{"name":"RANDOM","type":"standalone"}]},{"name":"MULTINOM","optional":true,"description":"Multinomial distribution with probability vector p.","type":"standalone"},{"name":"MVN","optional":true,"description":"Multivariate normal distribution with mean vector and covariance matrix ∑.","type":"standalone"},{"name":"MVNAR","optional":true,"description":"Multivariate normal distribution with mean vector µ and a covariance matrix ∑. The covariance matrix ∑ is a multiple of the scale and a matrix with a first-order autoregressive structure. When RHO=0, this distribution becomes a multivariate normal distribution with shared variance.","type":"standalone"},{"name":"NAMESUFFIX=","optional":true,"description":"Specifies how the names of the missing data variables are created. By default, the names are created by concatenating the response variable symbol, an underscore (“_”), and the observation number of the missing value.","help":"NAMESUFFIX=OBSERVATION | POSITION","type":"choice","arguments":[{"name":"OBSERVATION","description":"Constructs the parameter names by appending the observation number to the response variable symbol. This is the default.","type":"standalone"},{"name":"POSITION","aliases":["ORDER"],"description":"Construct the parameter names by appending the numbers 1, 2, 3, and so on, where the number indicates the order in which the missing values appear in the data set.","type":"standalone"}]},{"name":"NEGBIN","optional":true,"description":"Negative binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"NOOUTPOST","optional":true,"description":"Suppresses the output of the posterior samples of missing data variables to the posterior output data set (which is specified in the OUTPOST= option in the PROC MCMC statement). In models with a large number of missing values (for example, tens of thousands), PROC MCMC can run faster if it does not save the posterior samples.","type":"standalone"},{"name":"NORMAL","optional":true,"description":"Normal (Gaussian) distribution with mean µ and standard deviation or variance or precision λ","type":"standalone"},{"name":"PARETO","optional":true,"description":"Pareto distribution with shape α and scale parameter b.","type":"standalone"},{"name":"POISSON","optional":true,"description":"Poisson distribution with mean λ","type":"standalone"},{"name":"SICHISQ","optional":true,"description":"Scaled inverse χ² distribution with v degrees of freedom and scale parameter s.","type":"standalone"},{"name":"T","optional":true,"description":"T distribution with mean µ, standard deviation or variance or precision λ, and v degrees of freedom.","type":"standalone"},{"name":"TABLE","optional":true,"aliases":["CAT"],"description":"Table (categorical) distribution with probability vector p. You can also use the alias cat for this distribution.","type":"standalone"},{"name":"UNIFORM","optional":true,"description":"Uniform distribution with range a and b.","type":"standalone"},{"name":"WALD","optional":true,"description":"Wald distribution with mean µ and inverse-scale parameter λ.","type":"standalone"},{"name":"WEIBULL","optional":true,"description":"Weibull distribution with location (threshold) parameter µ, shape parameter c, and scale parameter σ.","type":"standalone"}]},{"name":"OTHERWISE","description":">","help":""},{"name":"PARMS","description":"The PARMS statement lists the names of the parameters in the model and specifies optional initial values for these parameters. These parameters are referred to as the model parameters. You can specify multiple PARMS statements.","help":"PARMS &lt;NORMAL&gt; &lt;SLICE&gt; &lt;T&lt;(df)&gt;&gt; ...","arguments":[{"name":"NORMAL","optional":true,"followsDelimiter":"/","description":"Specifies a normal proposal distribution in the random walk Metropolis. This is the default.","type":"standalone"},{"name":"SLICE","optional":true,"followsDelimiter":"/","description":"Applies the slice sampler to each parameter in the PARMS statement individually.","type":"standalone"},{"name":"T","optional":true,"followsDelimiter":"/","description":"Uses the t distribution with df degrees of freedom as an alternative proposal distribution.","type":"standalone"},{"name":"UDS","optional":true,"followsDelimiter":"/","description":"Implements a user-defined sampler for any of the parameters in the block.","type":"standalone"}]},{"name":"PREDDIST","description":"The PREDDIST statement creates a new SAS data set that contains random samples from the posterior predictive distribution of the response variable. The posterior predictive distribution is the distribution of unobserved observations (prediction) conditional on the observed data.","help":"PREDDIST &lt;COVARIATES=SAS-data-set&gt; &lt;NSIM=n&gt; &lt;OUTPRED=SAS-data-set&gt; ...","arguments":[{"name":"COVARIATES=","optional":true,"description":"Names the SAS data set that contains the sets of explanatory variable values for which the predictions are established. This data set must contain data with the same variable names as are used in the likelihood function. If you omit the COVARIATES= option, the DATA= data set specified in the PROC MCMC statement is used instead.","help":"COVARIATES=*SAS-data-set*","type":"dataSet"},{"name":"NSIM=","optional":true,"description":"Specifies the number of simulated predicted values. By default, NSIM= uses the NMC= option value specified in the PROC MCMC statement.","help":"NSIM=*n*","type":"value"},{"name":"OUTPRED=","optional":true,"description":"Creates an output data set to contain the samples from the posterior predictive distribution. The output variable names are listed as resp_1–resp_m, where resp is the name of the response variable and m is the number of observations in the COVARIATES= data set in the PREDDIST statement. If the COVARIATES= data set is not specified, m is the number of observations in the DATA= data set specified in the PROC statement.","help":"OUTPRED=*SAS-data-set*","type":"dataSet"},{"name":"SAVEPARM","optional":true,"description":"Outputs to the OUTPRED= data set sampled parameter values that are used in each predictive draw.","type":"standalone"},{"name":"STATISTICS","optional":true,"aliases":["STATS"],"description":"Specifies options for calculating posterior statistics. This option works identically to the STATISTICS= option in the PROC statement. By default, this option takes the specification of the STATISTICS= option in the PROC MCMC statement. The global-stats-options includes the following: ALPHA=numeric-list specifies the α level for the equal-tail and HPD intervals. The value α must be between 0 and 0.5. By default, ALPHA=0.05","help":"STATISTICSALL | CORR | COV | SUMMARY|SUM | INTERVAL|INT | NONE","type":"choice","arguments":[{"name":"ALL","description":"Computes all posterior statistics.","type":"standalone"},{"name":"CORR","description":"Computes the posterior correlation matrix.","type":"standalone"},{"name":"COV","description":"Computes the posterior covariance matrix.","type":"standalone"},{"name":"SUMMARY","aliases":["SUM"],"description":"Computes the posterior means, standard deviations, and percentile points for each variable. By default, the 25th, 50th, and 75th percentile points are produced, but you can use the global PERCENT= option to request specific percentile points.","type":"standalone"},{"name":"INTERVAL","aliases":["INT"],"description":"Computes the 100(1 - α)% equal-tail and HPD credible intervals for each variable.","type":"standalone"},{"name":"NONE","description":"Suppresses all of the statistics.","type":"standalone"}]}]},{"name":"PRIOR","description":"The PRIOR statement is used to specify the prior distribution of the model parameters. You must specify a single parameter or a list of parameters, a tilde ~, and then a distribution with its parameters. Multiple PRIOR statements are allowed for defining models with multiple independent prior components. The log of the prior is the sum of the log prior values from each of the PRIOR statements. The PRIOR statements are processed twice at every Markov chain simulation—that is, twice per pass through the data set. The statements are called at the first and the last observation of the data set. This is the same as how the BEGINNODATA and ENDNODATA statements are processed.","help":"PRIOR &lt;beta(&lt;a=&gt;α, &lt;b=&gt;β)&gt; &lt;binary(&lt;prob|p=&gt;p)&gt; &lt;binomial(&lt;n=&gt;n, &lt;prob|p=&gt;p)&gt; ...","arguments":[{"name":"BETA","optional":true,"description":"Beta distribution with shape parameters α and β.","type":"standalone"},{"name":"BINARY","optional":true,"description":"Binary (Bernoulli) distribution with probability of success p.","type":"standalone"},{"name":"BINOMIAL","optional":true,"description":"Binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"CAUCHY","optional":true,"description":"Cauchy distribution with location θ and scale parameter λ","type":"standalone"},{"name":"CHISQ","optional":true,"description":"Chi-square χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"DGENERAL","optional":true,"description":"General log-likelihood function that you construct using SAS programming statements for single or multiple discrete variables.","type":"standalone"},{"name":"EXPCHISQ","optional":true,"description":"Log transformation of a χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"EXPEXPON","optional":true,"description":"Log transformation of an exponential distribution with scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPGAMMA","optional":true,"description":"Log transformation of a gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPICHISQ","optional":true,"description":"Log transformation of an inverse χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"EXPIGAMMA","optional":true,"description":"Log transformation of an inverse-gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPON","optional":true,"description":"Exponential distribution with scale or inverse-scale parameter λ.","type":"standalone"},{"name":"EXPSICHISQ","optional":true,"description":"Log transformation of a scaled inverse χ² distribution with v degrees of freedom and scale parameter s.","type":"standalone"},{"name":"GAMMA","optional":true,"description":"Gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"GENERAL","optional":true,"description":"General log-likelihood function that you construct using SAS programming statements for single or multiple continuous variables.","type":"standalone"},{"name":"ICHISQ","optional":true,"description":"Inverse χ² distribution with v degrees of freedom.","type":"standalone"},{"name":"IGAMMA","optional":true,"description":"Inverse gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"LAPLACE","optional":true,"description":"Laplace distribution with location θ and scale or inverse-scale parameter λ","type":"standalone"},{"name":"LOGISTIC","optional":true,"description":"Logistic distribution with location a and scale parameter b","type":"standalone"},{"name":"LOGNORMAL","optional":true,"description":"Log-normal distribution with mean µ and standard deviation or variance or precision λ","type":"standalone"},{"name":"NEGBIN","optional":true,"description":"Negative binomial distribution with count n and probability of success p.","type":"standalone"},{"name":"NORMAL","optional":true,"description":"Normal (Gaussian) distribution with mean µ and standard deviation or variance or precision λ","type":"standalone"},{"name":"PARETO","optional":true,"description":"Pareto distribution with shape α and scale parameter b.","type":"standalone"},{"name":"POISSON","optional":true,"description":"Poisson distribution with mean λ","type":"standalone"},{"name":"SICHISQ","optional":true,"description":"Scaled inverse χ² distribution with v degrees of freedom and scale parameter s.","type":"standalone"},{"name":"T","optional":true,"description":"T distribution with mean µ, standard deviation or variance or precision λ, and v degrees of freedom.","type":"standalone"},{"name":"UNIFORM","optional":true,"description":"Uniform distribution with range a and b.","type":"standalone"},{"name":"WALD","optional":true,"description":"Wald distribution with mean µ and inverse-scale parameter λ.","type":"standalone"},{"name":"WEIBULL","optional":true,"description":"Weibull distribution with location (threshold) parameter µ, shape parameter c, and scale parameter σ.","type":"standalone"}]},{"name":"PUT","description":"The PUT statement writes text data to the current output file.","help":"PUT &lt;_PAGE_&gt; ","arguments":[{"name":"_PAGE_","optional":true,"description":"Outputs any pending line data and moves to the top of the next page.","type":"standalone"}]},{"name":"RANDOM","description":"The RANDOM statement defines a single random effect and its prior distribution or an array of random effects and their prior distribution. The random-effect must be represented by either a symbol or an array that appears in your SAS programming statements. The RANDOM statement must consist of a symbol for a random effect (or an array for multivariate random effects), a tilde (~), the distribution for the random effect, and then a SUBJECT= variable. With SAS/STAT 12.1, the RANDOM statement now supports multilevel hierarchical modeling to an arbitrary depth; a random effect can appear in the distributional hierarchy of other random effects.","help":"RANDOM &lt;beta(&lt;a=&gt;α, &lt;b=&gt;β)&gt; &lt;binary(&lt;prob|p=&gt;p)&gt; &lt;gamma(&lt;shape|sp=&gt;α, scale|s=λ) | gamma(&lt;shape|sp=&gt;α, isscale|is=λ)&gt; ...","arguments":[{"name":"ALGORITHM=","optional":true,"aliases":["ALG="],"description":"Specifies the algorithm to use to sample the posterior distribution.","help":"ALGORITHM=RWM | SLICE | GEO","type":"choice","arguments":[{"name":"RWM","description":"Uses the random-walk Metropolis algorithm with normal proposal.","type":"standalone"},{"name":"SLICE","description":"Uses the slice sampling algorithm.","type":"standalone"},{"name":"GEO","description":"Uses the discrete random-walk Metropolis with symmetric geometric proposal.","type":"standalone"}]},{"name":"BETA","optional":true,"description":"Beta distribution with shape parameters α and β.","type":"standalone"},{"name":"BINARY","optional":true,"description":"Binary (Bernoulli) distribution with probability of success p.","type":"standalone"},{"name":"GAMMA","optional":true,"description":"Gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"ICOND=","optional":true,"aliases":["ISTATES="],"description":"Specifies the initial conditions (or initial states) of the lag or lead variable of the random effect when the subject indices are out of the range of the subjects.","type":"value"},{"name":"IGAMMA","optional":true,"description":"Inverse gamma distribution with shape α and scale or inverse-scale parameter λ.","type":"standalone"},{"name":"INITIAL=","optional":true,"description":"Specifies the initial values of the random-effects parameters. By default, PROC MCMC uses the same option as specified in the INIT= option to generate initial values for the random-effects parameter: either it uses the mode of the prior density or it randomly draws a sample from that distribution.","type":"value"},{"name":"MONITOR=","optional":true,"description":"Outputs analysis for selected random-effects parameters. You can choose to monitor the random-effects parameters by listing the effect names or effect indices, or you can have them randomly selected by PROC MCMC. With the RANDOM keyword, PROC MCMC can randomly choose a subset of the parameters to monitor.","help":"MONITOR=RANDOM","type":"choice","arguments":[{"name":"RANDOM","type":"standalone"}]},{"name":"MVN","optional":true,"description":"Multivariate normal distribution with mean vector µ and covariance matrix Σ.","type":"standalone"},{"name":"MVNAR","optional":true,"description":"Multivariate normal distribution with mean vector µ and a covariance matrix ∑. The covariance matrix ∑ is a multiple of the scale and a matrix with a first-order autoregressive structure. When RHO=0, this distribution becomes a multivariate normal distribution with shared variance.","type":"standalone"},{"name":"NAMESUFFIX=","optional":true,"description":"Specifies how the names of the random-effects parameters are internally created. PROC MCMC creates the names by concatenating the random-effect symbol with an underscore and a series of numbers.","help":"NAMESUFFIX=SUBJECT | POSITION*value*","type":"value","arguments":[{"name":"SUBJECT","description":"Constructs the parameter names by appending the values of the SUBJECT= variable in the input data set.","type":"standalone"},{"name":"POSITION","description":"Constructs the parameter names by appending the numbers 1, 2, 3, and so on, where the number indicates the order in which the SUBJECT= variable appears in the data set.","type":"standalone"}]},{"name":"NOOUTPOST","optional":true,"description":"Suppresses the output of the posterior samples of random-effects parameters to the OUTPOST= data set. In models with a large number of random-effects parameters (for example, tens of thousands), PROC MCMC can run faster if it does not save the posterior samples of the random-effects parameters.","type":"standalone"},{"name":"NORMAL","optional":true,"description":"Normal (Gaussian) distribution with mean µ and standard deviation or variance or precision λ","type":"standalone"},{"name":"SUBJECT=","optional":true,"description":"Identifies the subjects in the random-effects model. The variable must be part of the input data set, and it can be either a numeric variable or character literal. The variable does not need to be sorted, and the input data set does not need to be clustered according to it. SUBJECT=_OBS_ enables you fit an observation-level random-effects model (each observation has its own random effect) without specifying a subject variable in the input data set.","type":"value"},{"name":"ZERO=","optional":true,"aliases":["CONSTRAINT(VALUE=value)="],"description":"Sets one of the random-effects parameters to a fixed value. The default is ZERO=NONE, which does not fix any of the parameters to be a constant. This option enables you to eliminate one of the parameters.","help":"ZERO=FIRST | LAST | NONE | '*formatted-value*'","type":"choice","arguments":[{"name":"FIRST","description":"The specification ZERO=FIRST sets the first random-effects parameter to 0.","type":"standalone"},{"name":"LAST","description":"The specification ZERO=LAST sets the last random-effects parameter to be 0.","type":"standalone"},{"name":"NONE","description":"The default is ZERO=NONE, which does not fix any of the parameters to be a constant.","type":"standalone"},{"name":"'formatted-value'","placeholder":true,"description":"The specification ZERO='formatted-value' sets the random-effects parameter for the category (in the SUBJECT= variable) with a formatted value that matches 'formatted-value' to 0.","type":"value"}]}]},{"name":"RETURN","description":"Stops executing statements at the current point in the DATA step and returns to a predetermined point in the step.","help":"RETURN"},{"name":"SELECT","description":"","help":""},{"name":"STOP","description":"The STOP statement halts the execution of all statements that contain it, including DO statements and other control or looping statements. Execution continues with the next top-level source statement.","help":"STOP "},{"name":"UDS","description":"UDS stands for user defined sampler. The UDS statement allows you to use a separate algorithm, other than the default random walk Metropolis, to update parameters in the model. The purpose of the UDS statement is to give you a greater amount of flexibility and better control over the updating schemes of the Markov chain. Multiple UDS statements are allowed. For the UDS statement to work properly, you have to do the following: o write a subroutine by using PROC FCMP. The subroutine must update some parameters in the model. These are the UDS parameters. The subroutine is called the UDS subroutine. o declare any UDS parameters in the PARMS statement with a sampling option, as in </ UDS> o specify the prior distributions for all UDS parameters, using the PRIOR statements. Note: All UDS parameters must appear in three places: the UDS statement, the PARMS statement, and the PRIOR statement. Otherwise, PROC MCMC exits.","help":"UDS subroutine-name ( subroutine-argument-list) "},{"name":"WHEN","description":"","help":"WHEN &lt;DO&gt; ","arguments":[{"name":"DO","optional":true,"description":"","type":"standalone"}]}],"supportSiteInformation":{"docsetId":"statug","docsetVersion":"latest","docsetTargetFile":"statug_mcmc_toc.htm"}}