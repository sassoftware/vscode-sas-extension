{"name":"MDC","statements":[{"name":"PROC MDC","description":"The MDC (multinomial discrete choice) procedure analyzes models in which the choice set consists of multiple alternatives. This procedure supports conditional logit, mixed logit, heteroscedastic extreme value, nested logit, and multinomial probit models. The MDC procedure uses the maximum likelihood (ML) or simulated maximum likelihood method for model estimation. The term multinomial logit is often used in the econometrics literature to refer to the conditional logit model of McFadden (1974). Here, the term conditional logit refers to McFadden’s conditional logit model, and the term multinomial logit refers to a model that differs slightly. Schmidt and Strauss (1975) and Theil (1969) are early applications of the multinomial logit model in the econometrics literature. The main difference between McFadden’s conditional logit model and the multinomial logit model is that the multinomial logit model makes the choice probabilities depend on the characteristics of the individuals only, whereas the conditional logit model considers the effects of choice attributes on choice probabilities as well.","help":"PROC MDC <COVOUT> <DATA=SAS-data-set> <OUTEST=SAS-data-set>;     \n\tBOUNDS bound1 <, bound2 ...> ;\n    \n\tBY variables ;\n    \n\tCLASS variables ;\n    \n\tID variable ;\n    \n\tMODEL <CHOICE=(variables) | CHOICE=(variable numbers)> <CONVERGE=number> <HALTONSTART=number> ...;\n    \n\tNEST <LEVEL(level-number )= ( choices@choice, ...)> ;\n    \n\tNLOPTIONS <ABSCONV= | ABSTOL=r> <ABSFCONV=r[n] | ABSFTOL=r[n> <ABSGCONV=r[n] | ABSGTOL=r[n> ...;\n    \n\tOUTPUT <OUT=SAS-data-set> <PRED=variable name> <XBETA=variable name> ...;\n    \n\tRESTRICT restriction1 < , restriction2 ...> ;\n    \n\tTEST <ALL> <LM> <WALD> ...;\n    \n\tUTILITY U(level < , choices> )= variables ;\n","arguments":[{"name":"COVOUT","optional":true,"description":"Writes the covariance matrix for the parameter estimates to the OUTEST= data set. This option is valid only if the OUTEST= option is specified.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Specifies the input SAS data set. If the DATA= option is not specified, PROC MDC uses the most recently created SAS data set.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"OUTEST=","optional":true,"description":"Names the SAS data set that the parameter estimates are written to.","help":"OUTEST=*SAS-data-set*","type":"dataSet"}]},{"name":"BOUNDS","description":"The BOUNDS statement imposes simple boundary constraints on the parameter estimates. BOUNDS statement constraints refer to the parameters estimated by the MDC procedure. You can specify any number of BOUNDS statements. Each bound is composed of parameters, constants, and inequality operators: item operator item < operator item < operator item ...> > Each item is a constant, parameter, or list of parameters. Parameters associated with a regressor variable are referred to by the name of the corresponding regressor variable. Each operator is ’<’, ’>’, ’≤’, or ’≥’.","help":"BOUNDS bound1 &lt;, bound2 ...&gt; "},{"name":"BY","description":"A BY statement can be used with PROC MDC to obtain separate analyses on observations in groups defined by the BY variables.","help":"BY variables "},{"name":"CLASS","description":"The CLASS statement names the classification variables to be used in the analysis. Classification variables can be either character or numeric.","help":"CLASS variables "},{"name":"ID","description":"The ID statement must be used with PROC MDC to specify the identification variable that controls multiple choice-specific cases. The MDC procedure requires only one ID statement even with multiple MODEL statements.","help":"ID variable "},{"name":"MODEL","description":"The MODEL statement specifies the dependent variable and independent regressor variables for the regression model. When the nested logit model is estimated, regressors in the UTILITY statement are used for estimation.","help":"MODEL &lt;CHOICE=(variables) | CHOICE=(variable numbers)&gt; &lt;CONVERGE=number&gt; &lt;HALTONSTART=number&gt; ...","arguments":[{"name":"ALL","optional":true,"followsDelimiter":"/","description":"Requests all printing options.","type":"standalone"},{"name":"CHOICE=","optional":true,"followsDelimiter":"/","description":"Specifies the variables that contain possible choices for each individual. Choice variables must have integer values. Multiple choice variables are allowed only for nested logit models. If all possible alternatives are written with the variable name, the MDC procedure checks all values of the choice variable. The CHOICE=(X 1 2 3) specification implies that the value of X should be 1, 2, or 3. On the other hand, the CHOICE=(X) specification considers all distinctive nonmissing values of X as elements of the choice set.","type":"value"},{"name":"CONVERGE=","optional":true,"followsDelimiter":"/","description":"Specifies the convergence criterion. The CONVERGE= option is the same as the ABSGCONV= option in the NLOPTIONS statement. The ABSGCONV= option in the NLOPTIONS statement overrides the CONVERGE= option. The default value is 1E–5.","help":"CONVERGE=*number*","type":"value"},{"name":"CORRB","optional":true,"followsDelimiter":"/","description":"Displays the estimated correlation matrix of the parameter estimates.","type":"standalone"},{"name":"COVB","optional":true,"followsDelimiter":"/","description":"Displays the estimated covariances of the parameter estimates.","type":"standalone"},{"name":"COVEST=","optional":true,"followsDelimiter":"/","description":"Specifies the type of covariance matrix.","help":"COVEST=OP | HESSIAN | QML","type":"choice","arguments":[{"name":"OP","followsDelimiter":"/","description":"Specifies the covariance from the outer product matrix.","type":"standalone"},{"name":"HESSIAN","followsDelimiter":"/","description":"Specifies the covariance from the Hessian matrix.","type":"standalone"},{"name":"QML","followsDelimiter":"/","description":"Specifies the covariance from the outer product and Hessian matrices.","type":"standalone"}]},{"name":"HALTONSTART=","optional":true,"followsDelimiter":"/","description":"Specifies the starting point of the Halton sequence. The specified number must be a positive integer. The default is HALTONSTART=11.","help":"HALTONSTART=*number*","type":"value"},{"name":"HEV=","optional":true,"followsDelimiter":"/","description":"Specifies options that are used to estimate the HEV model. The HEV model with a unit scale for the alternative 1 is estimated using the following SAS statement: model y = x1 x2 x3 / hev=(unitscale=1); The following options can be used in the HEV=() option. These options are listed within parentheses and separated by commas: INTORDER=number specifies the number of summation terms for Gaussian quadrature integration. The default is INTORDER=40. The maximum order is limited to 45. UNITSCALE=number-list specifies restrictions on scale parameters of stochastic utility components.","help":"HEV=INTORDER= | UNITSCALE= | INTEGRATE=","type":"choice","arguments":[{"name":"INTORDER=","type":"value"},{"name":"UNITSCALE=","type":"value"},{"name":"INTEGRATE=","type":"value"}]},{"name":"INITIAL=","optional":true,"followsDelimiter":"/","aliases":["START="],"description":"Specifies initial values for some or all of the parameter estimates. The values specified are assigned to model parameters in the same order in which the parameter estimates are displayed in the MDC procedure output.","type":"value"},{"name":"ITPPRINT","optional":true,"followsDelimiter":"/","description":"Displays the initial parameter estimates, convergence criteria, and constraints of the optimization.","type":"standalone"},{"name":"MAXITER=","optional":true,"followsDelimiter":"/","description":"Sets the maximum number of iterations allowed. The MAXITER= option overrides the MAXITER= option in the NLOPTIONS statement. The default is MAXITER=100.","help":"MAXITER=*number*","type":"value"},{"name":"MIXED=","optional":true,"followsDelimiter":"/","description":"Specifies options that are used for mixed logit estimation. The following options can be used in the MIXED=() option. The options are listed within parentheses and separated by commas: LOGNORMALPARM=variables specifies the variables whose random coefficients are lognormally distributed. NORMALEC=variables specifies the error component variables whose coefficients have a normal distribution NORMALPARM=variables specifies the variables whose random coefficients are normally distributed. UNIFORMEC=variables specifies the error component variables whose coefficients have a uniform distribution","help":"MIXED=LOGNORMALPARM= | NORMALEC= | NORMALPARM= | UNIFORMEC= | UNIFORMPARM=","type":"choice","arguments":[{"name":"LOGNORMALPARM=","type":"value"},{"name":"NORMALEC=","type":"value"},{"name":"NORMALPARM=","type":"value"},{"name":"UNIFORMEC=","type":"value"},{"name":"UNIFORMPARM=","type":"value"}]},{"name":"NCHOICE=","optional":true,"followsDelimiter":"/","description":"Specifies the number of choices for multinomial choice models when all individuals have the same choice set.","help":"NCHOICE=*number*","type":"value"},{"name":"NOPRINT","optional":true,"followsDelimiter":"/","description":"Suppresses all displayed output.","type":"standalone"},{"name":"NSIMUL=","optional":true,"followsDelimiter":"/","description":"Specifies the number of simulations when the mixed logit or multinomial probit model is estimated. The default is NSIMUL=100.","help":"NSIMUL=*number*","type":"value"},{"name":"OPTMETHOD=","optional":true,"followsDelimiter":"/","description":"Specifies the optimization technique when the estimation method uses nonlinear optimization.","help":"OPTMETHOD=QN | NR | TR","type":"choice","arguments":[{"name":"QN","followsDelimiter":"/","description":"Specifies the quasi-Newton method.","type":"standalone"},{"name":"NR","followsDelimiter":"/","description":"Specifies the Newton-Raphson method.","type":"standalone"},{"name":"TR","followsDelimiter":"/","description":"Specifies the trust region method.","type":"standalone"}]},{"name":"RANDINIT=","optional":true,"followsDelimiter":"/","description":"Specifies that initial parameter values be perturbed by uniform pseudo-random numbers for numerical optimization of the objective function. The default is U(-1,1).When the RANDINIT=r option is specified, U(-r,r) pseudo-random numbers are generated. The value r should be positive.","type":"value"},{"name":"RANDNUM=","optional":true,"followsDelimiter":"/","description":"Specifies the type of the random number generator used for simulation. RANDNUM=HALTON is the default.","help":"RANDNUM=PSEUDO | HALTON","type":"choice","arguments":[{"name":"PSEUDO","followsDelimiter":"/","description":"Specifies pseudo-random number generation.","type":"standalone"},{"name":"HALTON","followsDelimiter":"/","description":"Specifies Halton sequence generation.","type":"standalone"}]},{"name":"RANK","optional":true,"followsDelimiter":"/","description":"Specifies that the dependent variable contain ranks. The numbers must be positive integers starting from 1. When the dependent variable has value 1, the corresponding alternative is chosen. This option is provided only as a convenience to the user: the extra information contained in the ranks is not currently used for estimation purposes.","type":"standalone"},{"name":"RESTART=","optional":true,"followsDelimiter":"/","description":"Specifies options that are used for reiteration of the optimization problem. The following options can be used in the RESTART=() option. The options are listed within parentheses. ADDMAXIT=number specifies the maximum number of iterations for the second stage of the estimation. The default is ADDMAXIT=100. ADDRANDOM | ADDRANDOM=r specifies random added values to the estimates from the initial stage. With the ADDRANDOM option, U(-1,1) random numbers are created and added to the estimates obtained in the initial stage. When the ADDRANDOM=r option is specified, U(-r,r) random numbers are generated. The restart initial value is determined based on the given number of random searches (1000 for conditional or nested logit, and 500 for other models).","help":"RESTART=ADDMAXIT= | ADDRANDOM | ADDRANDOM= | ADDVALUE=","type":"choice","arguments":[{"name":"ADDMAXIT=","type":"value"},{"name":"ADDRANDOM","type":"standalone"},{"name":"ADDRANDOM=","type":"value"},{"name":"ADDVALUE=","type":"value"}]},{"name":"SAMESCALE","optional":true,"followsDelimiter":"/","description":"Specifies that the parameters of the inclusive values be the same within a group at each level when the nested logit is estimated.","type":"standalone"},{"name":"SEED=","optional":true,"followsDelimiter":"/","description":"Specifies an initial seed for pseudo-random number generation. The SEED= value must are less than 2³¹-1. If the SEED= value is negative or zero, the time of day from the computer’s clock is used to obtain the initial seed. The default is SEED=0.","help":"SEED=*number*","type":"value"},{"name":"SPSCALE","optional":true,"followsDelimiter":"/","description":"Specifies that the parameters of the inclusive values be the same for any choice with only one nested choice within a group, for each level in a nested logit model. This option is useful in analyzing stated preference data.","type":"standalone"},{"name":"TYPE=","optional":true,"followsDelimiter":"/","description":"Specifies the type of model to be analyzed.","help":"TYPE=CONDITIONLOGIT|CLOGIT|CL | HEV | MIXEDLOGIT|MXL | MULTINOMPROBIT|MPROBIT|MP | NESTEDLOGIT|NLOGIT|NL","type":"choice","arguments":[{"name":"CONDITIONLOGIT","followsDelimiter":"/","description":"Specifies a conditional logit model.","help":"CONDITIONLOGIT|CLOGIT|CL","type":"choice"},{"name":"HEV","followsDelimiter":"/","description":"Specifies a heteroscedastic extreme-value model.","type":"standalone"},{"name":"MIXEDLOGIT","followsDelimiter":"/","description":"Specifies a mixed logit model.","help":"MIXEDLOGIT|MXL","type":"choice"},{"name":"MULTINOMPROBIT","followsDelimiter":"/","description":"Specifies a multinomial probit model.","help":"MULTINOMPROBIT|MPROBIT|MP","type":"choice"},{"name":"NESTEDLOGIT","followsDelimiter":"/","description":"Specifies a nested logit model.","help":"NESTEDLOGIT|NLOGIT|NL","type":"choice"}]},{"name":"UNITVARIANCE=","optional":true,"followsDelimiter":"/","description":"Specifies normalization restrictions on error variances of multinomial probit for the choices whose numbers are given in the list.","type":"value"}]},{"name":"NEST","description":"The NEST statement is used when one choice variable contains all possible alternatives and the TYPE=NLOGIT option is specified. The decision tree is constructed based on the NEST statement. When the choice set is specified using multiple CHOICE= variables in the MODEL statement, the NEST statement is ignored.","help":"NEST &lt;LEVEL(level-number )= ( choices@choice, ...)&gt; ","arguments":[{"name":"LEVEL=","optional":true,"description":"Used to specify the tree structure to be built. For example: nest level(1) = (1 2 3 @ 1, 4 5 6 @ 2, 7 8 @ 3), level(2) = (3 @ 2, 1 2 @ 1), level(3) = (1 2 @ 1);","type":"value"}]},{"name":"NLOPTIONS","description":"PROC MDC uses the nonlinear optimization (NLO) subsystem to perform nonlinear optimization tasks. The NLOPTIONS statement specifies nonlinear optimization options. The NLOPTIONS statement must follow the MODEL statement.","help":"NLOPTIONS &lt;ABSCONV= | ABSTOL=r&gt; &lt;ABSFCONV=r[n] | ABSFTOL=r[n&gt; &lt;ABSGCONV=r[n] | ABSGTOL=r[n&gt; ...","arguments":[{"name":"ABSCONV=","optional":true,"aliases":["ABSTOL="],"description":"Specifies an absolute function convergence criterion. The default value of r is the negative square root of the largest double-precision value, which serves only as a protection against overflows.","type":"value"},{"name":"ABSFCONV=","optional":true,"aliases":["ABSFTOL="],"description":"Specifies an absolute function convergence criterion. The default value is r=0. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can be terminated.","type":"value"},{"name":"ABSGCONV=","optional":true,"aliases":["ABSGTOL="],"description":"Specifies an absolute gradient convergence criterion. The default value is r=1E-5. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can be terminated.","type":"value"},{"name":"ABSXCONV=","optional":true,"aliases":["ABSXTOL="],"description":"Specifies the absolute parameter convergence criterion. The default is r=1E-8 for the NMSIMP technique and r=0 otherwise. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can terminate.","type":"value"},{"name":"DAMPSTEP=","optional":true,"description":"Specifies that the initial step length value a⁰ for each line search (used by the QUANEW, HYQUAN, CONGRA, or NEWRAP technique) cannot be larger than r times the step length value used in the former iteration. If the DAMPSTEP option is specified but r is not specified, the default is r=2. The DAMPSTEP=r option can prevent the line-search algorithm from repeatedly stepping into regions where some objective functions are difficult to compute or where they could lead to floating point overflows during the computation of objective functions and their derivatives. The DAMPSTEP=r option can save time-costly function calls during the line searches of objective functions that result in very small steps.","type":"value"},{"name":"FCONV2=","optional":true,"aliases":["FTOL2="],"description":"Specifies another function convergence criterion.","type":"value"},{"name":"FCONV=","optional":true,"aliases":["FTOL="],"description":"Specifies a relative function convergence criterion.","type":"value"},{"name":"FSIZE=","optional":true,"description":"Specifies the FSIZE parameter of the relative function and relative gradient termination criteria. The default value is r=0.","help":"FSIZE=*r*","type":"value"},{"name":"GCONV=","optional":true,"aliases":["GTOL="],"description":"Specifies a relative gradient convergence criterion. The default value is r=1E-8. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can terminate.","type":"value"},{"name":"HESCAL=","optional":true,"aliases":["HS="],"description":"Specifies the scaling version of the Hessian matrix used in NRRIDG, TRUREG, NEWRAP, or DBLDOG optimization.","help":"HESCAL=0 | 1 | 2 | 3","type":"choice","arguments":[{"name":"0","description":"Specifies that no scaling is done.","type":"standalone"},{"name":"1","description":"Specifies the Moré (1978) scaling update","type":"standalone"},{"name":"2","description":"Specifies the Dennis, Gay, and Welsch (1981) scaling update","type":"standalone"},{"name":"3","description":"Specifies that di is reset in each iteration","type":"standalone"}]},{"name":"INHESSIAN=","optional":true,"aliases":["INHESS="],"description":"Specifies how the initial estimate of the approximate Hessian is defined for the quasi-Newton techniques QUANEW and DBLDOG.","type":"value"},{"name":"INSTEP=","optional":true,"description":"Reduces the length of the first trial step during the line search of the first iterations.","help":"INSTEP=*r*","type":"value"},{"name":"LINESEARCH=","optional":true,"aliases":["LIS="],"description":"Specifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques.","help":"LINESEARCH=1 | 2 | 3 | 4 | 5 | 6 | 7 | 8","type":"choice","arguments":[{"name":"1","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is similar to one used by the Harwell subroutine library.","type":"standalone"},{"name":"2","description":"Specifies a line-search method that needs more function calls than gradient calls for quadratic and cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"3","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"4","description":"Specifies a line-search method that needs the same number of function and gradient calls for stepwise extrapolation and cubic interpolation","type":"standalone"},{"name":"5","description":"Specifies a line-search method that is a modified version of LIS=4.","type":"standalone"},{"name":"6","description":"Specifies golden section line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"7","description":"Specifies bisection line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"8","description":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for linear approximation.","type":"standalone"}]},{"name":"LSPRECISION=","optional":true,"aliases":["LSP="],"description":"Specifies the degree of accuracy that should be obtained by the line-search algorithms LIS=2 and LIS=3. The default LSPRECISION= values are:","type":"value"},{"name":"MAXFUNC=","optional":true,"aliases":["MAXFU="],"description":"Requires the number of function calls to be no larger than i. The default values are:","type":"value"},{"name":"MAXITER=","optional":true,"aliases":["MAXIT="],"description":"Requires the number of iterations to be no larger than i. The default values are: o For TECH= TRUREG, NRRIDG, NEWRAP: i=50 o For TECH= QUANEW, DBLDOG: i=200 o For TECH= CONGRA: i=400 o For TECH= NMSIMP: i=1000 These default values are also valid when i is specified as a missing value.","type":"value"},{"name":"MAXSTEP=","optional":true,"description":"Specifies an upper bound for the step length of the line-search algorithms during the first n iterations.","help":"MAXSTEP=*r[n*","type":"value"},{"name":"MAXTIME=","optional":true,"description":"Requires the CPU time to be no larger than r. The default value of the MAXTIME= option is the largest double floating-point number on your computer. Note that the time specified by the MAXTIME= option is checked only once at the end of each iteration. Therefore, the actual running time can be much longer than that specified by the MAXTIME= option. The actual running time includes the rest of the time needed to finish the iteration and the time needed to generate the output of the results.","help":"MAXTIME=*r*","type":"value"},{"name":"MINITER=","optional":true,"aliases":["MINIT="],"description":"Specifies the minimum number of iterations. The default value is 0. If you request more iterations than are actually needed for convergence to a stationary point, the optimization algorithms can behave strangely. For example, the effect of rounding errors can prevent the algorithm from continuing for the required number of iterations.","type":"value"},{"name":"NOPRINT","optional":true,"description":"Suppresses the output.","type":"standalone"},{"name":"PALL","optional":true,"description":"[Displays all optional output for optimization.","type":"standalone"},{"name":"PHISTORY","optional":true,"description":"Displays the optimization history.","type":"standalone"},{"name":"PHISTPARMS","optional":true,"description":"Display parameter estimates in each iteration.","type":"standalone"},{"name":"PINIT","optional":true,"description":"Displays the initial values and derivatives (if available).","type":"standalone"},{"name":"PSHORT","optional":true,"description":"Restricts the amount of default output.","type":"standalone"},{"name":"PSUMMARY","optional":true,"description":"Restricts the amount of default displayed output to a short form of iteration history and notes, warnings, and errors.","type":"standalone"},{"name":"RESTART=","optional":true,"aliases":["REST="],"description":"Specifies that the QUANEW or CONGRA algorithm is restarted with a steepest descent/ascent search direction after, at most, i iterations, i > 0.","type":"value"},{"name":"SOCKET=","optional":true,"description":"Specifies the fileref that contains the information needed for remote monitoring.","type":"value"},{"name":"TECHNIQUE=","optional":true,"aliases":["TECH="],"description":"Specifies the optimization technique.","help":"TECHNIQUE=CONGRA | DBLDOG | NMSIMP | NEWRAP | NRRIDG | QUANEW | TRUREG | NONE","type":"choice","arguments":[{"name":"CONGRA","description":"Chooses one of four different conjugate-gradient optimization algorithms, which can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"DBLDOG","description":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation of the Cholesky factor of the Hessian.","type":"standalone"},{"name":"NMSIMP","description":"Performs a Nelder-Mead simplex optimization.","type":"standalone"},{"name":"NEWRAP","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. The algorithm combines a line-search algorithm with ridging, and it can be modified with the LINESEARCH= option.","type":"standalone"},{"name":"NRRIDG","description":"Performs a usually stable but, for large problems, memory- and time-consuming Newton-Raphson optimization technique. This algorithm does not perform a line search.","type":"standalone"},{"name":"QUANEW","description":"Chooses one of four different quasi-Newton optimization algorithms that can be more precisely defined with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"TRUREG","description":"Performs a usually very stable but, for large problems, memory- and time-consuming trust-region optimization technique. The algorithm is implemented similar to Gay (1983) and Moré and Sorensen (1983).","type":"standalone"},{"name":"NONE","description":"Does not perform any optimization. This option is similar to METHOD=NONE, but TECH=NONE also computes and displays residuals and goodness of fit statistics.","type":"standalone"}]},{"name":"UPDATE=","optional":true,"aliases":["UPD="],"description":"Specifies the update method for the quasi-Newton, double-dogleg, or conjugate-gradient optimization technique.","help":"UPDATE=BFGS | DBFGS | DDFP | DFP | PB | FR | PR | CD","type":"choice","arguments":[{"name":"BFGS","description":"Performs the original Broyden, Fletcher, Goldfarb, and Shanno (BFGS) update of the inverse Hessian matrix.","type":"standalone"},{"name":"DBFGS","description":"Performs the dual BFGS update of the Cholesky factor of the Hessian matrix. This is the default update method.","type":"standalone"},{"name":"DDFP","description":"Performs the dual Davidon, Fletcher, and Powell (DFP) update of the Cholesky factor of the Hessian matrix.","type":"standalone"},{"name":"DFP","description":"Performs the original DFP update of the inverse Hessian matrix.","type":"standalone"},{"name":"PB","description":"Performs the automatic restart update method of Powell (1977) and Beale (1972).","type":"standalone"},{"name":"FR","description":"Performs the Fletcher-Reeves update (Fletcher 1987).","type":"standalone"},{"name":"PR","description":"Performs the Polak-Ribiere update (Fletcher 1987).","type":"standalone"},{"name":"CD","description":"Performs a conjugate-descent update of Fletcher (1987).","type":"standalone"}]},{"name":"XCONV=","optional":true,"aliases":["XTOL="],"description":"Specifies the relative parameter convergence criterion. For all techniques except NMSIMP, termination requires a small relative parameter change in subsequent iterations. The default value is r=1E-8 for the NMSIMP technique and r=0 otherwise. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can be terminated.","type":"value"},{"name":"XSIZE=","optional":true,"description":"Specifies the XSIZE parameter of the relative parameter termination criterion. The default value is r=0.","type":"value"}]},{"name":"OUTPUT","description":"The MDC procedure supports the OUTPUT statement. The OUTPUT statement creates a new SAS data set that contains all the variables in the input data set and, optionally, the estimated linear predictors (XBETA) and predicted probabilities (P). The input data set must be sorted by the choice variable(s) within each ID.","help":"OUTPUT &lt;OUT=SAS-data-set&gt; &lt;PRED=variable name&gt; &lt;XBETA=variable name&gt; ...","arguments":[{"name":"OUT=","optional":true,"description":"Specifies the name of the output data set.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"PRED=","optional":true,"aliases":["P="],"description":"Requests the predicted probabilities by naming the variable that contains the predicted probabilities in the output data set.","type":"value"},{"name":"XBETA=","optional":true,"description":"Names the variable that contains the linear predictor (x'β) values. However, the XBETA= option is not supported in the nested logit model.","type":"value"}]},{"name":"RESTRICT","description":"The RESTRICT statement is used to impose linear restrictions on the parameter estimates. You can specify any number of RESTRICT statements. Each restriction is written as an expression, followed by an equality operator (=) or an inequality operator (<, >, ≤, ≥ ), followed by a second expression: expression operator expression The operator can be =, <, >, ≤, or ≥ . Restriction expressions can be composed of parameters; multiplication (*), summation (+), and substraction (-) operators; and constants. Parameters named in restriction expressions must be among the parameters estimated by the model. Parameters associated with a regressor variable are referred to by the name of the corresponding regressor variable. The restriction expressions must be a linear function of the parameters.","help":"RESTRICT restriction1 &lt; , restriction2 ...&gt; "},{"name":"TEST","description":"The TEST statement performs Wald, Lagrange multiplier, and likelihood ratio tests of linear hypotheses about the regression parameters in the preceding MODEL statement. Each equation specifies a linear hypothesis to be tested. All hypotheses in one TEST statement are tested jointly. Variable names in the equations must correspond to regressors in the preceding MODEL statement, and each name represents the coefficient of the corresponding regressor. The keyword INTERCEPT refers to the coefficient of the intercept.","help":"TEST &lt;ALL&gt; &lt;LM&gt; &lt;WALD&gt; ...","arguments":[{"name":"ALL","optional":true,"followsDelimiter":"/","description":"Requests Wald, Lagrange multiplier, and likelihood ratio tests.","type":"standalone"},{"name":"LM","optional":true,"followsDelimiter":"/","description":"Requests the Lagrange multiplier test.","type":"standalone"},{"name":"LR","optional":true,"followsDelimiter":"/","description":"Requests the likelihood ratio test.","type":"standalone"},{"name":"WALD","optional":true,"followsDelimiter":"/","description":"Requests the Wald test.","type":"standalone"}]},{"name":"UTILITY","description":"The UTILITY statement can be used in estimating a nested logit model. The U()= option can have two arguments. The first argument contains level information, while the second argument is related to choice information. The second argument can be omitted for the first level when all the choices at the first level share the same variables and the same parameters. However, for any level above the first, the second argument must be provided. The UTILITY statement specifies a utility function while the NEST statement constructs the decision tree.","help":"UTILITY U(level &lt; , choices&gt; )= variables "}],"supportSiteInformation":{"docsetId":"etsug","docsetVersion":"latest","docsetTargetFile":"etsug_mdc_toc.htm"}}