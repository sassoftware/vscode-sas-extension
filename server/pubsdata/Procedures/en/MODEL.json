{"name":"MODEL","statements":[{"name":"PROC MODEL","description":"The MODEL procedure analyzes models in which the relationships among the variables comprise a system of one or more nonlinear equations. Primary uses of the MODEL procedure are estimation, simulation, and forecasting of nonlinear simultaneous equation models. † PROC MODEL features include the following: o SAS programming statements to define simultaneous systems of nonlinear equations o tools to analyze the structure of the simultaneous equation system o ARIMA, PDL, and other dynamic modeling capabilities o tools to specify and estimate the error covariance structure o tools to estimate and solve ordinary differential equations o the following methods for parameter estimation: – ordinary least squares (OLS) – two-stage least squares (2SLS) – seemingly unrelated regression (SUR) and iterative SUR (ITSUR) – three-stage least squares (3SLS) and iterative 3SLS (IT3SLS) – generalized method of moments (GMM) – simulated method of moments (SMM) – full information maximum likelihood (FIML) – general log-likelihood maximization o simulation and forecasting capabilities o Monte Carlo simulation o goal-seeking solutions","help":"PROC MODEL <BLOCK> <DATA=SAS-data-set> <DETAILS> <FLOW> <GRAPH> <LIST> <LISTALL> <LISTCODE> <LISTDEP> <LISTDER> <MAXERRORS=n> <MEMORYUSE> <MODEL=model-name | (model-list)> <NDEC=n> <NOPRINT> <NOSTORE> <OUTMODEL=model-name> <OUTPARMS=SAS-data-set> <PARMSDATA=SAS-data-set> <PLOTS=ALL | ACF | IACF... > <PRINTALL> <TRACE> <XREF>;     \n\tABORT <ABEND> <CANCEL> <CANCEL FILE> ...;     \n\tARRAY <_ALL_> <_NUMERIC_> <_TEMPORARY_> ...; \n   \n\tATTRIB <FORMAT=format> <INFORMAT=informat> <LABEL='label'> ...; \n   \n\tBOUNDS bound1 <, bound2 ...> ; \n   \n\tBY variables ;     \n\tCALL name ( argument-1 [, ...argument-n] );     \n\tCONTROL variable < value > ... ;     \n\tDELETE; \n   \n\tDEPENDENT variable < initial-values > ... ; \n   \n\tDO <OVER> <> <> ...; \n   \n\tDROP variable ... ;     \n\tELSE <DO> <IF> <THEN> ...; \n   \n\tEND;     \n\tENDOGENOUS variable < initial-values > ... ;     \n\tERRORMODEL <CAUCHY( <location, scale> )> <CHISQUARED ( df <, nc> )> <GENERAL(Likelihood <, parm1, parm2,...parmn > )> ...;     \n\tESTIMATE <COVB> <OUTCOV> <OUTEST=> ...; \n   \n\tEXOGENOUS variable < initial-values > ... ; \n   \n\tFIT DROP= ( parameters ...) INITIAL= ( variable = < parameter | constant > ...) PARMS= ( parameters [values] ...) ...;     \n\tGOTO label;     \n\tID variables ;     \n\tIF <DO> <THEN> <WHEN> ...; \n   \n\tINCLUDE model-names ... ;     \n\tINDEPENDENT variable < initial-values > ... ;     \n\tINSTRUMENTS EXCLUDE=(parameters) <NOINTERCEPT> _EXOG_ ...; \n   \n\tKEEP variable-list ;     \n\t; \n   \n\tLENGTH <DEFAULT=n> ; \n   \n\tLINK statement-label;     \n\tMOMENT variables = moment specification ;     \n\tNUMBER <INIT expression> ;     \n\t; \n   \n\tOUTVARS variables ;     \n\tPARAMETERS variable <value> <variable <value>> ... ; \n   \n\tPUT <_PAGE_> ;  \n  \n\tRANGE <RANGE variable < = first > < TO last > > ;     \n\tRENAME old-name-1=new-name-1 ... <old-name-n=new-name-n>;     \n\tRESET <DATA=SAS-data-set> <OUTPARMS=SAS-data-set> <PURGE> ...; \n   \n\tRESTRICT restriction1 < , restriction2 ...> ;     \n\tRETAIN variable-list1 value1 < variable-list2 value2 ...> ;     \n\tRETURN; \n   \n\t;     \n\tSOLVE SATISFY=equation | SATISFY=( equations ) ;     \n\tSTOP ; \n   \n\tTEST <LM> <LR> <WALD> ...; \n   \n\tVAR variables <initial-values> ... ; \n   \n\tWEIGHT variable ;     \n\tWHEN <DO> ; ","arguments":[{"name":"BLOCK","optional":true,"description":"Prints an analysis of the structure of the model given by the assignments to model variables appearing in the model program. This analysis includes a classification of model variables into endogenous (dependent) and exogenous (independent) groups based on the presence of the variable on the left-hand side of an assignment statement. The endogenous variables are grouped into simultaneously determined blocks. The dependency structure of the simultaneous blocks and exogenous variables is also printed. The BLOCK option cannot analyze dependencies implied by general form equations.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Names the input data set. Variables in the model program are looked up in the DATA= data set and, if found, their attributes (type, length, label, format) are set to be the same as those in the input data set (if not previously defined otherwise). The values for the variables in the program are read from the input data set when the model is estimated or simulated by FIT and SOLVE statements.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DETAILS","optional":true,"description":"Specifies the detailed printout. Parts of the printed output are expanded when the DETAILS option is specified. If ODS GRAPHICS ON is specified, the following additional graphs of the residuals are produced: ACF, PACF, IACF, white noise, and QQ plot versus the normal.","type":"standalone"},{"name":"FLOW","optional":true,"description":"Prints a message for each statement in the model program as it is executed. This debugging option is needed very rarely and produces voluminous output.","type":"standalone"},{"name":"GRAPH","optional":true,"description":"Prints the graph of the dependency structure of the model. The GRAPH option also invokes the BLOCK option and produces a graphical display of the information listed by the BLOCK option.","type":"standalone"},{"name":"LIST","optional":true,"description":"Prints the model program and variable lists, including the statements added by PROC MODEL and macros.","type":"standalone"},{"name":"LISTALL","optional":true,"description":"Selects the LIST, LISTDEP, LISTDER, and LISTCODE options.","type":"standalone"},{"name":"LISTCODE","optional":true,"description":"Prints the derivative tables and compiled model program code. LISTCODE is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTDEP","optional":true,"description":"Prints a report that lists for each variable in the model program the variables that depend on it and that it depends on. These lists are given separately for current-period values and for lagged values of the variables.","type":"standalone"},{"name":"LISTDER","optional":true,"description":"Prints a table of derivatives for FIT and SOLVE tasks. (The LISTDER option is applicable only for the default NEWTON method for SOLVE tasks.) The derivatives table shows each nonzero derivative computed for the problem. The derivative listed can be a constant, a variable in the model program, or a special derivative variable created to hold the result of the derivative expression. This option is turned on by the LISTCODE and PRINTALL options.","type":"standalone"},{"name":"MAXERRORS=","optional":true,"description":"Specifies the maximum number of execution errors that can be printed. The default is MAXERRORS=50.","help":"MAXERRORS=*n*","type":"value"},{"name":"MEMORYUSE","optional":true,"description":"Prints a report of the memory required for the various parts of the analysis.","type":"standalone"},{"name":"MODEL=","optional":true,"description":"Reads the model from one or more input model files created by previous PROC MODEL executions. Model files are written by the OUTMODEL= option.","type":"value"},{"name":"NDEC=","optional":true,"description":"Specifies the precision of the format that PROC MODEL uses when printing various numbers. The default is NDEC=3, which means that PROC MODEL attempts to print values by using the D format but ensures that at least three significant digits are shown. If the NDEC= value is greater than nine, the BEST. format is used. The smallest value allowed is NDEC=2.","help":"NDEC=*n*","type":"value"},{"name":"NOPRINT","optional":true,"description":"Suppresses the normal printed output but does not suppress error listings. Using any other print option turns the NOPRINT option off. The PRINT option can be used with the RESET statement to turn off NOPRINT.","type":"standalone"},{"name":"NOSTORE","optional":true,"description":"Suppresses the default output of the model file. This option is applicable only when FIT or SOLVE statements are not used, the MODEL= option is not used, and when a model is specified.","type":"standalone"},{"name":"OUTMODEL=","optional":true,"description":"Specifies the name of an output model file to which the model is to be written. Starting with SAS 9.2, model files are being stored as XML-based SAS data sets instead of being stored as members of a SAS catalog as in earlier releases. This makes MODEL files more readily extendable in the future and enables Java-based applications to read the MODEL files directly. To change this behavior, use the SAS global-CMPMODEL-options. You can choose the format in which the output model file is stored and read by using the CMPMODEL=global-CMPMODEL-options in an PTIONS statement as follows.","help":"OUTMODEL=*model-name*","type":"value"},{"name":"OUTPARMS=","optional":true,"description":"Writes the parameter estimates to a SAS data set.","help":"OUTPARMS=*SAS-data-set*","type":"dataSet"},{"name":"PARMSDATA=","optional":true,"description":"Names the SAS data set that contains the parameter estimates. In PROC MODEL, you have several options to specify starting values for the parameters to be estimated. When more than one option is specified, the options are implemented in the following order of precedence (from highest to lowest): the START= option, the PARMS statement initialization value, the ESTDATA= option, and the PARMSDATA= option. If no options are specified for the starting value, the default value of 0.0001 is used.","help":"PARMSDATA=*SAS-data-set*","type":"dataSet"},{"name":"PLOTS=","optional":true,"description":"Requests that the MODEL procedure produce statistical graphics via the Output Delivery System, provided that the ODS GRAPHICS statement has been specified. The global-plot-options apply to all relevant plots generated by the MODEL procedure. The global-plot-options supported by the MODEL procedure follow. ONLY suppresses the default plots. Only the plots specifically requested are produced.","help":"PLOTS=ALL | ACF | IACF | PACF | FITPLOT | COOKSD | QQ | RESIDUAL|RES | STUDENTRESIDUAL | RESIDUALHISTOGRAM |RESIDHISTOGRAM | NONE","type":"choice","arguments":[{"name":"ALL","description":"Requests that all plots appropriate for the particular analysis be produced.","type":"standalone"},{"name":"ACF","description":"Produces the autocorrelation function plot.","type":"standalone"},{"name":"IACF","description":"Produces the inverse autocorrelation function plot of residuals.","type":"standalone"},{"name":"PACF","description":"Produces the partial autocorrelation function plot of residuals.","type":"standalone"},{"name":"FITPLOT","description":"Plots the predicted and actual values.","type":"standalone"},{"name":"COOKSD","description":"Produces the Cook’s D plot.","type":"standalone"},{"name":"QQ","description":"Produces a QQ plot of residuals.","type":"standalone"},{"name":"RESIDUAL","description":"Plots the residuals.","help":"RESIDUAL|RES","type":"choice"},{"name":"STUDENTRESIDUAL","description":"Plots the studentized residuals.","type":"standalone"},{"name":"RESIDUALHISTOGRAM","description":"Plots the histogram of residuals.","help":"RESIDUALHISTOGRAM |RESIDHISTOGRAM","type":"choice"},{"name":"NONE","description":"Suppresses all plots.","type":"standalone"}]},{"name":"PRINTALL","optional":true,"description":"Turns on all the printing-control options. The options set by PRINTALL are DETAILS; the model information options LIST, LISTDEP, LISTDER, XREF, BLOCK, and GRAPH; the FIT task printing options FSRSQ, COVB, CORRB, COVS, CORRS, DW, and COLLIN; and the SOLVE task printing options STATS, THEIL, SOLVEPRINT, and ITPRINT.","type":"standalone"},{"name":"TRACE","optional":true,"description":"Prints the result of each operation in each statement in the model program as it is executed, in addition to the information printed by the FLOW option. This debugging option is needed very rarely and produces voluminous output.","type":"standalone"},{"name":"XREF","optional":true,"description":"Prints a cross-reference of the variables in the model program that shows where each variable was referenced or given a value. The XREF option is normally used in conjunction with the LIST option.","type":"standalone"}]},{"name":"ABORT","description":"Stops executing the current DATA step, SAS job, or SAS session.","help":"ABORT &lt;ABEND&gt; &lt;CANCEL&gt; &lt;CANCEL FILE&gt; ...","arguments":[{"name":"ABEND","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the ABEND option of the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment; further action is based on how your operating environment and your site treat jobs that end abnormally. o windowing environment and interactive line mode","type":"standalone"},{"name":"CANCEL","optional":true,"description":"Causes the cancellation of the current submitted statements. The results depend on the method of operation: o batch mode and noninteractive mode o The entire SAS program and SAS system are terminated. o The error message is written to the SAS log. o windowing environment and interactive line mode o It only clears the current submitted program. o Other subsequent submitted programs are not affected. o The error message is written to the SAS log. o workspace server and stored process server o It only clears currently submitted program. o Other subsequent submit calls are not affected. o The error message is written to the SAS log. o SAS IntrNet application server","type":"standalone"},{"name":"CANCEL FILE","optional":true,"description":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. Other submitted source statements will be executed after the autoexec or %INCLUDE file.","type":"standalone"},{"name":"NOLIST","optional":true,"description":"suppresses the output of all variables to the SAS log.","type":"standalone"},{"name":"RETURN","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the RETURN option in the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment with a condition code indicating an error. o windowing environment and interactive line mode","type":"standalone"}]},{"name":"ARRAY","description":"Defines the elements of an array.","help":"ARRAY &lt;_ALL_&gt; &lt;_NUMERIC_&gt; &lt;_TEMPORARY_&gt; ...","arguments":[{"name":"_ALL_","optional":true,"description":"Specifies all variables.","type":"standalone"},{"name":"_CHARACTER_","optional":true,"description":"Specifies all character variables.","type":"standalone"},{"name":"_NUMERIC_","optional":true,"description":"Specifies all numeric variables.","type":"standalone"},{"name":"_TEMPORARY_","optional":true,"description":"Creates a list of temporary data elements.","type":"standalone"}]},{"name":"ATTRIB","description":"Associates a format, informat, label, and length with one or more variables.","help":"ATTRIB &lt;FORMAT=format&gt; &lt;INFORMAT=informat&gt; &lt;LABEL='label'&gt; ...","arguments":[{"name":"FORMAT=","optional":true,"description":"Associates a format with variables in a variable-list.","help":"FORMAT=*format*","type":"value"},{"name":"INFORMAT=","optional":true,"description":"Associates an informat with variables in a variable-list.","help":"INFORMAT=*informat*","type":"value"},{"name":"LABEL=","optional":true,"description":"Associates a label with variables in a variable-list.","help":"LABEL='*label*'","type":"value"},{"name":"LENGTH=","optional":true,"description":"Specifies the length of variables in a variable-list.","type":"value"},{"name":"TRANSCODE=","optional":true,"description":"Specifies whether character variables can be transcoded.","type":"value"}]},{"name":"BOUNDS","description":"The BOUNDS statement imposes simple boundary constraints on the parameter estimates. BOUNDS statement constraints refer to the parameters estimated by the associated FIT statement (that is, to either the preceding FIT statement or, in the absence of a preceding FIT statement, to the following FIT statement). You can specify any number of BOUNDS statements. Each bound is composed of parameters and constants and inequality operators: item operator item < operator item < operator item ...> > Each item is a constant, the name of an estimated parameter, or a list of parameter names. Each operator is <, >, <=, or >=. You can use both the BOUNDS statement and the RESTRICT statement to impose boundary constraints; however, the BOUNDS statement provides a simpler syntax for specifying these kinds of constraints.","help":"BOUNDS bound1 &lt;, bound2 ...&gt; "},{"name":"BY","description":"A BY statement is used with the FIT statement to obtain separate estimates for observations in groups defined by the BY variables. Note that if an output model file is written, using the OUTMODEL= option, the parameter values stored are those from the last BY group processed. To save parameter estimates for each BY group, use the OUTEST= option in the FIT statement. A BY statement is used with the SOLVE statement to obtain solutions for observations in groups defined by the BY variables. If the BY variables are identical in the DATA= data set and the ESTDATA= data set, then the two data sets are synchronized and the calculations are performed by using the data and parameters for each BY group. This holds for BY variables in the SDATA= data set as well. If the BY variables do not match, BY group processing is abandoned in either the ESTDATA= data set or the SDATA= data set, whichever has the missing BY value. If the DATA= data set does not contain BY variables and the ESTDATA= data set or the SDATA= data set does, then BY processing is performed for the ESTDATA= data set and the SDATA= data set by reusing the data in the DATA= data set for each BY group.","help":"BY variables "},{"name":"CALL","description":"The CALL statement invokes the named library subroutine. The values that are determined for each argument expression are passed to the subroutine when the subroutine is invoked. The subroutine can update the values of PROC OPTMODEL parameters and variables when an argument is an identifier-expression.","help":"CALL name ( argument-1 [, ...argument-n] )"},{"name":"CONTROL","description":"The CONTROL statement declares control variables and specifies their values. A control variable is like a parameter except that it has a fixed value and is not estimated from the data. You can use control variables for constants in model equations that you might want to change in different solution cases. You can use control variables to vary the program logic. Unlike the retained variables, these values are fixed across iterations.","help":"CONTROL variable &lt; value &gt; ... "},{"name":"DELETE","description":"Stops processing the current observation.","help":"DELETE"},{"name":"DEPENDENT","description":"The DEPENDENT statement is equivalent to the ENDOGENOUS statement and is provided for the convenience of non-econometric practitioners. The ENDOGENOUS statement optionally provides initial values for lagged dependent variables.","help":"DEPENDENT variable &lt; initial-values &gt; ... "},{"name":"DO","description":"","help":"DO &lt;OVER&gt; &lt;&gt; &lt;&gt; ...","arguments":[{"name":"BY","optional":true,"description":"Precedes an increment integer (other than 0) or an expression that generates an integer to be added to the value of the index variable in each iteration of the DO loop.","type":"standalone"},{"name":"OVER","optional":true,"description":"","type":"standalone"},{"name":"TO","optional":true,"description":"Separates the start and stop integers or expressions that control the number of times the portion of the DATA step between the iterative DO and END statements is processed.","type":"standalone"},{"name":"UNTIL","optional":true,"description":"...more SAS statements... END","type":"standalone"},{"name":"WHILE","optional":true,"description":"","type":"standalone"}]},{"name":"DROP","description":"Excludes variables from output SAS data sets.","help":"DROP variable ... "},{"name":"ELSE","description":"If the condition in an IF-THEN statement is false and an ELSE statement is present, then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"ENDOGENOUS","aliases":["ENDOG","ENDO"],"description":"The ENDOGENOUS statement declares model variables and identifies them as endogenous. You can declare model variables with an ENDOGENOUS statement instead of with a VAR statement to help document the model or to indicate the default solution variables. The variables declared endogenous are solved when a SOLVE statement does not indicate which variables to solve. Valid abbreviations for the ENDOGENOUS statement are ENDOG and ENDO. The DEPENDENT statement is equivalent to the ENDOGENOUS statement and is provided for the convenience of non-econometric practitioners. The ENDOGENOUS statement optionally provides initial values for lagged dependent variables.","help":"ENDOGENOUS variable &lt; initial-values &gt; ... "},{"name":"ERRORMODEL","description":"The ERRORMODEL statement is the mechanism for specifying the distribution of the residuals. You must specify the dependent/endogenous variables or general-form model name, a tilde (~), and then a distribution with its parameters.","help":"ERRORMODEL &lt;CAUCHY( &lt;location, scale&gt; )&gt; &lt;CHISQUARED ( df &lt;, nc&gt; )&gt; &lt;GENERAL(Likelihood &lt;, parm1, parm2,...parmn &gt; )&gt; ...","arguments":[{"name":"CAUCHY","optional":true,"description":"Specifies the Cauchy distribution. This option is supported only for simulation. The arguments correspond to the arguments of the SAS CDF function which computes the cumulative distribution function (ignoring the random variable argument).","type":"standalone"},{"name":"CDF=","optional":true,"description":"Specifies the univariate distribution that is used for simulation so that the estimation can be done for one set of distributional assumptions and the simulation for another. The CDF can be any of the distributions from the previous section with the exception of the general likelihood. In addition, you can specify the empirical distribution of the residuals. EMPIRICAL= ( <TAILS=(options)> ) uses the sorted residual data to create an empirical CDF. TAILS=( tail-options ) specifies how to handle the tails in computing the inverse CDF from an empirical distribution, where tail-options are: NORMAL specifies the normal distribution to extrapolate the tails. T( df ) specifies the t distribution to extrapolate the tails.","help":"CDF=EMPIRICAL= | TAILS= | NORMAL | T | PERCENT=","type":"choice","arguments":[{"name":"EMPIRICAL=","type":"value"},{"name":"TAILS=","type":"value"},{"name":"NORMAL","type":"standalone"},{"name":"T","type":"standalone"},{"name":"PERCENT=","type":"value"}]},{"name":"CHISQUARED","optional":true,"description":"Specifies the χ² distribution. This option is supported only for simulation. The arguments correspond to the arguments of the SAS CDF function (ignoring the random variable argument).","type":"standalone"},{"name":"F","optional":true,"description":"Specifies the F distribution. This option is supported only for simulation. The arguments correspond to the arguments of the SAS CDF function (ignoring the random variable argument).","type":"standalone"},{"name":"GENERAL","optional":true,"description":"Specifies the negative of a general log-likelihood function that you construct by using SAS programming statements. The procedure minimizes the negative log-likelihood function specified. parm1, parm2,...parmn are optional parameters for this distribution and are used for documentation purposes only.","type":"standalone"},{"name":"NORMAL","optional":true,"description":"Specifies a multivariate normal (Gaussian) distribution with mean 0 and variances ν1 through νn.","type":"standalone"},{"name":"POISSON","optional":true,"description":"Specifies the Poisson distribution. This option is supported only for simulation. The arguments correspond to the arguments of the SAS CDF function (ignoring the random variable argument).","type":"standalone"},{"name":"T","optional":true,"description":"Specifies a multivariate t distribution with noncentrality 0, variance ν1 through νn, and common degrees of freedom df.","type":"standalone"},{"name":"UNIFORM","optional":true,"description":"Specifies the uniform distribution. This option is supported only for simulation. The arguments correspond to the arguments of the SAS CDF function (ignoring the random variable argument).","type":"standalone"}]},{"name":"ESTIMATE","description":"The ESTIMATE statement computes estimates of functions of the parameters. The ESTIMATE statement refers to the parameters estimated by the associated FIT statement (that is, to either the preceding FIT statement or, in the absence of a preceding FIT statement, to the following FIT statement). You can use any number of ESTIMATE statements.","help":"ESTIMATE &lt;COVB&gt; &lt;OUTCOV&gt; &lt;OUTEST=&gt; ...","arguments":[{"name":"CORRB","optional":true,"followsDelimiter":"/","description":"Prints the correlation matrix of the functions of the parameters.","type":"standalone"},{"name":"COVB","optional":true,"followsDelimiter":"/","description":"Prints the covariance matrix of the functions of the parameters.","type":"standalone"},{"name":"OUTCOV","optional":true,"followsDelimiter":"/","description":"Writes the covariance matrix of the functions of the parameters to the OUTEST= data set in addition to the parameter estimates.","type":"standalone"},{"name":"OUTEST=","optional":true,"followsDelimiter":"/","description":"Specifies the name of the data set in which the estimate of the functions of the parameters are to be written. The format for this data set is identical to the OUTEST= data set for the FIT statement.","type":"value"}]},{"name":"EXOGENOUS","aliases":["EXOG","EXO"],"description":"The EXOGENOUS statement declares model variables and identifies them as exogenous. You can declare model variables with an EXOGENOUS statement instead of with a VAR statement to help document the model or to indicate the default instrumental variables. The variables declared exogenous are used as instruments when an instrumental variables estimation method is requested (such as N2SLS or N3SLS) and an INSTRUMENTS statement is not used. Valid abbreviations for the EXOGENOUS statement are EXOG and EXO. The INDEPENDENT statement is equivalent to the EXOGENOUS statement and is provided for the convenience of non-econometric practitioners. The EXOGENOUS statement optionally provides initial values for lagged exogenous variables.","help":"EXOGENOUS variable &lt; initial-values &gt; ... "},{"name":"FIT","description":"The FIT statement estimates model parameters by fitting the model equations to input data and optionally selects the equations to be fit. If the list of equations is omitted, all model equations that contain parameters are fitted. [Not all FIT statement options are supported for autocompletion at present.]","help":"FIT DROP= ( parameters ...) INITIAL= ( variable = &lt; parameter | constant &gt; ...) PARMS= ( parameters [values] ...) ...","arguments":[{"name":"DROP=","description":"Specifies that the named parameters not be estimated. All the parameters in the equations fit are estimated except those listed in the DROP= option. The dropped parameters retain their previous values and are not changed by the estimation.","type":"value"},{"name":"INITIAL=","description":"Associates a variable with an initial value as a parameter or a constant. This option applies only to ordinary differential equations.","type":"value"},{"name":"PARMS=","description":"Selects a subset of the parameters for estimation. When the PARMS= option is used, only the named parameters are estimated. Any parameters not specified in the PARMS= list retain their previous values and are not changed by the estimation.","type":"value"},{"name":"PRL=","description":"Requests confidence intervals on estimated parameters. By default, the PRL option produces 95% likelihood ratio confidence limits. The coverage of the confidence interval is controlled by the ALPHA= option in the FIT statement.","help":"PRL=WALD | LR | BOTH","type":"choice","arguments":[{"name":"WALD","description":"Requests likelihood ratio confidence limits.","type":"standalone"},{"name":"LR","description":"Requests Wald confidence limits.","type":"standalone"},{"name":"BOTH","description":"Requests both Wald and likelihood ratio confidence limits.","type":"standalone"}]},{"name":"START=","description":"Supplies starting values for the parameter estimates. In PROC MODEL, you have several options to specify starting values for the parameters to be estimated. When more than one option is specified, the options are implemented in the following order of precedence (from highest to lowest): the START= option, the PARMS statement initialization value, the ESTDATA= option, and the PARMSDATA= option. If no options are specified for the starting value, the default value of 0.0001 is used. If the START= option specifies more than one starting value for one or more parameters, a grid search is performed over all combinations of the values, and the best combination is used to start the iterations.","type":"value"},{"name":"ADJSMMV","optional":true,"followsDelimiter":"/","description":"Specifies adding the variance adjustment from simulating the moments to the variance-covariance matrix of the parameter estimators. By default, no adjustment is made.","type":"standalone"},{"name":"BLOCK","optional":true,"followsDelimiter":"/","description":"Prints an analysis of the structure of the model given by the assignments to model variables appearing in the model program. This analysis includes a classification of model variables into endogenous (dependent) and exogenous (independent) groups based on the presence of the variable on the left-hand side of an assignment statement. The endogenous variables are grouped into simultaneously determined blocks. The dependency structure of the simultaneous blocks and exogenous variables is also printed. The BLOCK option cannot analyze dependencies implied by general form equations.","type":"standalone"},{"name":"CHOW=","optional":true,"followsDelimiter":"/","description":"Prints the Chow test for break points or structural changes in a model. The argument is the number of observations in the first sample or a parenthesized list of first sample sizes. If the size of the one of the two groups in which the sample is partitioned is less than the number of parameters, then a predictive Chow test is automatically used.","type":"value"},{"name":"COLLIN","optional":true,"followsDelimiter":"/","description":"Prints collinearity diagnostics for the Jacobian crossproducts matrix (XPX) after the parameters have converged. Collinearity diagnostics are also automatically printed if the estimation fails to converge.","type":"standalone"},{"name":"CONVERGE=","optional":true,"followsDelimiter":"/","description":"Specifies the convergence criteria. The convergence measure must be less than value1 before convergence is assumed. value2 is the convergence criterion for the S and V matrices for S and V iterated methods. value2 defaults to value1.","type":"value"},{"name":"CORR","optional":true,"followsDelimiter":"/","description":"Prints the correlation matrices of the residuals and parameters. Using CORR is the same as using both CORRB and CORRS.","type":"standalone"},{"name":"CORRB","optional":true,"followsDelimiter":"/","description":"Prints the correlation matrix of the parameter estimates.","type":"standalone"},{"name":"CORRS","optional":true,"followsDelimiter":"/","description":"Prints the correlation matrix of the residuals.","type":"standalone"},{"name":"COV","optional":true,"followsDelimiter":"/","description":"Prints the covariance matrices of the residuals and parameters. Specifying COV is the same as specifying both COVB and COVS.","type":"standalone"},{"name":"COVB","optional":true,"followsDelimiter":"/","description":"Prints the covariance matrix of the parameter estimates.","type":"standalone"},{"name":"COVBEST=","optional":true,"followsDelimiter":"/","description":"Specifies the variance-covariance estimator used for FIML. The default is COVBEST=CROSS.","help":"COVBEST=GLS | CROSS | FDA","type":"choice","arguments":[{"name":"GLS","followsDelimiter":"/","description":"Selects the generalized least squares estimator.","type":"standalone"},{"name":"CROSS","followsDelimiter":"/","description":"Selects the crossproducts estimator.","type":"standalone"},{"name":"FDA","followsDelimiter":"/","description":"Selects the inverse of the finite difference approximation to the Hessian.","type":"standalone"}]},{"name":"COVS","optional":true,"followsDelimiter":"/","description":"Prints the covariance matrix of the residuals.","type":"standalone"},{"name":"DATA=","optional":true,"followsDelimiter":"/","description":"Specifies the input data set. Values for the variables in the program are read from this data set. If the DATA= option is not specified on the FIT statement, the data set specified by the DATA= option on the PROC MODEL statement is used.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DETAILS","optional":true,"followsDelimiter":"/","description":"Specifies the detailed printout. Parts of the printed output are expanded when the DETAILS option is specified. If ODS GRAPHICS ON is specified, the following additional graphs of the residuals are produced: ACF, PACF, IACF, white noise, and QQ plot versus the normal.","type":"standalone"},{"name":"DW=","optional":true,"followsDelimiter":"/","description":"Prints Durbin-Watson d statistics, which measure autocorrelation of the residuals. When the residual series is interrupted by missing observations, the Durbin-Watson statistic calculated is d' as suggested by Savin and White (1978). This is the usual Durbin-Watson computed by ignoring the gaps. Savin and White show that it has the same null distribution as the DW with no gaps in the series and can be used to test for autocorrelation using the standard tables. The Durbin-Watson statistic is not valid for models that contain lagged endogenous variables.","type":"value"},{"name":"DWPROB","optional":true,"followsDelimiter":"/","description":"Prints the significance level (p-values) for the Durbin-Watson tests. Since the Durbin-Watson p-values are computationally expensive, they are not reported by default. In the Durbin-Watson test, the null hypothesis is that there is autocorrelation at a specific lag.","type":"standalone"},{"name":"DYNAMIC","optional":true,"followsDelimiter":"/","description":"Specifies dynamic estimation of ordinary differential equations.","type":"standalone"},{"name":"EPSILON=","optional":true,"followsDelimiter":"/","description":"Specifies the tolerance value used to transform strict inequalities into inequalities when restrictions on parameters are imposed. By default, EPSILON=1E–8.","type":"value"},{"name":"ESTDATA=","optional":true,"followsDelimiter":"/","description":"Specifies a data set whose first observation provides initial values for some or all of the parameters.","help":"ESTDATA=*SAS-data-set*","type":"dataSet"},{"name":"FIML","optional":true,"followsDelimiter":"/","description":"Specifies full information maximum likelihood estimation.","type":"standalone"},{"name":"FLOW","optional":true,"followsDelimiter":"/","description":"Prints a message for each statement in the model program as it is executed. This debugging option is needed very rarely and produces voluminous output.","type":"standalone"},{"name":"FSRSQ","optional":true,"followsDelimiter":"/","description":"Prints the first-stage R² statistics for instrumental estimation methods. These R² statistics measure the proportion of the variance retained when the Jacobian columns associated with the parameters are projected through the instruments space.","type":"standalone"},{"name":"GENGMMV","optional":true,"followsDelimiter":"/","description":"Specify GMM variance under arbitrary weighting matrix. This is the default method for GMM estimation.","type":"standalone"},{"name":"GINV=","optional":true,"followsDelimiter":"/","description":"Specifies the type of generalized inverse to be used when computing the covariance matrix. The default is GINV=G2.","help":"GINV=G2 | G4","type":"choice","arguments":[{"name":"G2","followsDelimiter":"/","description":"A G2 inverse is calculated by satisfying the first two properties of the Moore-Penrose generalized inverse.","type":"standalone"},{"name":"G4","followsDelimiter":"/","description":"Selects the Moore-Penrose generalized inverse.","type":"standalone"}]},{"name":"GMM","optional":true,"followsDelimiter":"/","description":"Specifies generalized method of moments estimation.","type":"standalone"},{"name":"GODFREY=","optional":true,"followsDelimiter":"/","description":"Performs Godfrey’s tests for autocorrelated residuals for each equation, where n is the maximum autoregressive order, and specifies that Godfrey’s tests be computed for lags 1 through n. The default number of lags is one.","help":"GODFREY=*n*","type":"value"},{"name":"GRAPH","optional":true,"followsDelimiter":"/","description":"Prints the graph of the dependency structure of the model. The GRAPH option also invokes the BLOCK option and produces a graphical display of the information listed by the BLOCK option.","type":"standalone"},{"name":"HAUSMAN","optional":true,"followsDelimiter":"/","description":"Performs Hausman’s specification test, or m-statistics.","type":"standalone"},{"name":"HCCME=","optional":true,"followsDelimiter":"/","description":"Specifies the type of heteroscedasticity-consistent covariance matrix estimator to use for OLS, 2SLS, 3SLS, SUR, and the iterated versions of these estimation methods.","help":"HCCME=0 | 1 | 2 | 3 | NO","type":"choice","arguments":[{"name":"0","followsDelimiter":"/","description":"Corresponds to the type of covariance matrix estimator to use: HCO","type":"standalone"},{"name":"1","followsDelimiter":"/","description":"Corresponds to the type of covariance matrix estimator to use: HC1","type":"standalone"},{"name":"2","followsDelimiter":"/","description":"Corresponds to the type of covariance matrix estimator to use: HC2","type":"standalone"},{"name":"3","followsDelimiter":"/","description":"Corresponds to the type of covariance matrix estimator to use: HC3","type":"standalone"},{"name":"NO","followsDelimiter":"/","description":"Specifies not to use any covariance matrix estimator.","type":"standalone"}]},{"name":"HESSIAN=","optional":true,"followsDelimiter":"/","description":"Specifies the Hessian approximation used for FIML. HESSIAN=GLS is the default.","help":"HESSIAN=CROSS | GLS | FDA","type":"choice","arguments":[{"name":"CROSS","followsDelimiter":"/","description":"Selects the crossproducts approximation to the Hessian.","type":"standalone"},{"name":"GLS","followsDelimiter":"/","description":"Selects the generalized least squares approximation to the Hessian.","type":"standalone"},{"name":"FDA","followsDelimiter":"/","description":"Selects the finite difference approximation to the Hessian.","type":"standalone"}]},{"name":"I","optional":true,"followsDelimiter":"/","description":"Prints the inverse of the crossproducts Jacobian matrix at each iteration.","type":"standalone"},{"name":"IT2SLS","optional":true,"followsDelimiter":"/","description":"Specifies iterated two-stage least squares estimation. This is the same as 2SLS unless there are cross-equation parameter restrictions.","type":"standalone"},{"name":"IT3SLS","optional":true,"followsDelimiter":"/","description":"Specifies iterated three-stage least squares estimation.","type":"standalone"},{"name":"ITALL","optional":true,"followsDelimiter":"/","description":"Specifies all iteration printing-control options (I, ITDETAILS, ITPRINT, and XPX). ITALL also prints the crossproducts matrix (labeled CROSS), the parameter change vector, and the estimate of the cross-equation covariance of residuals matrix at each iteration.","type":"standalone"},{"name":"ITDETAILS","optional":true,"followsDelimiter":"/","description":"Prints a detailed iteration listing. This includes the ITPRINT information and additional statistics.","type":"standalone"},{"name":"ITGMM","optional":true,"followsDelimiter":"/","description":"Specifies iterated generalized method of moments estimation.","type":"standalone"},{"name":"ITOLS","optional":true,"followsDelimiter":"/","description":"Specifies iterated ordinary least squares estimation. This is the same as OLS unless there are cross-equation parameter restrictions.","type":"standalone"},{"name":"ITPRINT","optional":true,"followsDelimiter":"/","description":"Prints the parameter estimates, objective function value, and convergence criteria at each iteration.","type":"standalone"},{"name":"ITSUR","optional":true,"followsDelimiter":"/","description":"Specifies iterated seemingly unrelated regression estimation.","type":"standalone"},{"name":"KERNEL=","optional":true,"followsDelimiter":"/","description":"Specifies the kernel to be used for GMM and ITGMM. The default is KERNEL=(PARZEN, 1, 0.2).","help":"KERNEL=PARZEN | BART | QS","type":"choice","arguments":[{"name":"PARZEN","followsDelimiter":"/","description":"Selects the Parzen kernel.","type":"standalone"},{"name":"BART","followsDelimiter":"/","description":"Selects the Bartlett kernel.","type":"standalone"},{"name":"QS","followsDelimiter":"/","description":"Selects the quadratic spectral kernel. e ≥ 0 and c ≥ 0 are used to compute the bandwidth parameter.","type":"standalone"}]},{"name":"LIST","optional":true,"followsDelimiter":"/","description":"Prints the model program and variable lists, including the statements added by PROC MODEL and macros.","type":"standalone"},{"name":"LISTCODE","optional":true,"followsDelimiter":"/","description":"Prints the derivative tables and compiled model program code. LISTCODE is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTDEP","optional":true,"followsDelimiter":"/","description":"Prints a report that lists for each variable in the model program the variables that depend on it and that it depends on. These lists are given separately for current-period values and for lagged values of the variables.","type":"standalone"},{"name":"LISTDER","optional":true,"followsDelimiter":"/","description":"Prints a table of derivatives for FIT and SOLVE tasks. (The LISTDER option is applicable only for the default NEWTON method for SOLVE tasks.) The derivatives table shows each nonzero derivative computed for the problem. The derivative listed can be a constant, a variable in the model program, or a special derivative variable created to hold the result of the derivative expression. This option is turned on by the LISTCODE and PRINTALL options.","type":"standalone"},{"name":"LTEBOUND=","optional":true,"followsDelimiter":"/","description":"Specifies the local truncation error bound for the integration. This option is ignored if no ordinary differential equations (ODEs) are specified.","help":"LTEBOUND=*n*","type":"value"},{"name":"MAXERRORS=","optional":true,"followsDelimiter":"/","description":"Specifies the maximum number of execution errors that can be printed. The default is MAXERRORS=50.","help":"MAXERRORS=*n*","type":"value"},{"name":"MAXITER=","optional":true,"followsDelimiter":"/","description":"Specifies the maximum number of iterations allowed. The default is MAXITER=100.","help":"MAXITER=*n*","type":"value"},{"name":"MAXSUBITER=","optional":true,"followsDelimiter":"/","description":"Specifies the maximum number of subiterations allowed for an iteration. For the GAUSS method, the MAXSUBITER= option limits the number of step halvings. For the MARQUARDT method, the MAXSUBITER= option limits the number of times n can be increased. The default is MAXSUBITER=30.","help":"MAXSUBITER=*n*","type":"value"},{"name":"METHOD=","optional":true,"followsDelimiter":"/","description":"Specifies the iterative minimization method to use. The default is METHOD=GAUSS. If the default GAUSS method fails to converge, the procedure switches to the MARQUARDT method.","help":"METHOD=GAUSS | MARQUARDT","type":"choice","arguments":[{"name":"GAUSS","followsDelimiter":"/","description":"Specifies the Gauss-Newton method.","type":"standalone"},{"name":"MARQUARDT","followsDelimiter":"/","description":"Specifies the Marquardt-Levenberg method.","type":"standalone"}]},{"name":"MINTIMESTEP=","optional":true,"followsDelimiter":"/","description":"Specifies the smallest allowed time step to be used in the integration. This option is ignored if no ODEs are specified.","help":"MINTIMESTEP=*n*","type":"value"},{"name":"MISSING=","optional":true,"followsDelimiter":"/","description":"Specifies how missing values are handled. The default is MISSING=DELETE.","help":"MISSING=PAIRWISE | DELETE","type":"choice","arguments":[{"name":"PAIRWISE","followsDelimiter":"/","description":"Specifies that missing values are tracked on an equation-by-equation basis.","type":"standalone"},{"name":"DELETE","followsDelimiter":"/","description":"Specifies that the entire observation is omitted from the analysis when any equation has a missing predicted or actual value for the equation.","type":"standalone"}]},{"name":"NDRAW=","optional":true,"followsDelimiter":"/","description":"Requests the simulation method for estimation. H is the number of draws. If number of draws is not specified, the default H is set to 10.","type":"value"},{"name":"NESTIT","optional":true,"followsDelimiter":"/","description":"Changes the way the iterations are performed for estimation methods that iterate the estimate of the equation covariance (S matrix). The NESTIT option is relevant only for the methods that iterate the estimate of the covariance matrix (ITGMM, ITOLS, ITSUR, IT2SLS, and IT3SLS).","type":"standalone"},{"name":"NO3SLS","optional":true,"followsDelimiter":"/","description":"Specifies not to use 3SLS automatically for FIML initial parameter starting values.","type":"standalone"},{"name":"NOGENGMMV","optional":true,"followsDelimiter":"/","description":"Specifies not to use GMM variance under arbitrary weighting matrix. Use GMM variance under optimal weighting matrix instead.","type":"standalone"},{"name":"NOOLS","optional":true,"followsDelimiter":"/","aliases":["NO2SLS"],"description":"Specifies bypassing OLS or 2SLS to get initial parameter estimates for GMM, ITGMM, or FIML. This is important for certain models that are poorly defined in OLS or 2SLS, or if good initial parameter values are already provided. Note that for GMM, the V matrix is created by using the initial values specified and this might not be consistently estimated.","type":"standalone"},{"name":"NOPRINT","optional":true,"followsDelimiter":"/","description":"Suppresses the normal printed output but does not suppress error listings. Using any other print option turns the NOPRINT option off. The PRINT option can be used with the RESET statement to turn off NOPRINT.","type":"standalone"},{"name":"NORMAL","optional":true,"followsDelimiter":"/","description":"Performs tests of normality of the model residuals.","type":"standalone"},{"name":"NPREOBS=","optional":true,"followsDelimiter":"/","description":"Specifies the initial number of observations to run the simulation before the simulated values are compared to observed variables. This option is most useful in cases where the program statements involve lag operations. Use this option to avoid the effect of the starting point on the simulation.","type":"value"},{"name":"NVDRAW=","optional":true,"followsDelimiter":"/","description":"Specifies H', the number of draws for V matrix. If this option is not specified, the default H' is set to 20.","type":"value"},{"name":"OLS","optional":true,"followsDelimiter":"/","description":"Specifies ordinary least squares estimation. This is the default.","type":"standalone"},{"name":"OUT=","optional":true,"followsDelimiter":"/","description":"Names the SAS data set to contain the residuals, predicted values, or actual values from each estimation.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"OUTACTUAL","optional":true,"followsDelimiter":"/","description":"Writes the actual values of the endogenous variables of the estimation to the OUT= data set. This option is applicable only if the OUT= option is specified.","type":"standalone"},{"name":"OUTALL","optional":true,"followsDelimiter":"/","description":"Selects the OUTACTUAL, OUTERRORS, OUTLAGS, OUTPREDICT, and OUTRESID options.","type":"standalone"},{"name":"OUTCOV","optional":true,"followsDelimiter":"/","aliases":["COVOUT"],"description":"Writes the covariance matrix of the estimates to the OUTEST= data set in addition to the parameter estimates. The OUTCOV option is applicable only if the OUTEST= option is also specified.","type":"standalone"},{"name":"OUTEST=","optional":true,"followsDelimiter":"/","description":"Names the SAS data set to contain the parameter estimates and optionally the covariance of the estimates.","help":"OUTEST=*SAS-data-set*","type":"dataSet"},{"name":"OUTLAGS","optional":true,"followsDelimiter":"/","description":"Writes the observations used to start the lags to the OUT= data set. This option is applicable only if the OUT= option is specified.","type":"standalone"},{"name":"OUTPREDICT","optional":true,"followsDelimiter":"/","description":"Writes the predicted values to the OUT= data set. This option is applicable only if OUT= is specified.","type":"standalone"},{"name":"OUTRESID","optional":true,"followsDelimiter":"/","description":"Writes the residual values computed from the parameter estimates to the OUT= data set. The OUTRESID option is the default if neither OUTPREDICT nor OUTACTUAL is specified. This option is applicable only if the OUT= option is specified.","type":"standalone"},{"name":"OUTS=","optional":true,"followsDelimiter":"/","description":"Names the SAS data set to contain the estimated covariance matrix of the equation errors. This is the covariance of the residuals computed from the parameter estimates.","help":"OUTS=*SAS-data-set*","type":"dataSet"},{"name":"OUTSN=","optional":true,"followsDelimiter":"/","description":"Names the SAS data set to contain the estimated normalized covariance matrix of the equation errors. This is valid for multivariate t distribution estimation.","help":"OUTSN=*SAS-data-set*","type":"dataSet"},{"name":"OUTSUSED=","optional":true,"followsDelimiter":"/","description":"Names the SAS data set to contain the S matrix used in the objective function definition. The OUTSUSED= data set is the same as the OUTS= data set for the methods that iterate the S matrix.","help":"OUTSUSED=*SAS-data-set*","type":"dataSet"},{"name":"OUTUNWGTRESID","optional":true,"followsDelimiter":"/","description":"Writes the unweighted residual values computed from the parameter estimates to the OUT= data set. These are residuals computed as actual-predicted with no accounting for the WEIGHT statement, the _WEIGHT_ variable, or any variance expressions. This option is applicable only if the OUT= option is specified.","type":"standalone"},{"name":"OUTV=","optional":true,"followsDelimiter":"/","description":"Names the SAS data set to contain the estimate of the variance matrix for GMM and ITGMM.","help":"OUTV=*SAS-data-set*","type":"dataSet"},{"name":"PCHOW=","optional":true,"followsDelimiter":"/","description":"Prints the predictive Chow test for break points or structural changes in a model. The argument is the number of observations in the first sample or a parenthesized list of first sample sizes.","type":"value"},{"name":"PRINTALL","optional":true,"followsDelimiter":"/","description":"Turns on all the printing-control options. The options set by PRINTALL are DETAILS; the model information options LIST, LISTDEP, LISTDER, XREF, BLOCK, and GRAPH; the FIT task printing options FSRSQ, COVB, CORRB, COVS, CORRS, DW, and COLLIN; and the SOLVE task printing options STATS, THEIL, SOLVEPRINT, and ITPRINT.","type":"standalone"},{"name":"SDATA=","optional":true,"followsDelimiter":"/","description":"Specifies a data set that provides the covariance matrix of the equation errors. The matrix read from the SDATA= data set is used for the equation covariance matrix (S matrix) in the estimation. (The SDATA= S matrix is used to provide only the initial estimate of S for the methods that iterate the S matrix.)","help":"SDATA=*SAS-data-set*","type":"dataSet"},{"name":"SINGULAR=","optional":true,"followsDelimiter":"/","description":"Specifies the smallest pivot value allowed. The default 1.0E–12.","help":"SINGULAR=*value*","type":"value"},{"name":"STARTITER=","optional":true,"followsDelimiter":"/","description":"Specifies the number of minimization iterations to perform at each grid point. The default is STARTITER=0, which implies that no minimization is performed at the grid points.","help":"STARTITER=*n*","type":"value"},{"name":"SUR","optional":true,"followsDelimiter":"/","description":"Specifies seemingly unrelated regression estimation.","type":"standalone"},{"name":"TIME=","optional":true,"followsDelimiter":"/","description":"Specifies the name of the time variable. This variable must be in the data set.","help":"TIME=*name*","type":"value"},{"name":"TRACE","optional":true,"followsDelimiter":"/","description":"Prints the result of each operation in each statement in the model program as it is executed, in addition to the information printed by the FLOW option. This debugging option is needed very rarely and produces voluminous output.","type":"standalone"},{"name":"TYPE=","optional":true,"followsDelimiter":"/","description":"Specifies the estimation type to read from the SDATA= and ESTDATA= data sets. The name specified in the TYPE= option is compared to the _TYPE_ variable in the ESTDATA= and SDATA= data sets to select observations to use in constructing the covariance matrices. When the TYPE= option is omitted, the last estimation type in the data set is used. Valid values are the estimation methods used in PROC MODEL.","help":"TYPE=*name*","type":"value"},{"name":"VARDEF=","optional":true,"followsDelimiter":"/","description":"Specifies the denominator to be used in computing variances and covariances, MSE, root MSE measures, and so on. The default is VARDEF=DF.","help":"VARDEF=N | WGT | DF | WDF","type":"choice","arguments":[{"name":"N","followsDelimiter":"/","description":"Specifies that the number of nonmissing observations be used.","type":"standalone"},{"name":"WGT","followsDelimiter":"/","description":"Specifies that the sum of the weights be used.","type":"standalone"},{"name":"DF","followsDelimiter":"/","description":"Specifies that the number of nonmissing observations minus the model degrees of freedom (number of parameters) be used.","type":"standalone"},{"name":"WDF","followsDelimiter":"/","description":"Specifies that the sum of the weights minus the model degrees of freedom be used.","type":"standalone"}]},{"name":"VDATA=","optional":true,"followsDelimiter":"/","description":"Specifies a data set that contains a variance matrix for GMM and ITGMM estimation.","help":"VDATA=*SAS-data-set*","type":"dataSet"},{"name":"WHITE","optional":true,"followsDelimiter":"/","description":"Specifies White’s test.","type":"standalone"},{"name":"XPX","optional":true,"followsDelimiter":"/","description":"Prints the crossproducts Jacobian matrix at each iteration.","type":"standalone"},{"name":"XREF","optional":true,"followsDelimiter":"/","description":"Prints a cross-reference of the variables in the model program that shows where each variable was referenced or given a value. The XREF option is normally used in conjunction with the LIST option.","type":"standalone"}]},{"name":"GOTO","description":"Jumps to a new statement.","help":"GOTO label"},{"name":"ID","description":"The ID statement specifies variables to identify observations in error messages or other listings and in the OUT= data set. The ID variables are normally SAS date or datetime variables. If more than one ID variable is used, the first variable is used to identify the observations; the remaining variables are added to the OUT= data set.","help":"ID variables "},{"name":"IF","description":"","help":"IF &lt;DO&gt; &lt;THEN&gt; &lt;WHEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"GO","optional":true,"aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GO TO","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"PUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"SET","optional":true,"description":"Reads an observation from one or more SAS data sets.","type":"standalone"},{"name":"STOP","optional":true,"description":"Action statement in an IF-THEN construct. Stops execution of the current DATA step.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"},{"name":"WHEN","optional":true,"description":"WHEN statement in an IF-THEN-WHEN construct.","type":"standalone"}]},{"name":"INCLUDE","description":"The INCLUDE statement reads model files and inserts their contents into the current model. However, instead of replacing the current model as the RESET MODEL= option does, the contents of included model files are inserted into the model program at the position that the INCLUDE statement appears.","help":"INCLUDE model-names ... "},{"name":"INDEPENDENT","description":"The INDEPENDENT statement is equivalent to the EXOGENOUS statement and is provided for the convenience of non-econometric practitioners. The EXOGENOUS statement optionally provides initial values for lagged exogenous variables.","help":"INDEPENDENT variable &lt; initial-values &gt; ... "},{"name":"INSTRUMENTS","description":"The INSTRUMENTS statement specifies the instrumental variables to be used in the N2SLS, N3SLS, IT2SLS, IT3SLS, GMM, and ITGMM estimation methods. There are three ways of specifying the INSTRUMENTS statement. The first form of the INSTRUMENTS statement is used only after the FIT statement and before the next RUN statement. The items specified as instruments for the second form can be variables, names of parameters to be estimated, or the special keyword _EXOG_. The keyword _EXOG_ indicates that all the model variables declared EXOGENOUS are to be added to the instruments list. The second form of the INSTRUMENTS statement is declared before a FIT statement and defines the default instruments list. The items specified as instruments can be variables or the special keyword _EXOG_. If a single INSTRUMENTS statement of the second form is declared before multiple FIT statements, then it serves as the default instruments list for each of the FIT statements. However, if any of these FIT statements are followed by separate INSTRUMENTS statement, then the latter take precedence over the default list. Hence, in the case of multiple FIT statements, the INSTRUMENTS statement for a particular FIT statement is written below the FIT statement if instruments other than the default are required. For a single FIT statement, you can declare the INSTRUMENTS statement of the second form either preceding or following the FIT statement. A third form of the INSTRUMENTS statement is used to specify instruments for each equation. No explicit intercept is added, parameters cannot be specified to represent instruments, and the _EXOG_ keyword is not allowed. Equations not explicitly assigned instruments use all the instruments specified for the other equations as well as instruments not assigned specific equations.","help":"INSTRUMENTS EXCLUDE=(parameters) &lt;NOINTERCEPT&gt; _EXOG_ ...","arguments":[{"name":"EXCLUDE=","description":"Specifies that the derivatives of the equations with respect to all of the parameters to be estimated (except the parameters listed in the EXCLUDE list) be used as instruments, in addition to the other instruments specified. If you use the EXCLUDE= option, you should be sure that the derivatives with respect to the nonexcluded parameters in the estimation are independent of the endogenous variables and not functions of the parameters estimated.","type":"value"},{"name":"_EXOG_","description":"The keyword _EXOG_ indicates that all the model variables declared EXOGENOUS are to be added to the instruments list.","type":"standalone"},{"name":"INTONLY","optional":true,"followsDelimiter":"/","description":"Specifies that only the intercept be used as an instrument. This option is used for GMM estimation where the moments have been specified explicitly.","type":"standalone"},{"name":"NOINTERCEPT","optional":true,"followsDelimiter":"/","aliases":["NOINT"],"description":"Excludes the constant of 1.0 (intercept) from the instruments list. An intercept is included as an instrument while using the first or second form of the INSTRUMENTS statement unless NOINTERCEPT is specified.","type":"standalone"}]},{"name":"KEEP","description":"The KEEP statement specifies which variables are to be included in the analysis and/or output.","help":"KEEP variable-list "},{"name":"LABEL","description":"","help":""},{"name":"LENGTH","description":"Specifies the number of bytes for storing variables.","help":"LENGTH &lt;DEFAULT=n&gt; ","arguments":[{"name":"DEFAULT=","optional":true,"description":"Changes the default number of bytes that SAS uses to store the values of any newly created numeric variables.","help":"DEFAULT=*n*","type":"value"}]},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK statement-label"},{"name":"MOMENT","description":"In many scenarios, endogenous variables are observed from data. From the models, you can simulate these endogenous variables based on a fixed set of parameters. The goal of simulated method of moments (SMM) is to find a set of parameters such that the moments of the simulated data match the moments of the observed variables. If there are many moments to match, the code might be tedious. The following MOMENT statement provides a way to generate some commonly used moments automatically. Multiple MOMENT statements can be used. variables can be one or more endogenous variables. moment specification can have the following four types: o ( number list ) specifies that the endogenous variable is raised to the power specified by each number in number list. o ABS( number list ) specifies that the absolute value of the endogenous variable is raised to the power specified by each number in number list. o LAGnum ( number list ) specifies that the endogenous variable is multiplied by the num th lag of the endogenous variable, and this product is raised to the power specified by each number in number list. o ABS_LAGnum ( number list ) specifies that the endogenous variable is multiplied by the num th lag of the endogenous variable, and the absolute value of this product is raised to the power specified by each number in number list.","help":"MOMENT variables = moment specification "},{"name":"NUMBER","description":"Declaration of parameters that have a NUMBER type.","help":"NUMBER &lt;INIT expression&gt; ","arguments":[{"name":"INIT","optional":true,"description":"Specifies a default value that is used when a parameter value is required but no other value has been supplied.","type":"standalone"}]},{"name":"OTHERWISE","description":">","help":""},{"name":"OUTVARS","aliases":["OUTVAR"],"description":"The OUTVARS statement specifies additional variables defined in the model program to be output to the OUT= data sets. The OUTVARS statement is not needed unless the variables to be added to the output data set are not referred to by the model, or unless you want to include parameters or other special variables in the OUT= data set. The OUTVARS statement includes additional variables, whereas the KEEP statement excludes variables.","help":"OUTVARS variables "},{"name":"PARAMETERS","aliases":["PARMS","PARM"],"description":"The PARAMETERS statement declares the parameters of a model and optionally sets their initial values. Valid abbreviations are PARMS and PARM. Each parameter has a single value associated with it, which is the same for all observations. Lagging is not relevant for parameters. If a value is not specified in the PARMS statement (or by the PARMS= option of a FIT statement), the value defaults to 0.0001 for FIT tasks and to a missing value for SOLVE tasks.","help":"PARAMETERS variable &lt;value&gt; &lt;variable &lt;value&gt;&gt; ... "},{"name":"PUT","description":"The PUT statement writes text data to the current output file.","help":"PUT &lt;_PAGE_&gt; ","arguments":[{"name":"_PAGE_","optional":true,"description":"Outputs any pending line data and moves to the top of the next page.","type":"standalone"}]},{"name":"RANGE","description":"The RANGE statement specifies the range of observations to be read from the DATA= data set. For FIT tasks, the RANGE statement controls the period of fit for the estimation. For SOLVE tasks, the RANGE statement controls the simulation period or forecast horizon. The RANGE variable must be a numeric variable in the DATA= data set that identifies the observations, and the data set must be sorted by the RANGE variable. The first observation in the range is identified by first, and the last observation is identified by last.","help":"RANGE &lt;RANGE variable &lt; = first &gt; &lt; TO last &gt; &gt; ","arguments":[{"name":"TO","optional":true,"description":"Separates the first and last observations in the range.","type":"standalone"}]},{"name":"RENAME","description":"Specifies new names for variables in output SAS data sets.","help":"RENAME old-name-1=new-name-1 ... &lt;old-name-n=new-name-n&gt;"},{"name":"RESET","description":"All of the options of the PROC MODEL statement can be reset by the RESET statement. In addition, the RESET statement supports one additional option: PURGE deletes the current model so that a new model can be defined.","help":"RESET &lt;DATA=SAS-data-set&gt; &lt;OUTPARMS=SAS-data-set&gt; &lt;PURGE&gt; ...","arguments":[{"name":"BLOCK","optional":true,"description":"Prints an analysis of the structure of the model given by the assignments to model variables appearing in the model program. This analysis includes a classification of model variables into endogenous (dependent) and exogenous (independent) groups based on the presence of the variable on the left-hand side of an assignment statement. The endogenous variables are grouped into simultaneously determined blocks. The dependency structure of the simultaneous blocks and exogenous variables is also printed. The BLOCK option cannot analyze dependencies implied by general form equations.","type":"standalone"},{"name":"DATA=","optional":true,"description":"Names the input data set. Variables in the model program are looked up in the DATA= data set and, if found, their attributes (type, length, label, format) are set to be the same as those in the input data set (if not previously defined otherwise). The values for the variables in the program are read from the input data set when the model is estimated or simulated by FIT and SOLVE statements.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DETAILS","optional":true,"description":"Specifies the detailed printout. Parts of the printed output are expanded when the DETAILS option is specified. If ODS GRAPHICS ON is specified, the following additional graphs of the residuals are produced: ACF, PACF, IACF, white noise, and QQ plot versus the normal.","type":"standalone"},{"name":"FLOW","optional":true,"description":"Prints a message for each statement in the model program as it is executed. This debugging option is needed very rarely and produces voluminous output.","type":"standalone"},{"name":"GRAPH","optional":true,"description":"Prints the graph of the dependency structure of the model. The GRAPH option also invokes the BLOCK option and produces a graphical display of the information listed by the BLOCK option.","type":"standalone"},{"name":"LIST","optional":true,"description":"prints the model program and variable lists, including the statements added by PROC MODEL and macros.","type":"standalone"},{"name":"LISTALL","optional":true,"description":"Selects the LIST, LISTDEP, LISTDER, and LISTCODE options.","type":"standalone"},{"name":"LISTCODE","optional":true,"description":"Prints the derivative tables and compiled model program code. LISTCODE is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTDEP","optional":true,"description":"Prints a report that lists for each variable in the model program the variables that depend on it and that it depends on. These lists are given separately for current-period values and for lagged values of the variables.","type":"standalone"},{"name":"LISTDER","optional":true,"description":"Prints a table of derivatives for FIT and SOLVE tasks. (The LISTDER option is applicable only for the default NEWTON method for SOLVE tasks.) The derivatives table shows each nonzero derivative computed for the problem. The derivative listed can be a constant, a variable in the model program, or a special derivative variable created to hold the result of the derivative expression. This option is turned on by the LISTCODE and PRINTALL options.","type":"standalone"},{"name":"MAXERRORS=","optional":true,"description":"Specifies the maximum number of execution errors that can be printed. The default is MAXERRORS=50.","help":"MAXERRORS=*n*","type":"value"},{"name":"MEMORYUSE","optional":true,"description":"Prints a report of the memory required for the various parts of the analysis.","type":"standalone"},{"name":"MODEL=","optional":true,"description":"Reads the model from one or more input model files created by previous PROC MODEL executions. Model files are written by the OUTMODEL= option.","type":"value"},{"name":"NDEC=","optional":true,"description":"Specifies the precision of the format that PROC MODEL uses when printing various numbers. The default is NDEC=3, which means that PROC MODEL attempts to print values by using the D format but ensures that at least three significant digits are shown. If the NDEC= value is greater than nine, the BEST. format is used. The smallest value allowed is NDEC=2.","help":"NDEC=*n*","type":"value"},{"name":"NOPRINT","optional":true,"description":"Suppresses the normal printed output but does not suppress error listings. Using any other print option turns the NOPRINT option off. The PRINT option can be used with the RESET statement to turn off NOPRINT.","type":"standalone"},{"name":"NOSTORE","optional":true,"description":"Suppresses the default output of the model file. This option is applicable only when FIT or SOLVE statements are not used, the MODEL= option is not used, and when a model is specified.","type":"standalone"},{"name":"OUTMODEL=","optional":true,"description":"Specifies the name of an output model file to which the model is to be written. Starting with SAS 9.2, model files are being stored as XML-based SAS data sets instead of being stored as members of a SAS catalog as in earlier releases. This makes MODEL files more readily extendable in the future and enables Java-based applications to read the MODEL files directly. To change this behavior, use the SAS global-CMPMODEL-options. You can choose the format in which the output model file is stored and read by using the CMPMODEL=global-CMPMODEL-options in an PTIONS statement as follows.","help":"OUTMODEL=*model-name*","type":"value"},{"name":"OUTPARMS=","optional":true,"description":"Writes the parameter estimates to a SAS data set.","help":"OUTPARMS=*SAS-data-set*","type":"dataSet"},{"name":"PARMSDATA=","optional":true,"description":"Names the SAS data set that contains the parameter estimates. In PROC MODEL, you have several options to specify starting values for the parameters to be estimated. When more than one option is specified, the options are implemented in the following order of precedence (from highest to lowest): the START= option, the PARMS statement initialization value, the ESTDATA= option, and the PARMSDATA= option. If no options are specified for the starting value, the default value of 0.0001 is used.","help":"PARMSDATA=*SAS-data-set*","type":"dataSet"},{"name":"PLOTS=","optional":true,"description":"Requests that the MODEL procedure produce statistical graphics via the Output Delivery System, provided that the ODS GRAPHICS statement has been specified. The global-plot-options apply to all relevant plots generated by the MODEL procedure. The global-plot-options supported by the MODEL procedure follow. ONLY suppresses the default plots. Only the plots specifically requested are produced.","help":"PLOTS=ALL | ACF | IACF | PACF | FITPLOT | COOKSD | QQ | RESIDUAL|RES | STUDENTRESIDUAL | RESIDUALHISTOGRAM |RESIDHISTOGRAM | NONE","type":"choice","arguments":[{"name":"ALL","description":"Requests that all plots appropriate for the particular analysis be produced.","type":"standalone"},{"name":"ACF","description":"Produces the autocorrelation function plot.","type":"standalone"},{"name":"IACF","description":"Produces the inverse autocorrelation function plot of residuals.","type":"standalone"},{"name":"PACF","description":"Produces the partial autocorrelation function plot of residuals.","type":"standalone"},{"name":"FITPLOT","description":"Plots the predicted and actual values.","type":"standalone"},{"name":"COOKSD","description":"Produces the Cook’s D plot.","type":"standalone"},{"name":"QQ","description":"Produces a QQ plot of residuals.","type":"standalone"},{"name":"RESIDUAL","description":"Plots the residuals.","help":"RESIDUAL|RES","type":"choice"},{"name":"STUDENTRESIDUAL","description":"Plots the studentized residuals.","type":"standalone"},{"name":"RESIDUALHISTOGRAM","description":"Plots the histogram of residuals.","help":"RESIDUALHISTOGRAM |RESIDHISTOGRAM","type":"choice"},{"name":"NONE","description":"Suppresses all plots.","type":"standalone"}]},{"name":"PRINTALL","optional":true,"description":"Turns on all the printing-control options. The options set by PRINTALL are DETAILS; the model information options LIST, LISTDEP, LISTDER, XREF, BLOCK, and GRAPH; the FIT task printing options FSRSQ, COVB, CORRB, COVS, CORRS, DW, and COLLIN; and the SOLVE task printing options STATS, THEIL, SOLVEPRINT, and ITPRINT.","type":"standalone"},{"name":"PURGE","optional":true,"description":"Deletes the current model so that a new model can be defined.","type":"standalone"},{"name":"TRACE","optional":true,"description":"Prints the result of each operation in each statement in the model program as it is executed, in addition to the information printed by the FLOW option. This debugging option is needed very rarely and produces voluminous output.","type":"standalone"},{"name":"XREF","optional":true,"description":"Prints a cross-reference of the variables in the model program that shows where each variable was referenced or given a value. The XREF option is normally used in conjunction with the LIST option.","type":"standalone"}]},{"name":"RESTRICT","description":"The RESTRICT statement is used to impose linear and nonlinear restrictions on the parameter estimates. RESTRICT statements refer to the parameters estimated by the associated FIT statement (that is, to either the preceding FIT statement or, in the absence of a preceding FIT statement, to the following FIT statement). You can specify any number of RESTRICT statements. Each restriction is written as an optional name, followed by an expression, followed by an equality operator (=) or an inequality operator (<, >, <=, >=), followed by a second expression: < \"name\" > expression operator expression The optional \"name\" is a string used to identify the restriction in the printed output and in the OUTEST= data set. The operator can be =, <, >, <= , or >=. The operator and second expression are optional.","help":"RESTRICT restriction1 &lt; , restriction2 ...&gt; "},{"name":"RETAIN","description":"Causes a variable that is created by an INPUT or assignment statement to retain its value from one iteration to the next.","help":"RETAIN variable-list1 value1 &lt; variable-list2 value2 ...&gt; "},{"name":"RETURN","description":"Stops executing statements at the current point in the DATA step and returns to a predetermined point in the step.","help":"RETURN"},{"name":"SELECT","description":"","help":""},{"name":"SOLVE","description":"The SOLVE statement specifies that the model be simulated or forecast for input data values and, optionally, selects the variables to be solved. If the list of variables is omitted, all of the model variables declared ENDOGENOUS are solved. If no model variables are declared ENDOGENOUS, then all model variables are solved. (SOLVE statement options are not currently supported for autocompletion.)","help":"SOLVE SATISFY=equation | SATISFY=( equations ) ","arguments":[{"name":"SATISFY=","description":"Specifies a subset of the model equations that the solution values are to satisfy. If the SATISFY= option is not used, the solution is computed to satisfy all the model equations. Note that the number of equations must equal the number of variables solved.","type":"value"}]},{"name":"STOP","description":"The STOP statement halts the execution of all statements that contain it, including DO statements and other control or looping statements. Execution continues with the next top-level source statement.","help":"STOP "},{"name":"TEST","description":"The TEST statement performs tests of nonlinear hypotheses on the model parameters. The TEST statement applies to the parameters estimated by the associated FIT statement (that is, either the preceding FIT statement or, in the absence of a preceding FIT statement, the following FIT statement). You can specify any number of TEST statements.","help":"TEST &lt;LM&gt; &lt;LR&gt; &lt;WALD&gt; ...","arguments":[{"name":"ALL","optional":true,"followsDelimiter":"/","description":"Requests all three types of tests.","type":"standalone"},{"name":"LM","optional":true,"followsDelimiter":"/","aliases":["RAO","LGRANGE"],"description":"Specifies that a Lagrange multiplier test be computed.","type":"standalone"},{"name":"LR","optional":true,"followsDelimiter":"/","aliases":["LIKE"],"description":"Specifies that a likelihood ratio test be computed.","type":"standalone"},{"name":"OUT=","optional":true,"followsDelimiter":"/","description":"Specifies the name of an output SAS data set that contains the test results. The format of the OUT= data set produced by the TEST statement is similar to that of the OUTEST= data set produced by the FIT statement.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"WALD","optional":true,"followsDelimiter":"/","description":"Specifies that a Wald test be computed. WALD is the default.","type":"standalone"}]},{"name":"VAR","aliases":["VARS"],"description":"The VAR statement declares model variables and optionally provides initial values for the lags of the variables.","help":"VAR variables &lt;initial-values&gt; ... "},{"name":"WEIGHT","aliases":["WGT"],"description":"The WEIGHT statement specifies a variable to supply weighting values to use for each observation in estimating parameters. If the weight of an observation is nonpositive, that observation is not used for the estimation. variable must be a numeric variable in the input data set. An alternative weighting method is to use an assignment statement to give values to the special variable _WEIGHT_. The _WEIGHT_ variable must not depend on the parameters being estimated. If both weighting specifications are given, the weights are multiplied together.","help":"WEIGHT variable "},{"name":"WHEN","description":"","help":"WHEN &lt;DO&gt; ","arguments":[{"name":"DO","optional":true,"description":"","type":"standalone"}]}],"interactive":true,"supportSiteInformation":{"docsetId":"etsug","docsetVersion":"latest","docsetTargetFile":"etsug_model_toc.htm"}}