{"name":"MTLEARN","statements":[{"name":"PROC MTLEARN","description":"The MTLEARN procedure implements the multitask learning technique for least squares loss with ℓ1 and graph structure penalizations. It solves multiple related sparse linear regression problems simultaneously. A graph structure encodes the relationships between the problems. PROC MTLEARN shares the data and model parameters among different regression problems and solves the problems simultaneously in order to produce a more robust and accurate predictive model. When used with independent graph tables, PROC MTLEARN also serves as an elastic net regularization solver, which is widely used in feature selection.","help":"PROC MTLEARN <DATA=CAS-libref.data-table> <GRAPHOUT=CAS-libref.data-table> <GRAPHTABLE=CAS-libref.data-table> <GRAPHTYPE=CLUSTER | CUSTOM | FUSE... > <MAXITERS=number> <MODELOUT=CAS-libref.data-table> <NTHREADS=number> <REGL1=number> <REGL2=number> <SEED=random-seed> <TOLERANCE=number>;     \n\tDISPLAY <CASESENSITIVE> <EXCLUDE> <EXCLUDEALL> ...;\n    \n\tDISPLAYOUT <INCLUDEALL> <NOREPLACE> <REPEATED> ...;\n    \n\tINPUT <LEVEL=<INTERVAL>> ;\n    \n\tOUTPUT <COPYVAR=variable | COPYVARS=(variables)> <OUT=CAS-libref.data-table> ;\n    \n\tSAVESTATE <RSTORE=CAS-libref.data-table> ;\n    \n\tTARGET <LEVEL=<INTERVAL>> ;\n","arguments":[{"name":"DATA=","optional":true,"description":"Names the input data table for PROC MTLEARN to use. The default is the most recently created data table. CAS-libref.data-table is a two-level name, where","help":"DATA=*CAS-libref.data-table*","type":"dataSet"},{"name":"GRAPHOUT=","optional":true,"description":"Specifies the output data table in which to save the graph table. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table.","help":"GRAPHOUT=*CAS-libref.data-table*","type":"dataSet"},{"name":"GRAPHTABLE=","optional":true,"description":"Specifies the user-defined graph table. The first column of the graph table must contain the row ID variable. The graph table must also include all target variables that you specify in the TARGET statement. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the input data table.","help":"GRAPHTABLE=*CAS-libref.data-table*","type":"dataSet"},{"name":"GRAPHTYPE=","optional":true,"description":"Specifies the type of graph table. If you specify the GRAPHTABLE= option, the value of the GRAPHTYPE= option is automatically overwritten with CUSTOM.","help":"GRAPHTYPE=CLUSTER | CUSTOM | FUSE | INDEP","type":"choice","arguments":[{"name":"CLUSTER","description":"Generates a cluster graph table, where all tasks are connected (to a virtual mean task).","type":"standalone"},{"name":"CUSTOM","description":"Uses the graph table that you specify.","type":"standalone"},{"name":"FUSE","description":"Generates a fuse graph table, where each task is connected to the next task in the target list.","type":"standalone"},{"name":"INDEP","description":"Generates an independent graph table, where all tasks are independent.","type":"standalone"}]},{"name":"MAXITERS=","optional":true,"description":"Specifies the maximum number of iterations for the algorithm to perform, where number is an integer greater than or equal to 1.","help":"MAXITERS=*number*","type":"value"},{"name":"MODELOUT=","optional":true,"description":"Specifies the output data table in which to save the estimated multitask regression weights. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table.","help":"MODELOUT=*CAS-libref.data-table*","type":"dataSet"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads to use for the computation, where number is an integer greater than 0. The default value is the maximum number of available threads per computer.","help":"NTHREADS=*number*","type":"value"},{"name":"REGL1=","optional":true,"description":"Specifies the ℓ1 (LASSO) penalization weight, where number is greater than or equal to 0.","help":"REGL1=*number*","type":"value"},{"name":"REGL2=","optional":true,"description":"Specifies the ℓ2 graph penalization weight, where number is greater than or equal to 0.","help":"REGL2=*number*","type":"value"},{"name":"SEED=","optional":true,"description":"Specifies an integer that is used to start the pseudorandom number generator. This option enables you to reproduce the same sample output, but only when NTHREADS=1. If you do not specify a seed, or if you specify a value less than or equal to 0, the seed is generated from reading the time of day from the computer’s clock.","help":"SEED=*random-seed*","type":"value"},{"name":"TOLERANCE=","optional":true,"description":"Specifies the optimization tolerance (absolute ℓ2 difference of solution) as a stopping criterion, where number is greater than 0. The default value is 1E–6.","help":"TOLERANCE=*number*","type":"value"}]},{"name":"DISPLAY","description":"The DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement is similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve performance when a large number of tables could be generated (such as in BY-group processing). The procedure processes the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. Because ODS statements are processed on a SAS client, all the display tables generated are first sent to the client and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY statement takes precedence over the ODS statements.","help":"DISPLAY &lt;CASESENSITIVE&gt; &lt;EXCLUDE&gt; &lt;EXCLUDEALL&gt; ...","arguments":[{"name":"CASESENSITIVE","optional":true,"followsDelimiter":"/","description":"Performs a case-sensitive comparison of table names in the table-list to display table names when tables are subsetted for display. To preserve case, you must enclose table names in the table-list in quotation marks.","type":"standalone"},{"name":"EXCLUDE","optional":true,"followsDelimiter":"/","description":"Displays all display tables except those specified in the table-list.","type":"standalone"},{"name":"EXCLUDEALL","optional":true,"followsDelimiter":"/","description":"Suppresses display of all tables. This option takes precedence over the other options.","type":"standalone"},{"name":"TRACE","optional":true,"followsDelimiter":"/","description":"Displays the display table names, labels, and paths.","type":"standalone"}]},{"name":"DISPLAYOUT","description":"The DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This statement is similar to the ODS OUTPUT statement. The table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a key=value format: key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the CAS output table name. key specifies key as the ODS table name and also as the CAS output table name. Table names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT statement does not support regular expressions.","help":"DISPLAYOUT &lt;INCLUDEALL&gt; &lt;NOREPLACE&gt; &lt;REPEATED&gt; ...","arguments":[{"name":"INCLUDEALL","optional":true,"followsDelimiter":"/","description":"Creates output CAS tables for all display tables. The name of the created output CAS table is the same as the corresponding display table name. If you specify this option, the table-spec-list specification is ignored.","type":"standalone"},{"name":"NOREPLACE","optional":true,"followsDelimiter":"/","description":"Does not replace an existing CAS output table of the same name.","type":"standalone"},{"name":"REPEATED","optional":true,"followsDelimiter":"/","description":"Replicates all CAS output tables on all nodes.","type":"standalone"}]},{"name":"INPUT","description":"The INPUT statement specifies the names of variables to be used in training. Only interval, binary, and nominal variables are accepted. If you want to use different options for different variables, you can specify multiple INPUT statements.","help":"INPUT &lt;LEVEL=&lt;INTERVAL&gt;&gt; ","arguments":[{"name":"LEVEL=","optional":true,"followsDelimiter":"/","description":"Specifies the level of measurement of the variables.","help":"LEVEL=INTERVAL*INTERVAL*","type":"value","arguments":[{"name":"INTERVAL","followsDelimiter":"/","description":"Specifies that the level of measurement of the variables is interval.","type":"standalone"}]}]},{"name":"OUTPUT","description":"The OUTPUT statement creates an output data table to contain the results of the procedure run.","help":"OUTPUT &lt;COPYVAR=variable | COPYVARS=(variables)&gt; &lt;OUT=CAS-libref.data-table&gt; ","arguments":[{"name":"COPYVAR=","optional":true,"aliases":["COPYVARS="],"description":"Copies one or more variables from the input data table to the output data table.","type":"value"},{"name":"OUT=","optional":true,"description":"Names the output data table for PROC MTLEARN to use. You must specify this option before any other options. CAS-libref.data-table is a two-level name, where","help":"OUT=*CAS-libref.data-table*","type":"dataSet"}]},{"name":"SAVESTATE","description":"The SAVESTATE statement creates an analytic store for the model and saves it as a binary object in a data table. You can use the analytic store in the ASTORE procedure to score new data.","help":"SAVESTATE &lt;RSTORE=CAS-libref.data-table&gt; ","arguments":[{"name":"RSTORE=","optional":true,"description":"Specifies a data table in which to save the analytic store for the model. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table.","help":"RSTORE=*CAS-libref.data-table*","type":"dataSet"}]},{"name":"TARGET","description":"The TARGET statement names the target variables. The targets must be of interval type and must be different from the variables in the INPUT statement. You must specify at least one target variable. Missing values in the target variables are allowed.","help":"TARGET &lt;LEVEL=&lt;INTERVAL&gt;&gt; ","arguments":[{"name":"LEVEL=","optional":true,"description":"Specifies the level of measurement of the variables.","help":"LEVEL=INTERVAL*INTERVAL*","type":"value","arguments":[{"name":"INTERVAL","description":"Specifies that the level of measurement of the variables is interval.","type":"standalone"}]}]}],"supportSiteInformation":{"docsetId":"casml","docsetVersion":"v_033","docsetTargetFile":"casml_mtlearn_toc.htm"}}