{"name":"NLIN","statements":[{"name":"PROC NLIN","description":"The NLIN procedure fits nonlinear regression models and estimates the parameters by nonlinear least squares or weighted nonlinear least squares. You specify the model with programming statements. This gives you great flexibility in modeling the relationship between the response variable and independent (regressor) variables. It does, however, require additional coding compared to model specifications in linear modeling procedures such as the REG, GLM, and MIXED procedures. † Estimating parameters in a nonlinear model is an iterative process that commences from starting values. You need to declare the parameters in your model and supply their initial values for the NLIN procedure. You do not need to specify derivatives of the model equation with respect to the parameters. Although facilities for specifying first and second derivatives exist in the NLIN procedure, it is not recommended that you specify derivatives this way. Obtaining derivatives from user-specified expressions predates the high-quality automatic differentiator that is now used by the NLIN procedure.","help":"PROC NLIN <ALPHA=α> <BEST=n> <BIAS> <CONVERGE=c> <CONVERGEOBJ=c> <CONVERGEPARM=c> <DATA=SAS-data-set> <FLOW> <G4> <HOUGAARD> <LIST> <LISTCODE> <LISTDEP> <LISTDER> <MAXITER= | MAXIT=i <n>> <MAXSUBIT=n> <METHOD=GAUSS | MARQUARDT | NEWTON... > <NLINMEASURES> <NOHALVE> <NOITPRINT> <NOPRINT> <OUTEST=SAS-data-set> <PLOTS=ALL | NONE | DIAGNOSTIC... > <PRINT> <RHO=value> <SAVE> <SIGSQ=value> <SINGULAR=s> <SMETHOD=HALVE | GOLDEN | CUBIC> <TAU=value> <TOTALSS> <TRACE> <UNCORRECTEDDF> <XREF>;     \n\tARRAY <_ALL_> <_NUMERIC_> <_TEMPORARY_> ...; \n   \n\tBOUNDS inequality <, ..., inequality> ; \n   \n\tBY <DESCENDING> <NOTSORTED> ; \n   \n\tCALL name ( argument-1 [, ...argument-n] ); \n   \n\tCONTROL variable <=values> <...variable <=values>> ;     \n\t;     \n\tDO <OVER> <> <> ...; \n   \n\tELSE <DO> <IF> <THEN> ...; \n   \n\tEND;     \n\tGOTO label; \n   \n\tID variables ;     \n\tIF <DO> <THEN> <WHEN> ...; \n   \n\tLINK statement-label;     \n\tMODEL dependent=expression ;     \n\tOUTPUT H=name L95=name OUT=SAS-data-set ...;     \n\tPARAMETERS <PDATA=SAS-data-set> ; \n   \n\tPROFILE <ALL> <CONFCURV> <JACKKNIFE> ...; \n   \n\tPUT <_PAGE_> ;  \n  \n\tRETAIN variable <=values> <...variable <=values>> ;     \n\tRETURN;     \n\t; ","arguments":[{"name":"ALPHA=","optional":true,"description":"Specifies the level of significance α used in the construction of 100(1 - α)% confidence intervals. The value must be strictly between 0 and 1; the default value of α=0.05 results in 95% intervals.","type":"value"},{"name":"BEST=","optional":true,"description":"Requests that PROC NLIN display the residual sums of squares only for the best n combinations of possible starting values from the grid.","help":"BEST=*n*","type":"value"},{"name":"BIAS","optional":true,"description":"[Experimental under SAS 9.3] Adds Box’s bias and percentage bias measures to the \"Parameter Estimates\" table (Box 1971). Box’s bias measure, along with Hougaard’s measure of skweness, is used for assessing a parameter estimator’s close-to-linear behavior (Ratkowsky 1983, 1990). Hence, it is useful for identifying problematic parameters (Seber and Wild 1989, sec. 4.7.1). When you specify the BIAS option, Box’s bias measure (Box 1971) and the percentage bias (the bias expressed as a percentage of the least-squares estimator) are added for each parameter to the \"Parameter Estimates\" table. Ratkowsky (1983, p. 21) takes a percentage bias in excess of 1% to be a good rule of thumb for indicating nonlinear behavior.","type":"standalone"},{"name":"CONVERGE=","optional":true,"description":"Specifies the convergence criterion for PROC NLIN. For all iterative methods the relative offset convergence measure of Bates and Watts is used by default to determine convergence.","help":"CONVERGE=*c*","type":"value"},{"name":"CONVERGEOBJ=","optional":true,"description":"Uses the change in the LOSS function as the convergence criterion and tunes the criterion.","help":"CONVERGEOBJ=*c*","type":"value"},{"name":"CONVERGEPARM=","optional":true,"description":"Uses the maximum change among parameter estimates as the convergence criterion and tunes the criterion.","help":"CONVERGEPARM=*c*","type":"value"},{"name":"DATA=","optional":true,"description":"Specifies the input SAS data set to be analyzed by PROC NLIN. If you omit the DATA= option, the most recently created SAS data set is used.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"FLOW","optional":true,"description":"Displays a message for each statement in the model program as it is executed. This debugging option is rarely needed, and it produces large amounts of output.","type":"standalone"},{"name":"G4","optional":true,"description":"Uses a Moore-Penrose inverse (-inverse) in parameter estimation. See Kennedy and Gentle (1980) for details.","type":"standalone"},{"name":"HOUGAARD","optional":true,"description":"Adds Hougaard’s measure of skewness to the \"Parameter Estimates\" table (Hougaard 1982, 1985).","type":"standalone"},{"name":"LIST","optional":true,"description":"Displays the model program and variable lists. The LIST option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTCODE","optional":true,"description":"Displays the derivative tables and the compiled program code. The LISTCODE option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTDEP","optional":true,"description":"Produces a report that lists, for each variable in the program, the variables that depend on it and on which it depends. The LISTDEP option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTDER","optional":true,"description":"Displays a table of derivatives. This table lists each nonzero derivative computed for the problem. The LISTDER option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"MAXITER=","optional":true,"description":"Specifies the maximum number i of iterations in the optimization process. The default values are:","type":"value"},{"name":"MAXSUBIT=","optional":true,"description":"Places a limit on the number of step halvings. The value of MAXSUBIT must be a positive integer and the default value is n=30.","help":"MAXSUBIT=*n*","type":"value"},{"name":"METHOD=","optional":true,"description":"Specifies the iterative method employed by the NLIN procedure in solving the nonlinear least-squares problem.","help":"METHOD=GAUSS | MARQUARDT | NEWTON | GRADIENT","type":"choice","arguments":[{"name":"GAUSS","description":"Specifies the Gauss method","type":"standalone"},{"name":"MARQUARDT","description":"Specifies the Marquardt method.","type":"standalone"},{"name":"NEWTON","description":"Specifies the Newton method.","type":"standalone"},{"name":"GRADIENT","description":"Specifies the gradient method","type":"standalone"}]},{"name":"NLINMEASURES","optional":true,"description":"[Experimental under SAS 9.3] Displays the global nonlinearity measures table. These measures include the maximum intrinsic and parameter-effects curvatures (Bates and Watts 1980), the root mean square (RMS) intrinsic and parameter-effects curvatures and the critical curvature value (Bates and Watts 1980). In addition, the variances of the ordinary and projected residuals are included. According to Bates and Watts (1980), both intrinisic and parameter-effects curvatures are deemed negligible if they are less than the critical curvature value.","type":"standalone"},{"name":"NOHALVE","optional":true,"description":"Removes the restriction that the objective value must decrease at every iteration.","type":"standalone"},{"name":"NOITPRINT","optional":true,"description":"Suppresses the display of the \"Iteration History\" table.","type":"standalone"},{"name":"NOPRINT","optional":true,"description":"Suppresses the normal display of results.","type":"standalone"},{"name":"OUTEST=","optional":true,"description":"Specifies an output data set that contains the parameter estimates produced at each iteration.","help":"OUTEST=*SAS-data-set*","type":"dataSet"},{"name":"PLOTS=","optional":true,"description":"RESIDUALTYPE=PROJ sets the choice to projected residuals. By default, both residual types are included, which can also be effected by setting RESIDUALTYPE=BOTH. STATS=ALL | DEFAULT | NONE | (plot-statistics) requests the statistics to be included in all plots, except the ResidualPlots and the unpacked diagnostics plots. UNPACK suppresses paneling.","help":"PLOTS=ALL | NONE | DIAGNOSTIC | FITPLOT | RESIDUALS","type":"choice","arguments":[{"name":"ALL","description":"Produces all appropriate plots.","type":"standalone"},{"name":"NONE","description":"Suppresses all plots.","type":"standalone"},{"name":"DIAGNOSTIC","description":"Syntax: DIAGNOSTICS <(diagnostics-options)> Produces a summary panel of fit diagnostics, leverage plots, and local-influence plots. The fit diagnostics panel includes: o histogram of the ordinary residuals o histogram of the projected residuals o response variable values versus the predicted values o expectation or mean of the ordinary residuals versus the predicted values o ordinary and projected residuals versus the predicted values o standardized ordinary and projected residuals versus the predicted values o standardized ordinary and projected residuals versus the tangential leverage o standardized ordinary and projected residuals versus the Jacobian leverage o box plot of the ordinary and projected residuals if you specify the STATS=NONE suboption The leverage and local influence plots are produced separately. The leverage plot is an index plot of the tangential and Jacobian leverages (by observation), and the local-influence plot contains the local influence by observation for a perturbation of the response variable. You can specify the following diagnostics-options: RESIDUALTYPE=RAW | PROJ | BOTH specifies the residual type to be plotted in the panel. LEVERAGETYPE=TAN | JAC | BOTH specifies the leverage type to be plotted in the leverage plot. LEVERAGETYPE=TAN specifies that only the tangential leverage be included in the leverage plot, and LEVERAGETYPE=JAC specifies that only the Jacobian leverage be included. LABELOBS specifies that the leverage and local-infuence plots be labeled with the observation number. Only these two plots are affected by this option. STATS=stats-options determines which statistics are included in the panel. UNPACK produces the plots in the diagnostics panel as individual plots. The statistics panel is not included in the individual plots, even if STATS= global-plot-option or STATS= diagnostics-option or both are specified.","type":"standalone"},{"name":"FITPLOT","aliases":["FIT"],"description":"Syntax: FITPLOT | FIT <(fit-options)> Produces, depending on the number of regressors, a scatter or contour fit plot. For a single-regressor model, a scatter plot of the data overlaid with the regression curve, confidence, and prediction bands is produced. For two-regressor models, a contour fit plot of the model with overlaid data is produced. If the model contains more than two regressors, no fit plot is produced. You can specify the following fit-options: NOCLI suppresses the prediction limits for single-regressor models. NOCLM suppresses the confidence limits for single-regressor models. NOLIMITS suppresses the confidence and prediction limits for single-regressor models. OBS=GRADIENT | NONE | OUTLINE | OUTLINEGRADIENT controls how the observations are displayed. The suboptions are as follows: OBS=GRADIENT specifies that observations be displayed as circles colored by the observed response. The same color gradient is used to display the fitted surface and the observations. OBS=NONE suppresses the observations. OBS=OUTLINE specifies that observations be displayed as circles with a border but with a completely transparent fill. OBS=OUTLINEGRADIENT is the same as OBS=GRADIENT except that a border is shown around each observation. This option is useful for identifying the location observations for which the residuals are small, because at these points the color of the observations and the color of the surface are indistinguishable. CONTLEG specifies that a continous legend be included in the contour fit plot of a two-regressor model. STATS=stats-options determines which model fit statistics are included in the panel.","type":"standalone"},{"name":"RESIDUALS","description":"","type":"standalone"}]},{"name":"PRINT","optional":true,"description":"Displays the result of each statement in the program as it is executed.","type":"standalone"},{"name":"RHO=","optional":true,"description":"Specifies a value that controls the step-size search. By default RHO=0.1, except when METHOD=MARQUARDT.","help":"RHO=*value*","type":"value"},{"name":"SAVE","optional":true,"description":"Specifies that, when the iteration limit is exceeded, the parameter estimates from the final iteration be output to the OUTEST= data set.","type":"standalone"},{"name":"SIGSQ=","optional":true,"description":"Specifies a value to use as the estimate of the residual variance in lieu of the estimated mean-squared error.","help":"SIGSQ=*value*","type":"value"},{"name":"SINGULAR=","optional":true,"description":"Specifies the singularity criterion, s, which is the absolute magnitude of the smallest pivot value allowed when inverting the Hessian or the approximation to the Hessian.","help":"SINGULAR=*s*","type":"value"},{"name":"SMETHOD=","optional":true,"description":"Specifies the step-size search method. The default is SMETHOD=HALVE.","help":"SMETHOD=HALVE | GOLDEN | CUBIC","type":"choice","arguments":[{"name":"HALVE","description":"The default method of finding the step size k is step halving.","type":"standalone"},{"name":"GOLDEN","description":"The step size k is determined by a golden section search.","type":"standalone"},{"name":"CUBIC","description":"Performs a cubic interpolation to estimate the step size.","type":"standalone"}]},{"name":"TAU=","optional":true,"description":"Specifies a value that is used to control the step-size search. The default is TAU=1, except when METHOD=MARQUARDT.","help":"TAU=*value*","type":"value"},{"name":"TOTALSS","optional":true,"description":"Adds to the analysis of variance table the uncorrected total sum of squares in models that have an (implied) intercept, and adds the corrected total sum of squares in models that do not have an (implied) intercept.","type":"standalone"},{"name":"TRACE","optional":true,"description":"Displays the result of each operation in each statement in the model program as it is executed.","type":"standalone"},{"name":"UNCORRECTEDDF","optional":true,"description":"Specifies that no degrees of freedom be lost when a bound is active.","type":"standalone"},{"name":"XREF","optional":true,"description":"Displays a cross-reference of the variables in the program showing where each variable is referenced or given a value.","type":"standalone"}]},{"name":"ARRAY","description":"Defines the elements of an array.","help":"ARRAY &lt;_ALL_&gt; &lt;_NUMERIC_&gt; &lt;_TEMPORARY_&gt; ...","arguments":[{"name":"_ALL_","optional":true,"description":"Specifies all variables.","type":"standalone"},{"name":"_CHARACTER_","optional":true,"description":"Specifies all character variables.","type":"standalone"},{"name":"_NUMERIC_","optional":true,"description":"Specifies all numeric variables.","type":"standalone"},{"name":"_TEMPORARY_","optional":true,"description":"Creates a list of temporary data elements.","type":"standalone"}]},{"name":"BOUNDS","description":"The BOUNDS statement restricts the parameter estimates so that they lie within specified regions.","help":"BOUNDS inequality &lt;, ..., inequality&gt; "},{"name":"BY","description":"Obtains separate analyses on observations in groups defined by the BY variables.","help":"BY &lt;DESCENDING&gt; &lt;NOTSORTED&gt; ","arguments":[{"name":"DESCENDING","optional":true,"description":"Specifies that the observations are sorted in descending order by the variable that immediately follows the word DESCENDING in the BY statement.","type":"standalone"},{"name":"NOTSORTED","optional":true,"description":"Specifies that observations are not necessarily sorted in alphabetic or numeric order.","type":"standalone"}]},{"name":"CALL","description":"The CALL statement invokes the named library subroutine. The values that are determined for each argument expression are passed to the subroutine when the subroutine is invoked. The subroutine can update the values of PROC OPTMODEL parameters and variables when an argument is an identifier-expression.","help":"CALL name ( argument-1 [, ...argument-n] )"},{"name":"CONTROL","description":"The CONTROL statement declares control variables and specifies their values. A control variable is like a retained variable (see the section RETAIN Statement) except that it is retained across iterations, and the derivative of the model with respect to a control variable is always zero.","help":"CONTROL variable &lt;=values&gt; &lt;...variable &lt;=values&gt;&gt; "},{"name":"DER","description":"The DER statement specifies first or second partial derivatives. By default, analytical derivatives are automatically computed. However, you can specify the derivatives yourself by using the DER.parm syntax. Use the first form shown to specify first partial derivatives, and use the second form to specify second partial derivatives. Note that the DER.parm syntax is retained for backward compatibility. The automatic analytical derivatives are, in general, a better choice.","help":""},{"name":"DO","description":"","help":"DO &lt;OVER&gt; &lt;&gt; &lt;&gt; ...","arguments":[{"name":"BY","optional":true,"description":"Precedes an increment integer (other than 0) or an expression that generates an integer to be added to the value of the index variable in each iteration of the DO loop.","type":"standalone"},{"name":"OVER","optional":true,"description":"","type":"standalone"},{"name":"TO","optional":true,"description":"Separates the start and stop integers or expressions that control the number of times the portion of the DATA step between the iterative DO and END statements is processed.","type":"standalone"},{"name":"UNTIL","optional":true,"description":"...more SAS statements... END","type":"standalone"},{"name":"WHILE","optional":true,"description":"","type":"standalone"}]},{"name":"ELSE","description":"If the condition in a IF-THEN statement is false and an ELSE statement is present, then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"GOTO","description":"Jumps to a new statement.","help":"GOTO label"},{"name":"ID","description":"The ID statement specifies additional variables to place in the output data set created by the OUTPUT statement.","help":"ID variables "},{"name":"IF","description":"","help":"IF &lt;DO&gt; &lt;THEN&gt; &lt;WHEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"GO","optional":true,"aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GO TO","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"PUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"SET","optional":true,"description":"Reads an observation from one or more SAS data sets.","type":"standalone"},{"name":"STOP","optional":true,"description":"Action statement in an IF-THEN construct. Stops execution of the current DATA step.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"},{"name":"WHEN","optional":true,"description":"WHEN statement in an IF-THEN-WHEN construct.","type":"standalone"}]},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK statement-label"},{"name":"MODEL","description":"The MODEL statement defines the prediction equation by declaring the dependent variable and defining an expression that evaluates predicted values.","help":"MODEL dependent=expression "},{"name":"OUTPUT","description":"The OUTPUT statement specifies an output data set to contain statistics calculated for each observation.","help":"OUTPUT H=name L95=name OUT=SAS-data-set ...","arguments":[{"name":"H=","description":"Specifies a variable that contains the leverage.","help":"H=*name*","type":"value"},{"name":"L95=","description":"Specifies a variable that contains the lower bound of an approximate 95% confidence interval for an individual prediction.","help":"L95=*name*","type":"value"},{"name":"L95M=","description":"Specifies a variable that contains the lower bound of an approximate 95% confidence interval for the expected value (mean).","help":"L95M=*name*","type":"value"},{"name":"LCL=","description":"Specifies a variable that contains the lower bound of an approximate 100(1 - α)% confidence interval for an individual prediction.","help":"LCL=*name*","type":"value"},{"name":"LCLM=","description":"Specifies a variable that contains the lower bound of an approximate 100(1 - α)% confidence interval for the expected value (mean).","help":"LCLM=*name*","type":"value"},{"name":"OUT=","description":"Specifies the SAS data set to be created by PROC NLIN when an OUTPUT statement is included.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"PARMS=","description":"Specifies variables in the output data set that contains parameter estimates.","type":"value"},{"name":"PREDICTED=","aliases":["P="],"description":"Specifies a variable in the output data set that contains the predicted values of the dependent variable.","type":"value"},{"name":"RESIDUAL=","aliases":["R="],"description":"Specifies a variable in the output data set that contains the residuals (observed minus predicted values).","type":"value"},{"name":"SSE=","aliases":["ESS="],"description":"Specifies a variable in the output data set that contains the residual sum of squares finally determined by the procedure.","type":"value"},{"name":"STDI=","description":"Specifies a variable that contains the standard error of the individual predicted value.","help":"STDI=*name*","type":"value"},{"name":"STDP=","description":"Specifies a variable that contains the standard error of the mean predicted value.","help":"STDP=*name*","type":"value"},{"name":"STDR=","description":"Specifies a variable that contains the standard error of the residual.","help":"STDR=*name*","type":"value"},{"name":"STUDENT=","description":"Specifies a variable that contains the studentized residuals. These are residuals divided by their estimated standard deviation.","help":"STUDENT=*name*","type":"value"},{"name":"U95=","description":"Specifies a variable that contains the upper bound of an approximate 95% confidence interval for an individual prediction.","help":"U95=*name*","type":"value"},{"name":"U95M=","description":"Specifies a variable that contains the upper bound of an approximate 95% confidence interval for the expected value (mean).","help":"U95M=*name*","type":"value"},{"name":"UCL=","description":"Specifies a variable that contains the upper bound of an approximate 100(1 - α)% confidence interval an individual prediction.","help":"UCL=*name*","type":"value"},{"name":"UCLM=","description":"Specifies a variable that contains the upper bound of an approximate 100(1 - α)% confidence interval for the expected value (mean).","help":"UCLM=*name*","type":"value"},{"name":"WEIGHT=","description":"Specifies a variable in the output data set that contains values of the special variable _WEIGHT_.","help":"WEIGHT=*name*","type":"value"},{"name":"ALPHA=","optional":true,"followsDelimiter":"/","description":"Specifies the level of significance α for 100( 1- α)% confidence intervals.","type":"value"},{"name":"DER","optional":true,"followsDelimiter":"/","description":"Saves the first derivatives of the model with respect to the parameters to the OUTPUT data set.","type":"standalone"}]},{"name":"PARAMETERS","aliases":["PARMS"],"description":"A PARAMETERS (or PARMS) statement is required. The purpose of this statement is to provide starting values for the NLIN procedure.","help":"PARAMETERS &lt;PDATA=SAS-data-set&gt; ","arguments":[{"name":"PDATA=","optional":true,"followsDelimiter":"/","description":"Enables you to assign starting values for parameters through a SAS data set. The data set must contain at least two variables that identify the parameter and contain starting values, respectively. The character variable identifying the parameters must be named Parameter or Parm. The numeric variable containing the starting value must be named Estimate or Est. This enables you, for example, to use the contents of the \"ParameterEstimates\" table from one PROC NLIN run to supply starting values for a subsequent run.","help":"PDATA=*SAS-data-set*","type":"dataSet"}]},{"name":"PROFILE","description":"A PROFILE statement selects parameters for profiling to assess their nonlinear characteristics. It can also gauge the influence of each observation on the selected parameters. To produce the plots that are controlled by the PROFILE statement, ODS Graphics must be enabled. PROC NLIN ignores PROFILE statements for nonconvergent and singular models.","help":"PROFILE &lt;ALL&gt; &lt;CONFCURV&gt; &lt;JACKKNIFE&gt; ...","arguments":[{"name":"ALL","optional":true,"followsDelimiter":"/","description":"produces all appropriate plots for the parameters that are listed in the PROFILE statement. This option overrides all other options. If the PROFDATA= option is specified, the values of the corresponding statistics are written to the data set.","type":"standalone"},{"name":"CONFCURV","optional":true,"followsDelimiter":"/","description":"Produces confidence curves for each parameter listed in the PROFILE statement. If the PROFDATA= option is specified, the values of the corresponding statistics are written to the data set.","type":"standalone"},{"name":"JACKKNIFE","optional":true,"followsDelimiter":"/","description":"Produces, for each parameter listed in the PROFILE statement, plots of absolute relative percentage change in the value of the parameter that results from a fit to a jackknife-resampled datum versus observation number. The jackknife resampling is performed with a leave-one-out method. If the PROFDATA= option is specified, the values of the corresponding statistics are written to the data set.","type":"standalone"},{"name":"PROFDATA=","optional":true,"followsDelimiter":"/","description":"Specifies the SAS data set to be created by PROC NLIN when a PROFILE statement is included.","help":"PROFDATA=*SAS-data-set*","type":"dataSet"},{"name":"RANGE=","optional":true,"followsDelimiter":"/","description":"Specifies a profiling range for each parameter listed in the PROFILE statement. βf , βt and βb represent the starting, final, and consecutive incremental values of the range in terms of the standard errors of the parameters to be profiled. If you do not specify the RANGE= option, PROC NLIN uses –2, 2, and 0.2 as default values for βf , βt , and βb, respectively.","type":"value"},{"name":"TPLOT","optional":true,"followsDelimiter":"/","description":"Produces profile t plots for each parameter listed in the PROFILE statement. If the PROFDATA= option is specified, the values of the corresponding statistics are written to the data set.","type":"standalone"}]},{"name":"PUT","description":"The PUT statement writes text data to the current output file.","help":"PUT &lt;_PAGE_&gt; ","arguments":[{"name":"_PAGE_","optional":true,"description":"Outputs any pending line data and moves to the top of the next page.","type":"standalone"}]},{"name":"RETAIN","description":"The RETAIN statement declares retained variables and specifies their values. A retained variable is like a control variable (see the CONTROL Statement) except that it is retained only within iterations. An iteration involves a single pass through the data set.","help":"RETAIN variable &lt;=values&gt; &lt;...variable &lt;=values&gt;&gt; "},{"name":"RETURN","description":"Stops executing statements at the current point in the DATA step and returns to a predetermined point in the step.","help":"RETURN"},{"name":"SELECT","description":"","help":""}],"supportSiteInformation":{"docsetId":"statug","docsetVersion":"latest","docsetTargetFile":"statug_nlin_toc.htm"}}