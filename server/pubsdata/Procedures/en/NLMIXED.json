{"name":"NLMIXED","statements":[{"name":"PROC NLMIXED","description":"The NLMIXED procedure fits nonlinear mixed models—-that is, models in which both fixed and random effects enter nonlinearly. These models have a wide variety of applications, two of the most common being pharmacokinetics and overdispersed binomial data. PROC NLMIXED enables you to specify a conditional distribution for your data (given the random effects) having either a standard form (normal, binomial, Poisson) or a general distribution that you code using SAS programming statements. † PROC NLMIXED fits nonlinear mixed models by maximizing an approximation to the likelihood integrated over the random effects. Different integral approximations are available, the principal ones being adaptive Gaussian quadrature and a first-order Taylor series approximation. A variety of alternative optimization techniques are available to carry out the maximization; the default is a dual quasi-Newton algorithm.","help":"PROC NLMIXED <ABSCONV= | ABSTOL=r> <ABSFCONV=r <n> | ABSFTOL=r<n>> <ABSGCONV= | ABSGTOL=r <n>> <ABSXCONV= | ABSXTOL=r <n>> <ALPHA=α> <ASINGULAR | ASING=r> <CFACTOR=f> <CORR> <COV> <COVSING=r > 0> <DAMPSTEP | DS <=r>> <DATA=SAS-data-set> <DF=d> <DIAHES> <EBOPT> <EBSSFRAC=r > 0> <EBSSTOL=r ≥ 0> <EBSTEPS=n ≥ 0> <EBSUBSTEPS=n ≥ 0> <EBTOL=r ≥ 0> <EBZSTART> <ECORR> <ECOV> <EDER> <EMPIRICAL> <FCONV2=r<[n]> | FTOL2=r<[n]>> <FCONV=r<[n]> | FTOL=r<[n]>> <FD=CENTRAL | FORWARD | 100... > <FDHESSIAN=FORWARD | CENTRAL> <FDIGITS=r> <FLOW> <FSIZE=r> <G4=n > 0> <GCONV=r<[n]> | GTOL=r<[n]>> <HESCAL=0 | 1 | 2... > <HESS> <INHESSIAN<=r>> <INSTEP=r> <ITDETAILS> <LCDEACT= | LCD=r> <LCEPSILON= | LCEPS= | LCE=r> <LCSINGULAR= | LCSING= | LCS=r> <LINESEARCH=1 | 2 | 3... > <LIST> <LISTCODE> <LISTDEP> <LISTDER> <LOGNOTE<=n>> <LSPRECISION=r | LSP=r | SPRECISION=r | SP=r> <MAXFUNC=i | MAXFU=i> <MAXITER= | MAXIT=i <n>> <MAXSTEP=r<n>> <MAXTIME=r> <METHOD=FIRO | GAUSS | HARDY... > <MINITER= | MINIT=i> <MSINGULAR= | MSING=r > 0> <NOAD> <NOADSCALE> <OPTCHECK<=r>> <OUTQ=SAS-data-set> <QFAC=r > 0> <QMAX=r > 0> <QPOINTS=n > 0> <QSCALEFAC=r > 0> <QTOL=r > 0> <RESTART= | REST=i > 0> <SEED=i> <SINGCHOL=r > 0> <SINGHESS=r > 0> <SINGSWEEP=r > 0> <SINGVAR=r > 0> <START> <SUBGRADIENT=SAS-data-set> <TECHNIQUE=CONGRA | DBLDOG | NMSIMP... > <TRACE> <UPDATE=BFGS | DBFGS | DDFP... > <VSINGULAR= | VSING=r > 0> <XCONV= | XTOL=r <n>> <XREF> <XSIZE=r > 0>;     \n\tABORT <ABEND> <CANCEL> <CANCEL FILE> ...;     \n\tARRAY arrayname [{ dimensions }] [$] [variables and constants] ;   \n \n\tBOUNDS b_con [ , b_con...] ;     \n\tBY <DESCENDING> <NOTSORTED> ; \n   \n\tCALL routine(parameter-1<, ...parameter-n>); \n   \n\tCONTRAST <DF=n> ; \n   \n\tDELETE;     \n\tDO <OVER> <> <> ...; \n   \n\tELSE <DO> <IF> <THEN> ...; \n   \n\tEND;     \n\tESTIMATE <ALPHA=α> <DF=n> ; \n   \n\tGOTO label;     \n\tID names ;     \n\tIF <DO> <THEN> <WHEN> ...; \n   \n\tLINK statement-label;     \n\tMODEL <BINARY(p)> <BINOMIAL(n,p)> <NORMAL(m,v)> ...; \n   \n\t;     \n\tPARMS <BEST=i > 0> <BYDATA> <DATA=SAS-data-set> ...; \n   \n\tPREDICT <ALPHA=α> <DER> OUT=SAS-data-set ...;     \n\tPUT <_PAGE_> ; \n   \n\tRANDOM <ALPHA=α> <NORMAL(m,v)> <SUBJECT= variable> ...;     \n\tREPLICATE variable ;     \n\tRETURN;  \n  \n\t;     \n\tSTOP ; \n   \n\tWHEN <DO> ; ","arguments":[{"name":"ABSCONV=","optional":true,"aliases":["ABSTOL="],"description":"Specifies an absolute function convergence criterion.","type":"value"},{"name":"ABSFCONV=","optional":true,"aliases":["ABSFTOL="],"description":"Specifies an absolute function convergence criterion.","type":"value"},{"name":"ABSGCONV=","optional":true,"aliases":["ABSGTOL="],"description":"Specifies an absolute gradient convergence criterion. Termination requires the maximum absolute gradient element to be small.","type":"value"},{"name":"ABSXCONV=","optional":true,"aliases":["ABSXTOL="],"description":"Specifies the absolute parameter convergence criterion. Termination requires a small Euclidean distance between successive parameter vectors.","type":"value"},{"name":"ALPHA=","optional":true,"description":"Specifies the α level to be used in computing confidence limits. The default value is 0.05.","type":"value"},{"name":"ASINGULAR=","optional":true,"aliases":["ASING="],"description":"Specifies an absolute singularity criterion r, r > 0, for the inversion of the information matrix, which is needed to compute the covariance matrix.","type":"value"},{"name":"CFACTOR=","optional":true,"description":"Specifies a multiplication factor f for the estimated covariance matrix of the parameter estimates.","help":"CFACTOR=*f*","type":"value"},{"name":"CORR","optional":true,"description":"Requests the approximate correlation matrix for the parameter estimates.","type":"standalone"},{"name":"COV","optional":true,"description":"Requests the approximate covariance matrix for the parameter estimates.","type":"standalone"},{"name":"COVSING=","optional":true,"description":"Specifies a nonnegative threshold that determines whether the eigenvalues of a singular Hessian matrix are considered to be zero.","type":"value"},{"name":"DAMPSTEP=","optional":true,"aliases":["DS="],"description":"Specifies that the initial step-size value a⁰ for each line search (used by the QUANEW, CONGRA, or NEWRAP technique) cannot be larger than r times the step-size value used in the former iteration.","type":"value"},{"name":"DATA=","optional":true,"description":"Specifies the input data set.","help":"DATA=*SAS-data-set*","type":"dataSet"},{"name":"DF=","optional":true,"description":"Specifies the degrees of freedom to be used in computing p values and confidence limits. The default value is the number of subjects minus the number of random effects for random effects models, and the number of observations otherwise.","help":"DF=*d*","type":"value"},{"name":"DIAHES","optional":true,"description":"Specifies that only the diagonal of the Hessian is used.","type":"standalone"},{"name":"EBOPT","optional":true,"description":"Requests that a more comprehensive optimization be carried out if the default empirical Bayes optimization fails to converge.","type":"standalone"},{"name":"EBSSFRAC=","optional":true,"description":"Specifies the step-shortening fraction to be used while computing empirical Bayes estimates of the random effects. The default value is 0.8.","type":"value"},{"name":"EBSSTOL=","optional":true,"description":"Specifies the objective function tolerance for determining the cessation of step-shortening while computing empirical Bayes estimates of the random effects. The default value is r = 1E-8.","type":"value"},{"name":"EBSTEPS=","optional":true,"description":"Specifies the maximum number of Newton steps for computing empirical Bayes estimates of random effects. The default value is n=50.","type":"value"},{"name":"EBSUBSTEPS=","optional":true,"description":"Specifies the maximum number of step-shortenings for computing empirical Bayes estimates of random effects. The default value is n=20.","type":"value"},{"name":"EBTOL=","optional":true,"description":"Specifies the convergence tolerance for empirical Bayes estimation.","type":"value"},{"name":"EBZSTART","optional":true,"description":"Requests that a zero be used as starting values during empirical Bayes estimation.","type":"standalone"},{"name":"ECORR","optional":true,"description":"Requests the approximate correlation matrix for all expressions specified in ESTIMATE statements.","type":"standalone"},{"name":"ECOV","optional":true,"description":"Requests the approximate covariance matrix for all expressions specified in ESTIMATE statements.","type":"standalone"},{"name":"EDER","optional":true,"description":"Requests the derivatives of all expressions specified in ESTIMATE statements with respect to each of the model parameters.","type":"standalone"},{"name":"EMPIRICAL","optional":true,"description":"Requests that the covariance matrix of the parameter estimates be computed as a likelihood-based empirical (\"sandwich\") estimator.","type":"standalone"},{"name":"FCONV2=","optional":true,"aliases":["FTOL2="],"description":"Specifies a second function convergence criterion. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can terminate.","type":"value"},{"name":"FCONV=","optional":true,"aliases":["FTOL="],"description":"Specifies the relative function convergence criterion. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can terminate.","type":"value"},{"name":"FD=","optional":true,"description":"Specifies that all derivatives be computed using finite difference approximations.","help":"FD=CENTRAL | FORWARD | 100 | r","type":"choice","arguments":[{"name":"CENTRAL","description":"Uses central differences.","type":"standalone"},{"name":"FORWARD","description":"Uses forward differences.","type":"standalone"},{"name":"100","description":"Is equivalent to specifying FD (without the equal sign)","type":"standalone"},{"name":"r","description":"Uses central differences for the initial and final evaluations of the gradient and for the Hessian.","type":"standalone"}]},{"name":"FDHESSIAN=","optional":true,"aliases":["FDHES=","FDH="],"description":"Specifies that second-order derivatives be computed using finite difference approximations based on evaluations of the gradients.","help":"FDHESSIAN=FORWARD | CENTRAL","type":"choice","arguments":[{"name":"FORWARD","description":"Uses forward differences.","type":"standalone"},{"name":"CENTRAL","description":"Uses central differences.","type":"standalone"}]},{"name":"FDIGITS=","optional":true,"description":"Specifies the number of accurate digits in evaluations of the objective function.","help":"FDIGITS=*r*","type":"value"},{"name":"FLOW","optional":true,"description":"Displays a message for each statement in the model program as it is executed. This debugging option is very rarely needed and produces voluminous output.","type":"standalone"},{"name":"FSIZE=","optional":true,"description":"Specifies the FSIZE parameter of the relative function and relative gradient termination criteria. The default value is r=0.","help":"FSIZE=*r*","type":"value"},{"name":"G4=","optional":true,"description":"Specifies a dimension to determine the type of generalized inverse to use when the approximate covariance matrix of the parameter estimates is singular. The default value of n is 60.","type":"value"},{"name":"GCONV=","optional":true,"aliases":["GTOL="],"description":"Specifies the relative gradient convergence criterion. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process can terminate.","type":"value"},{"name":"HESCAL=","optional":true,"aliases":["HS="],"description":"Specifies the scaling version of the Hessian or crossproduct Jacobian matrix used in NRRIDG, TRUREG, LEVMAR, NEWRAP, or DBLDOG optimization.","help":"HESCAL=0 | 1 | 2 | 3","type":"choice","arguments":[{"name":"0","description":"Specifies that no scaling is done.","type":"standalone"},{"name":"1","description":"Specifies the Moré (1978) scaling update","type":"standalone"},{"name":"2","description":"Specifies the Dennis, Gay, and Welsch (1981) scaling update","type":"standalone"},{"name":"3","description":"Specifies that di is reset in each iteration","type":"standalone"}]},{"name":"HESS","optional":true,"description":"Requests the display of the final Hessian matrix after optimization.","type":"standalone"},{"name":"INHESSIAN=","optional":true,"aliases":["INHESS="],"description":"Specifies how the initial estimate of the approximate Hessian is defined for the quasi-Newton techniques QUANEW and DBLDOG.","type":"value"},{"name":"INSTEP=","optional":true,"aliases":["SALPHA=","RADIUS="],"description":"Reduces the length of the first trial step during the line search of the first iterations.","help":"INSTEP=*r*","type":"value"},{"name":"ITDETAILS","optional":true,"description":"Requests a more complete iteration history, including the current values of the parameter estimates, their gradients, and additional optimization statistics.","type":"standalone"},{"name":"LCDEACT=","optional":true,"aliases":["LCD="],"description":"Specifies a threshold r for the Lagrange multiplier that decides whether an active inequality constraint remains active or can be deactivated.","type":"value"},{"name":"LCEPSILON=","optional":true,"aliases":["LCEPS=","LCE="],"description":"Specifies the range r, r ≥ 0, for active and violated boundary and linear constraints.","type":"value"},{"name":"LCSINGULAR=","optional":true,"aliases":["LCSING=","LCS="],"description":"Specifies a criterion r, r ≥ 0, used in the update of the QR decomposition that decides whether an active constraint is linearly dependent on a set of other active constraints.","type":"value"},{"name":"LINESEARCH=","optional":true,"aliases":["LIS=","SMETHOD=","SM="],"description":"Specifies the line-search method for the CONGRA, QUANEW, and NEWRAP optimization techniques.","help":"LINESEARCH=1 | 2 | 3 | 4 | 5 | 6 | 7 | 8","type":"choice","arguments":[{"name":"1","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is similar to one used by the Harwell subroutine library.","type":"standalone"},{"name":"2","description":"Specifies a line-search method that needs more function calls than gradient calls for quadratic and cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"3","description":"Specifies a line-search method that needs the same number of function and gradient calls for cubic interpolation and cubic extrapolation; this method is implemented as shown in Fletcher (1987) and can be modified to an exact line search by using the LSPRECISION= option.","type":"standalone"},{"name":"4","description":"Specifies a line-search method that needs the same number of function and gradient calls for stepwise extrapolation and cubic interpolation","type":"standalone"},{"name":"5","description":"Specifies a line-search method that is a modified version of LIS=4.","type":"standalone"},{"name":"6","description":"Specifies golden section line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"7","description":"Specifies bisection line search (Polak 1971), which uses only function values for linear approximation.","type":"standalone"},{"name":"8","description":"Specifies Armijo line-search technique (Polak 1971), which uses only function values for linear approximation.","type":"standalone"}]},{"name":"LIST","optional":true,"description":"Displays the model program and variable lists. The LIST option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTCODE","optional":true,"description":"Displays the derivative tables and the compiled program code. The LISTCODE option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTDEP","optional":true,"description":"Produces a report that lists, for each variable in the program, the variables that depend on it and on which it depends. The LISTDEP option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LISTDER","optional":true,"description":"Displays a table of derivatives. This table lists each nonzero derivative computed for the problem. The LISTDER option is a debugging feature and is not normally needed.","type":"standalone"},{"name":"LOGNOTE","optional":true,"description":"Writes periodic notes to the log that describe the current status of computations.","type":"standalone"},{"name":"LSPRECISION=","optional":true,"aliases":["LSP=","SPRECISION=","SP="],"description":"Specifies the degree of accuracy that should be obtained by the line-search algorithms LIS=2 and LIS=3. The default LSPRECISION= values are:","type":"value"},{"name":"MAXFUNC=","optional":true,"aliases":["MAXFU="],"description":"Specifies the maximum number i of function calls in the optimization process. The default values are:","type":"value"},{"name":"MAXITER=","optional":true,"aliases":["MAXIT="],"description":"Specifies the maximum number i of iterations in the optimization process. The default values are:","type":"value"},{"name":"MAXSTEP=","optional":true,"description":"Specifies an upper bound for the step length of the line-search algorithms during the first n iterations.","type":"value"},{"name":"MAXTIME=","optional":true,"description":"Requires the CPU time to be no larger than . The default value of the MAXTIME= option is the largest double floating-point number on your computer.","help":"MAXTIME=*r*","type":"value"},{"name":"METHOD=","optional":true,"description":"Specifies the method for approximating the integral of the likelihood over the random effects.","help":"METHOD=FIRO | GAUSS | HARDY | ISAMP","type":"choice","arguments":[{"name":"FIRO","description":"Specifies the first-order method of Beal and Sheiner (1982).","type":"standalone"},{"name":"GAUSS","description":"Specifies adaptive Gauss-Hermite quadrature (Pinheiro and Bates 1995).","type":"standalone"},{"name":"HARDY","description":"Specifies Hardy quadrature based on an adaptive trapezoidal rule. This method is available only for one-dimensional integrals; that is, you must specify only one random effect.","type":"standalone"},{"name":"ISAMP","description":"Specifies adaptive importance sampling (Pinheiro and Bates 1995).","type":"standalone"}]},{"name":"MINITER=","optional":true,"aliases":["MINIT="],"description":"Specifies the minimum number of iterations. The default value is 0.","type":"value"},{"name":"MSINGULAR=","optional":true,"aliases":["MSING="],"description":"Specifies a relative singularity criterion for the computation of the inertia (number of positive, negative, and zero eigenvalues) of the Hessian and its projected forms.","type":"value"},{"name":"NOAD","optional":true,"description":"Requests that the Gaussian quadrature be nonadaptive; that is, the quadrature points are centered at zero for each of the random effects and the current random-effects variance matrix is used as the scale matrix.","type":"standalone"},{"name":"NOADSCALE","optional":true,"description":"Requests nonadaptive scaling for adaptive Gaussian quadrature; that is, the quadrature points are centered at the empirical Bayes estimates for the random effects, but the current random-effects variance matrix is used as the scale matrix.","type":"standalone"},{"name":"OPTCHECK","optional":true,"description":"Computes the function values f(θi) of a grid of points θi in a ball of radius of r about θ.","type":"standalone"},{"name":"OUTQ=","optional":true,"description":"Specifies an output data set containing the quadrature points used for numerical integration.","help":"OUTQ=*SAS-data-set*","type":"dataSet"},{"name":"QFAC=","optional":true,"description":"Specifies the additive factor used to adaptively search for the number of quadrature points.","type":"value"},{"name":"QMAX=","optional":true,"description":"Specifies the maximum number of quadrature points permitted before the adaptive search is aborted.","type":"value"},{"name":"QPOINTS=","optional":true,"description":"Specifies the number of quadrature points to be used during evaluation of integrals.","type":"value"},{"name":"QSCALEFAC=","optional":true,"description":"Specifies a multiplier for the scale matrix used during quadrature calculations. The default value is 1.0.","type":"value"},{"name":"QTOL=","optional":true,"description":"Specifies the tolerance used to adaptively select the number of quadrature points.","type":"value"},{"name":"RESTART=","optional":true,"aliases":["REST="],"description":"Specifies that the QUANEW or CONGRA algorithm is restarted with a steepest descent/ascent search direction after at most i iterations, i > 0.","type":"value"},{"name":"SEED=","optional":true,"description":"Specifies the random number seed for METHOD=ISAMP.","help":"SEED=*i*","type":"value"},{"name":"SINGCHOL=","optional":true,"description":"Specifies the singularity criterion r for Cholesky roots of the random-effects variance matrix and scale matrix for adaptive Gaussian quadrature.","type":"value"},{"name":"SINGHESS=","optional":true,"description":"Specifies the singularity criterion r for the inversion of the Hessian matrix. The default value is 1E-8.","type":"value"},{"name":"SINGSWEEP=","optional":true,"description":"Specifies the singularity criterion r for inverting the variance matrix in the first-order method and the empirical Bayes Hessian matrix.","type":"value"},{"name":"SINGVAR=","optional":true,"description":"Specifies the singularity criterion r below which statistical variances are considered to equal zero.","type":"value"},{"name":"START","optional":true,"description":"Requests that the gradient of the log likelihood at the starting values be displayed.","type":"standalone"},{"name":"SUBGRADIENT=","optional":true,"aliases":["SUBGRAD="],"description":"Specifies a SAS data set to save in models with RANDOM statement the subject-specific gradients of the integrated, marginal log-likelihood with respect to all parameters.","help":"SUBGRADIENT=*SAS-data-set*","type":"dataSet"},{"name":"TECHNIQUE=","optional":true,"aliases":["TECH="],"description":"Specifies the optimization technique.","help":"TECHNIQUE=CONGRA | DBLDOG | NMSIMP | NONE | NEWRAP | NRRIDG | QUANEW | TRUREG","type":"choice","arguments":[{"name":"CONGRA","description":"Performs a conjugate-gradient optimization, which can be more precisely specified with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"DBLDOG","description":"Performs a version of double-dogleg optimization, which uses the gradient to update an approximation of the Cholesky factor of the Hessian.","type":"standalone"},{"name":"NMSIMP","description":"Performs a Nelder-Mead simplex optimization.","type":"standalone"},{"name":"NONE","description":"Does not perform any optimization.","type":"standalone"},{"name":"NEWRAP","description":"Performs a Newton-Raphson optimization combining a line-search algorithm with ridging.","type":"standalone"},{"name":"NRRIDG","description":"Performs a Newton-Raphson optimization with ridging.","type":"standalone"},{"name":"QUANEW","description":"Performs a quasi-Newton optimization, which can be defined more precisely with the UPDATE= option and modified with the LINESEARCH= option.","type":"standalone"},{"name":"TRUREG","description":"Performs a trust region optimization.","type":"standalone"}]},{"name":"TRACE","optional":true,"description":"Displays the result of each operation in each statement in the model program as it is executed.","type":"standalone"},{"name":"UPDATE=","optional":true,"aliases":["UPD="],"description":"Specifies the update method for the quasi-Newton, double-dogleg, or conjugate-gradient optimization technique.","help":"UPDATE=BFGS | DBFGS | DDFP | DFP | PB | FR | PR | CD","type":"choice","arguments":[{"name":"BFGS","description":"Performs the original Broyden, Fletcher, Goldfarb, and Shanno (BFGS) update of the inverse Hessian matrix.","type":"standalone"},{"name":"DBFGS","description":"Performs the dual BFGS update of the Cholesky factor of the Hessian matrix. This is the default update method.","type":"standalone"},{"name":"DDFP","description":"Performs the dual Davidon, Fletcher, and Powell (DFP) update of the Cholesky factor of the Hessian matrix.","type":"standalone"},{"name":"DFP","description":"Performs the original DFP update of the inverse Hessian matrix.","type":"standalone"},{"name":"PB","description":"Performs the automatic restart update method of Powell (1977) and Beale (1972).","type":"standalone"},{"name":"FR","description":"Performs the Fletcher-Reeves update (Fletcher 1987).","type":"standalone"},{"name":"PR","description":"Performs the Polak-Ribiere update (Fletcher 1987).","type":"standalone"},{"name":"CD","description":"Performs a conjugate-descent update of Fletcher (1987).","type":"standalone"}]},{"name":"VSINGULAR=","optional":true,"aliases":["VSING="],"description":"Specifies a relative singularity criterion for the computation of the inertia (number of positive, negative, and zero eigenvalues) of the Hessian and its projected forms.","type":"value"},{"name":"XCONV=","optional":true,"aliases":["XTOL="],"description":"Specifies the relative parameter convergence criterion. Termination requires a small relative parameter change in subsequent iterations.","type":"value"},{"name":"XREF","optional":true,"description":"Displays a cross-reference of the variables in the program showing where each variable is referenced or given a value.","type":"standalone"},{"name":"XSIZE=","optional":true,"description":"Specifies the XSIZE parameter of the relative function and relative gradient termination criteria. The default value is r=0.","type":"value"}]},{"name":"ABORT","description":"Stops executing the current DATA step, SAS job, or SAS session.","help":"ABORT &lt;ABEND&gt; &lt;CANCEL&gt; &lt;CANCEL FILE&gt; ...","arguments":[{"name":"ABEND","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the ABEND option of the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment; further action is based on how your operating environment and your site treat jobs that end abnormally. o windowing environment and interactive line mode","type":"standalone"},{"name":"CANCEL","optional":true,"description":"Causes the cancellation of the current submitted statements. The results depend on the method of operation: o batch mode and noninteractive mode o The entire SAS program and SAS system are terminated. o The error message is written to the SAS log. o windowing environment and interactive line mode o It only clears the current submitted program. o Other subsequent submitted programs are not affected. o The error message is written to the SAS log. o workspace server and stored process server o It only clears currently submitted program. o Other subsequent submit calls are not affected. o The error message is written to the SAS log. o SAS IntrNet application server","type":"standalone"},{"name":"CANCEL FILE","optional":true,"description":"Causes only the contents of the autoexec file or %INCLUDE file to be cleared by the %ABORT statement. Other submitted source statements will be executed after the autoexec or %INCLUDE file.","type":"standalone"},{"name":"NOLIST","optional":true,"description":"suppresses the output of all variables to the SAS log.","type":"standalone"},{"name":"RETURN","optional":true,"description":"Causes abnormal termination of the current SAS job or session. Results depend on the method of operation: o batch mode and noninteractive mode o stops processing immediately o sends an error message to the SAS log that states that execution was terminated by the RETURN option in the ABORT macro statement o does not execute any subsequent statements or check syntax o returns control to the operating environment with a condition code indicating an error. o windowing environment and interactive line mode","type":"standalone"}]},{"name":"ARRAY","description":"The ARRAY statement is similar to, but not exactly the same as, the ARRAY statement in the SAS DATA step, and it is exactly the same as the ARRAY statements in the NLIN, NLP, and MODEL procedures. The ARRAY statement is used to associate a name (of no more than eight characters) with a list of variables and constants. The array name is used with subscripts in the program to refer to the array elements. The following statements illustrate this: array r[8] r1-r8; do i = 1 to 8; r[i] = 0; end; The ARRAY statement does not support all the features of the ARRAY statement in the DATA step. It cannot be used to assign initial values to array elements. Implicit indexing of variables cannot be used; all array references must have explicit subscript expressions. Only exact array dimensions are allowed; lower-bound specifications are not supported. A maximum of six dimensions is allowed.","help":"ARRAY arrayname [{ dimensions }] [$] [variables and constants] "},{"name":"BOUNDS","description":"where b_con := number operator parameter_list operator number or b_con := number operator parameter_list or b_con := parameter_list operator number and operator := ≤, <, ≥, or > Boundary constraints are specified with a BOUNDS statement. One- or two-sided boundary constraints are allowed.","help":"BOUNDS b_con [ , b_con...] "},{"name":"BY","description":"You can use a BY statement with the NLMIXED procedure to obtain separate analyses on DATA= data set observations in groups defined by the BY variables. This means that, unless TECH=NONE, an optimization problem is solved for each BY group separately. When a BY statement appears, the procedure expects the input DATA= data set to be sorted in the order of the BY variables.","help":"BY &lt;DESCENDING&gt; &lt;NOTSORTED&gt; ","arguments":[{"name":"DESCENDING","optional":true,"description":"Specifies that the observations are sorted in descending order by the variable that immediately follows the word DESCENDING in the BY statement.","type":"standalone"},{"name":"NOTSORTED","optional":true,"description":"Specifies that observations are not necessarily sorted in alphabetic or numeric order.","type":"standalone"}]},{"name":"CALL","description":"Invokes a SAS CALL routine.","help":"CALL routine(parameter-1&lt;, ...parameter-n&gt;)"},{"name":"CONTRAST","description":"The CONTRAST statement enables you to conduct a statistical test that several expressions simultaneously equal zero.","help":"CONTRAST &lt;DF=n&gt; ","arguments":[{"name":"DF=","optional":true,"description":"Specifies the denominator degrees of freedom to be used in computing p values for the F statistics.","help":"DF=*n*","type":"value"}]},{"name":"DELETE","description":"Stops processing the current observation.","help":"DELETE"},{"name":"DO","description":"","help":"DO &lt;OVER&gt; &lt;&gt; &lt;&gt; ...","arguments":[{"name":"BY","optional":true,"description":"Precedes an increment integer (other than 0) or an expression that generates an integer to be added to the value of the index variable in each iteration of the DO loop.","type":"standalone"},{"name":"OVER","optional":true,"description":"","type":"standalone"},{"name":"TO","optional":true,"description":"Separates the start and stop integers or expressions that control the number of times the portion of the DATA step between the iterative DO and END statements is processed.","type":"standalone"},{"name":"UNTIL","optional":true,"description":"...more SAS statements... END","type":"standalone"},{"name":"WHILE","optional":true,"description":"","type":"standalone"}]},{"name":"ELSE","description":"If the condition in a IF-THEN statement is false and an ELSE statement is present, then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN-ELSE construct.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"ESTIMATE","description":"The ESTIMATE statement enables you to compute an additional estimate that is a function of the parameter values. You must provide a quoted string to identify the estimate and then a valid SAS expression. Multiple ESTIMATE statements are permitted, and results from all statements are listed in a common table. PROC NLMIXED computes approximate standard errors for the estimates using the delta method (Billingsley 1986). It uses these standard errors to compute corresponding t statistics, p-values, and confidence limits","help":"ESTIMATE &lt;ALPHA=α&gt; &lt;DF=n&gt; ","arguments":[{"name":"ALPHA=","optional":true,"description":"Specifies the α level to be used in computing confidence limits.","type":"value"},{"name":"DF=","optional":true,"description":"Specifies the denominator degrees of freedom to be used in computing p values and confidence limits.","help":"DF=*n*","type":"value"}]},{"name":"GOTO","description":"Jumps to a new statement.","help":"GOTO label"},{"name":"ID","description":"The ID statement identifies additional quantities to be included in the OUT= data set of the PREDICT statement. These can be any symbols you have defined with SAS programming statements.","help":"ID names "},{"name":"IF","description":"","help":"IF &lt;DO&gt; &lt;THEN&gt; &lt;WHEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"GO","optional":true,"aliases":["GOTO"],"description":"Jumps to a new statement.","help":"GO TO","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"OUTPUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"PUT","optional":true,"description":"Action statement in an IF-THEN construct.","type":"standalone"},{"name":"SET","optional":true,"description":"Reads an observation from one or more SAS data sets.","type":"standalone"},{"name":"STOP","optional":true,"description":"Action statement in an IF-THEN construct. Stops execution of the current DATA step.","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"},{"name":"WHEN","optional":true,"description":"WHEN statement in an IF-THEN-WHEN construct.","type":"standalone"}]},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK statement-label"},{"name":"MODEL","description":"The MODEL statement is the mechanism for specifying the conditional distribution of the data given the random effects. You must specify a single dependent variable from the input data set, a tilde ~, and then a distribution with its parameters.","help":"MODEL &lt;BINARY(p)&gt; &lt;BINOMIAL(n,p)&gt; &lt;NORMAL(m,v)&gt; ...","arguments":[{"name":"BINARY","optional":true,"description":"Specifies a binary (Bernoulli) distribution with probability p.","type":"standalone"},{"name":"BINOMIAL","optional":true,"description":"Specifies a binomial distribution with count n and probability p.","type":"standalone"},{"name":"GAMMA","optional":true,"description":"Specifies a gamma distribution with shape a and scale b.","type":"standalone"},{"name":"GENERAL","optional":true,"description":"Specifies a general log likelihood function that you construct using SAS programming statements.","type":"standalone"},{"name":"NEGBIN","optional":true,"description":"Specifies a negative binomial distribution with count n and probability p.","type":"standalone"},{"name":"NORMAL","optional":true,"description":"Specifies a normal (Gaussian) distribution with mean m and variance v.","type":"standalone"},{"name":"POISSON","optional":true,"description":"Specifies a Poisson distribution with mean m.","type":"standalone"}]},{"name":"OTHERWISE","description":">","help":""},{"name":"PARMS","aliases":["PARM","PARAMETERS","PARAMETER"],"description":"The PARMS statement lists names of parameters and specifies initial values, possibly over a grid. You can specify the parameters and values directly in a list, or you can provide the name of a SAS data set that contains them by using the DATA= option.","help":"PARMS &lt;BEST=i &gt; 0&gt; &lt;BYDATA&gt; &lt;DATA=SAS-data-set&gt; ...","arguments":[{"name":"BEST=","optional":true,"followsDelimiter":"/","description":"Specifies the maximum number of points displayed in the \"Parameters\" table, selected as the points with the maximum likelihood values. By default, all grid values are displayed.","type":"value"},{"name":"BYDATA","optional":true,"followsDelimiter":"/","description":"Enables you to assign different starting values for each BY group by using the DATA=SAS-data-set option during BY processing.","type":"standalone"},{"name":"DATA=","optional":true,"followsDelimiter":"/","description":"Specifies a SAS data set containing parameter names and starting values.","help":"DATA=*SAS-data-set*","type":"dataSet"}]},{"name":"PREDICT","description":"The PREDICT statement enables you to construct predictions of an expression across all of the observations in the input data set.","help":"PREDICT &lt;ALPHA=α&gt; &lt;DER&gt; OUT=SAS-data-set ...","arguments":[{"name":"OUT=","description":"Results are placed in an output data set that you specify with the OUT= option.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"ALPHA=","optional":true,"description":"Specifies the α level to be used in computing t statistics and intervals.","type":"value"},{"name":"DER","optional":true,"description":"Requests that derivatives of the predicted expression with respect to all parameters be included in the OUT= data set.","type":"standalone"},{"name":"DF=","optional":true,"description":"Specifies the denominator degrees of freedom to be used in computing t statistics and intervals in the OUT= data set.","help":"DF=*d*","type":"value"}]},{"name":"PUT","description":"The PUT statement writes text data to the current output file.","help":"PUT &lt;_PAGE_&gt; ","arguments":[{"name":"_PAGE_","optional":true,"description":"Outputs any pending line data and moves to the top of the next page.","type":"standalone"}]},{"name":"RANDOM","description":"The RANDOM statement defines the random effects and their distribution. The random effects must be represented by symbols that appear in your SAS programming statements. The random effects must be represented by symbols that appear in your SAS programming statements. They typically influence the mean value of the distribution specified in the MODEL statement. The RANDOM statement consists of a list of the random effects (usually just one or two symbols), a tilde ~, the distribution for the random effects, and then a SUBJECT= variable. Only one RANDOM statement is permitted, so multilevel nonlinear mixed models are not accommodated. However, you can specify certain nested random effects structure with a single RANDOM statement.","help":"RANDOM &lt;ALPHA=α&gt; &lt;NORMAL(m,v)&gt; &lt;SUBJECT= variable&gt; ...","arguments":[{"name":"ALPHA=","optional":true,"description":"Specifies the α level to be used in computing t statistics and intervals.","type":"value"},{"name":"DF=","optional":true,"description":"Specifies the denominator degrees of freedom to be used in computing t statistics and intervals in the OUT= data set.","help":"DF=*d*","type":"value"},{"name":"NORMAL","optional":true,"description":"Specifies a normal (Gaussian) distribution with mean m and variance v.","type":"standalone"},{"name":"OUT=","optional":true,"description":"Requests an output data set containing empirical Bayes estimates of the random effects and their approximate standard errors of prediction.","help":"OUT=*SAS-data-set*","type":"dataSet"},{"name":"SUBJECT=","optional":true,"description":"Determines when new realizations of the random effects are assumed to occur. PROC NLMIXED assumes that a new realization occurs whenever the value of the SUBJECT= variable changes from the previous observation, so your input data set should be clustered according to this variable. One easy way to accomplish this is to run PROC SORT prior to calling PROC NLMIXED by using the SUBJECT= variable as the BY variable.","type":"value"}]},{"name":"REPLICATE","description":"The REPLICATE statement provides a way to accommodate models in which different subjects have identical data. This occurs most commonly when the dependent variable is binary. When you specify a REPLICATE variable, PROC NLMIXED assumes that its value indicates the number of subjects having data identical to those for the current value of the SUBJECT= variable (specified in the RANDOM statement). Only the last observation of the REPLICATE variable for each subject is used, and the replicate variable must have only positive integer values. Note that the REPLICATE mechanism is different from using a FREQ statement in other statistical modeling procedures, such as PROC GLM, GENMOD, GLIMMIX, and LOGISTIC. A FREQ variable is used to identify grouped values for observations, essentially multiplying the log likelihood or sum of squares contribution for the observation. A REPLICATE variable is used to multiply the contribution of a subject that comprises one or more observations.","help":"REPLICATE variable "},{"name":"RETURN","description":"Stops executing statements at the current point in the DATA step and returns to a predetermined point in the step.","help":"RETURN"},{"name":"SELECT","description":"","help":""},{"name":"STOP","description":"The STOP statement halts the execution of all statements that contain it, including DO statements and other control or looping statements. Execution continues with the next top-level source statement.","help":"STOP "},{"name":"WHEN","description":"","help":"WHEN &lt;DO&gt; ","arguments":[{"name":"DO","optional":true,"description":"","type":"standalone"}]}],"supportSiteInformation":{"docsetId":"statug","docsetVersion":"latest","docsetTargetFile":"statug_nlmixed_toc.htm"}}