{"name":"OPTLSO","statements":[{"name":"PROC OPTLSO","description":"The OPTLSO procedure performs optimization of general nonlinear functions that are defined by the FCMP procedure in Base SAS over both continuous and integer variables. These functions do not need to be expressed in analytic closed form, and they can be non-smooth, discontinuous, and computationally expensive to evaluate. Problem types can be single-objective or multiobjective. PROC OPTLSO runs in either single-machine mode or distributed mode.","help":"PROC OPTLSO *CACHEIN=SAS-data-set**FIRSTGEN=SAS-data-set**MPSDATA=SAS-data-set*MPSDATA=SAS-data-set*NLINCON=SAS-data-set**OBJECTIVE=SAS-data-set**PRIMALIN=SAS-data-set**QPSDATA=SAS-data-set**VARIABLES=SAS-data-set**CACHEOUT=SAS-data-set**LASTGEN=SAS-data-set**PRIMALOUT=SAS-data-set**ABSFCONV=r[n]**MAXFUNC=i**MAXGEN=i**MAXTIME=r**FEASTOL=r**NGLOBAL=i**NLOCAL=i**POPSIZE=i**CACHEMAX=i**PARETOMAX=i**CACHETOL=r**LOGFREQ=i**LOGLEVEL=0 | 1**PRINTLEVEL=0 | 1**SEED=i*","arguments":[{"name":"CACHEIN=","optional":true,"description":"names a previously computed sample set. Using a previously computed sample set enables PROC OPTLSO to warm-start. It is crucial that the nonlinear objective and function values be identical to those that were used when the cache data set was generated. For more information, see the section Specifying and Returning Trial Points.","help":"CACHEIN=*SAS-data-set*","type":"dataSet"},{"name":"FIRSTGEN=","optional":true,"description":"specifies an initial sample set that defines a subset of the initial population. The columns of this data set should coincide with the same format that is used by the PRIMALIN= data set. If the population size p is smaller than the size of this set, only the first p points of this set are used. For more information, see the section Specifying and Returning Trial Points.","help":"FIRSTGEN=*SAS-data-set*","type":"dataSet"},{"name":"LINCON=","optional":true,"description":"uses a dense format to describe the optimization problem’s linear constraints. The corresponding data set should have columns _LB_ and _UB_ to describe lower and upper bounds, respectively. The column _ID_ is reserved for the corresponding constraint name. The remaining columns must correspond to the linear coefficients of the variables that are listed in the VARIABLES= option. For more information, see the section Describing Linear Constraints.","help":"LINCON=*SAS-data-set*","type":"dataSet"},{"name":"MPSDATA=","optional":true,"description":"specifies a data set that can be used as a sparse alternative to the LINCON= option, which uses a dense format to define variables. Mathematical programming system (MPS) is a common file format for representing linear and mixed-integer mathematical programs. For an example of using the OPTMODEL procedure to create the corresponding MPS file, see Using MPS Format. Internally, binary variables are converted into integer variables with lower and upper bounds of 0 and 1, respectively. For more information, see the section Describing Linear Constraints.","help":"MPSDATA=*SAS-data-set*","type":"dataSet"},{"name":"NLINCON=","optional":true,"description":"names the FCMP functions to be used from the current library as nonlinear constraints, along with respective bounds. This data set should contain three columns: _ID_ to specify the corresponding FCMP function names and _LB_ and _UB_ to specify the lower and upper bounds for the corresponding constraints, respectively. For more information, see the section Describing Nonlinear Constraints.","help":"NLINCON=*SAS-data-set*","type":"dataSet"},{"name":"OBJECTIVE=","optional":true,"description":"names the FCMP functions to be used from the current library to form the objective. At a minimum, this data set should have three columns: _ID_ to specify the function name to be used internally by the solver, _FUNCTION_ to specify the corresponding FCMP function, and _SENSE_ to specify whether the objective is to be minimized or maximized. PROC OPTLSO enables you to implicitly define your objective function by using an external data set and an intermediate FCMP function definition that can be used as placeholders to store temporary terms with respect to the external data set. For more information, see the section Describing the Objective Function.","help":"OBJECTIVE=*SAS-data-set*","type":"dataSet"},{"name":"PRIMALIN=","optional":true,"description":"specifies an initial sample set to be evaluated. Initial data sets might be useful over a sequence of runs when you want to ensure that PROC OPTLSO generates points that are at least as good as your current best solution. This option is more general than the FIRSTGEN= option because points that are defined in this data set might or might not be used to define the initial population for the genetic algorithm (GA). For more information, see the section Specifying and Returning Trial Points.","help":"PRIMALIN=*SAS-data-set*","type":"dataSet"},{"name":"QPSDATA=","optional":true,"description":"specifies a data set that can be used as a sparse alternative to the LINCON= option, which uses a dense format to define variables. Quadratic programming system (QPS) is a common file format for representing linear and mixed-integer mathematical programs that have quadratic terms in the objective function. This option differs from the MPSDATA= option in that any quadratic terms in the objective can be included in the data set. Do not use this option if the problem does not have quadratic terms. For an example of using PROC OPTMODEL to create the corresponding QPS file, see Using QPS Format. Internally, binary variables are converted into integer variables with lower and upper bounds of 0 and 1, respectively.","help":"QPSDATA=*SAS-data-set*","type":"dataSet"},{"name":"VARIABLES=","optional":true,"description":"stores the variable names, bounds, type, and scale. These names must match corresponding names, FCMP functions, and related data sets. For more information, see the section The Variable Data Set.","help":"VARIABLES=*SAS-data-set*","type":"dataSet"},{"name":"CACHEOUT=","optional":true,"description":"specifies the data set to which all completed function evaluations are output. For more information, see the section Specifying and Returning Trial Points.","help":"CACHEOUT=*SAS-data-set*","type":"dataSet"},{"name":"LASTGEN=","optional":true,"description":"specifies the data set to which the members of the current genetic algorithm population are returned on exit. If more than one genetic algorithm is used, the data set combines the members from each population into a single data set.","help":"LASTGEN=*SAS-data-set*","type":"dataSet"},{"name":"PRIMALOUT=","optional":true,"description":"specifies the output solution set. You can use this data set in future solves as the input set for the PRIMALIN= option. For more information, see the section Specifying and Returning Trial Points.","help":"PRIMALOUT=*SAS-data-set*","type":"dataSet"},{"name":"ABSFCONV=","optional":true,"description":"specifies an absolute function convergence criterion. PROC OPTLSO stops when the changes in the objective function and constraint violation values in successive iterations meet the criterion. The optional integer value n specifies the number of successive iterations for which the criterion must be satisfied before the process is terminated. The default is r=1E–6 and n=10. To cause an early exit, you must specify a value for n that is less than the value of the MAXGEN= option.","help":"ABSFCONV=*r[n]*","type":"value"},{"name":"MAXFUNC=","optional":true,"description":"specifies the maximum number of function calls in the optimization process. The actual number of function evaluations can exceed this number in order to ensure deterministic results.","help":"MAXFUNC=*i*","type":"value"},{"name":"MAXGEN=","optional":true,"description":"specifies the maximum number of genetic algorithm iterations. The default is 500.","help":"MAXGEN=*i*","type":"value"},{"name":"MAXTIME=","optional":true,"description":"specifies an upper limit in seconds on the real time used in the optimization process. The actual running time of PROC OPTLSO optimization might be longer because the actual running time includes the remaining time needed to finish current function evaluations, the time for the output of the (temporary) results, and (if required) the time for saving the results to appropriate data sets. By default, the MAXTIME= option is not used.","help":"MAXTIME=*r*","type":"value"},{"name":"FEASTOL=","optional":true,"description":"specifies a feasibility tolerance for provided constraints. Specify r1E–9. The default is r=1E–3.","help":"FEASTOL=*r*","type":"value"},{"name":"NGLOBAL=","optional":true,"description":"specifies the number of genetic algorithms to create, with each algorithm working on a separate population of the size specified by the POPSIZE= option. Specify i as an integer greater than 0.","help":"NGLOBAL=*i*","type":"value"},{"name":"NLOCAL=","optional":true,"description":"specifies the number of local solvers to create. Specify i as an integer greater than 0. The default is twice the number of variables in the problem.","help":"NLOCAL=*i*","type":"value"},{"name":"POPSIZE=","optional":true,"description":"specifies the population size for the genetic algorithm to use. The default is 40 x ceil(log(n)+1), where n denotes the number of variables.","help":"POPSIZE=*i*","type":"value"},{"name":"CACHEMAX=","optional":true,"description":"specifies the maximum number of points that can be cached. By default, PROC OPTLSO automatically calculates the maximum number of points.","help":"CACHEMAX=*i*","type":"value"},{"name":"PARETOMAX=","optional":true,"description":"specifies the maximum number of points in the Pareto-optimal set. The default is 5,000.","help":"PARETOMAX=*i*","type":"value"},{"name":"CACHETOL=","optional":true,"description":"specifies the cache tolerance to be used for caching and referencing previously evaluated points. For more information about this tolerance, see the section Function Value Caching. The value of r can be any number in the interval [0,1] . The default is 1E–9.","help":"CACHETOL=*r*","type":"value"},{"name":"LOGFREQ=","optional":true,"description":"requests that the solution progress be printed to the iteration log after every i iterations if the value of the LOGLEVEL= option is greater than or equal to 0. The value i=0 disables the printing of the solution progress. The final iteration is always printed if i 1 and LOGLEVEL is nonzero. The default is 1.","help":"LOGFREQ=*i*","type":"value"},{"name":"LOGLEVEL=","optional":true,"description":"controls how much information is printed to the log file. If LOGLEVEL=0, nothing is printed. If LOGLEVEL=1, a short summary of the problem description and final solution status is printed. If LOGLEVEL=0, this option overrides the LOGFREQ= option. By default, LOGLEVEL=1.","help":"LOGLEVEL=*0 | 1*","type":"value"},{"name":"PRINTLEVEL=","optional":true,"description":"specifies whether to print a summary of the problem and solution. If PRINTLEVEL=1, then the Output Delivery System (ODS) tables ProblemSummary, SolutionSummary, and PerformanceInfo are produced and printed. If PRINTLEVEL=0, then no ODS tables are produced. By default, PRINTLEVEL=1. For more information about the ODS tables that are created by PROC OPTLSO, see the section ODS Tables.","help":"PRINTLEVEL=*0 | 1*","type":"value"},{"name":"SEED=","optional":true,"description":"specifies a nonnegative integer as a seed value for the pseudorandom number generator. Pseudorandom numbers are used within the genetic algorithm.","help":"SEED=*i*","type":"value"}]},{"name":"PERFORMANCE","description":"The PERFORMANCE statement defines performance parameters for multithreaded and distributed computing, passes variables that describe the distributed computing environment, and requests detailed results about the performance characteristics of a SAS high-performance analytics procedure. Note that the SAS High-Performance Optimization license is required to invoke PROC OPTLSO in distributed mode."},{"name":"READARRAY","description":"PROC FCMP (see The FCMP Procedure) provides the READ_ARRAY function to read data from a SAS data set into array variables. In order to ensure that the referenced data sets are available, PROC OPTLSO also requires that the names of these data sets be provided as a list of names in the READARRAY statement."}],"supportSiteInformation":{"docsetId":"orlsoug","docsetVersion":"v_001","docsetTargetFile":"orlsoug_hplso_toc.htm"}}