{"name":"RPCA","statements":[{"name":"PROC RPCA","description":"The RPCA procedure implements robust principal component analysis (RPCA) in SAS Viya. RPCA can be used in many areas, including image processing, latent semantic indexing, ranking, and matrix completion (Candès et al. 2011). † The RPCA procedure decomposes an input matrix into a sum of two matrices: a low-rank matrix and a sparse matrix. You can use the low-rank matrix to do feature extraction and use the sparse matrix to detect anomalies.","help":"PROC RPCA <CENTER> <COLSTATISTICS=CAS-libref.data-table> <DATA=CAS-libref.data-table> <DECOMP=SVD | PCA | NONE> <FIXEDMU> <LAMBDA=number specifies a value for ƛ, where number is a positive real number.> <LAMBDAWEIGHT=number> <MAXITER=number> <METHOD=ALM | APG> <MU=number> <NTHREADS=number-of-threads> <OUTERROR=CAS-libref.data-table> <OUTLOWRANK=CAS-libref.data-table> <OUTSPARSE=CAS-libref.data-table> <SCALE> <TOLERANCE=number>;     \n\tCODE <FILE=filename> ;\n    \n\tDISPLAY <CASESENSITIVE> <EXCLUDE> <EXCLUDEALL> ...;\n    \n\tDISPLAYOUT <NOREPLACE> <REPEATED> ;\n    \n\tINPUT variables;\n    \n\tOUTDECOMP <SVDDIAG=CAS-libref.data-table> <SVDLEFT=CAS-libref.data-table> <SVDRIGHT=CAS-libref.data-table> ...;\n    \n\tOUTPUT <NPC=number> <OUT=CAS-libref.data-table> <STANDARDPC> ...;\n    \n\tROWID variable;\n    \n\tSVD <MAXRANK=number> <METHOD=<EIGEN | RANDOM>> <POWER=number> ...;\n","arguments":[{"name":"CENTER","optional":true,"description":"Centers the observations by the mean of each column.","type":"standalone"},{"name":"COLSTATISTICS=","optional":true,"description":"Specifies the name of the output table for the columStatistics table. This table contains simple statistics for the variables of the input data set.","help":"COLSTATISTICS=*CAS-libref.data-table*","type":"dataSet"},{"name":"DATA=","optional":true,"description":"Names the input data table for PROC RPCA to use. The default is the most recently created data table. CAS-libref.data-table is a two-level name, where","help":"DATA=*CAS-libref.data-table*","type":"dataSet"},{"name":"DECOMP=","optional":true,"description":"Specifies the type of analysis. If MAXITER=0, this step is applied to the original input data; otherwise, it is applied to the low-rank matrix.","help":"DECOMP=SVD | PCA | NONE","type":"choice","arguments":[{"name":"SVD","description":"Performs singular value decomposition.","type":"standalone"},{"name":"PCA","description":"Performs principal component analysis.","type":"standalone"},{"name":"NONE","description":"Performs none of the above two analysis.","type":"standalone"}]},{"name":"FIXEDMU","optional":true,"description":"If specified, uses a fixed value for µ in each iteration of RPCA when METHOD=APG. Otherwise, is updated dynamically in each iteration.","type":"standalone"},{"name":"LAMBDA=","optional":true,"description":"Syntax: LAMBDA=number specifies a value for ƛ, where number is a positive real number.","type":"value"},{"name":"LAMBDAWEIGHT=","optional":true,"description":"Specifies the value of ƛweight. The final value of the ƛ that is used in the RPCA algorithm is calculated by multiplying ƛweigth by ƛ. You can use this value to control the sparsity of the sparse matrix.","help":"LAMBDAWEIGHT=*number*","type":"value"},{"name":"MAXITER=","optional":true,"description":"Specifies the maximum number of iterations before the RPCA algorithm stops, where number is a positive integer. By default, MAXITER=1000.","help":"MAXITER=*number*","type":"value"},{"name":"METHOD=","optional":true,"description":"Specifies the method to perform RPCA. By default, METHOD=ALM.","help":"METHOD=ALM | APG","type":"choice","arguments":[{"name":"ALM","description":"Specifies the augmented Lagrange multiplier method.","type":"standalone"},{"name":"APG","description":"Specifies the accelerated proximal gradient method.","type":"standalone"}]},{"name":"MU=","optional":true,"description":"Specifies an initial value of µ when METHOD=APG. By default, MU=0.001.","help":"MU=*number*","type":"value"},{"name":"NTHREADS=","optional":true,"description":"Specifies the number of threads per computation node. The default value is the lesser of 16 and the number of threads available per computation node.","help":"NTHREADS=*number-of-threads*","type":"value"},{"name":"OUTERROR=","optional":true,"description":"Specifies the name of the output table for the error matrix. It contains the noise in the input data. This option can be specified when METHOD=APG.","help":"OUTERROR=*CAS-libref.data-table*","type":"dataSet"},{"name":"OUTLOWRANK=","optional":true,"description":"Specifies the name of the output table for the low-rank matrix. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table.","help":"OUTLOWRANK=*CAS-libref.data-table*","type":"dataSet"},{"name":"OUTSPARSE=","optional":true,"description":"Specifies the name of the output table for the sparse matrix.","help":"OUTSPARSE=*CAS-libref.data-table*","type":"dataSet"},{"name":"SCALE","optional":true,"description":"Scales the observations by the standard deviation of each column. If a constant variable exists (where all observations have the same value), the observations of this column are not scaled.","type":"standalone"},{"name":"TOLERANCE=","optional":true,"description":"Syntax: TOLERANCE=number specifies the convergence criterion for the RPCA algorithm. The default value is 10^-7.","help":"TOLERANCE=*number*","type":"value"}]},{"name":"CODE","description":"The CODE statement generates SAS DATA step code that mimics the computations that are performed. The generated SAS DATA step code can be used for scoring new observations. Only one CODE statement is processed. If you specify multiple CODE statements, only the first one is used. The CODE statement is optional. If you do not include a CODE statement, no score code is generated.","help":"CODE &lt;FILE=filename&gt; ","arguments":[{"name":"FILE=","optional":true,"description":"Specifies the filename of the file to write the SAS score code to.","help":"FILE=*filename*","type":"value"}]},{"name":"DISPLAY","description":"The DISPLAY statement enables you to specify a list of display tables to display or exclude. This statement is similar to the ODS SELECT, ODS EXCLUDE, and ODS TRACE statements. However, the DISPLAY statement can improve performance when a large number of tables could be generated (such as in BY-group processing). The procedure processes the DISPLAY statement on a CAS server and thus sends only a subset of ODS tables to the SAS client. Because ODS statements are processed on a SAS client, all the display tables generated are first sent to the client and then the client creates a subset. If both DISPLAY and ODS statements are used together, the DISPLAY statement takes precedence over the ODS statements.","help":"DISPLAY &lt;CASESENSITIVE&gt; &lt;EXCLUDE&gt; &lt;EXCLUDEALL&gt; ...","arguments":[{"name":"CASESENSITIVE","optional":true,"followsDelimiter":"/","description":"Performs a case-sensitive comparison of table names in the table-list to display table names when tables are subsetted for display. To preserve case, you must enclose table names in the table-list in quotation marks.","type":"standalone"},{"name":"EXCLUDE","optional":true,"followsDelimiter":"/","description":"Displays all display tables except those specified in the table-list.","type":"standalone"},{"name":"EXCLUDEALL","optional":true,"followsDelimiter":"/","description":"Suppresses display of all tables. This option takes precedence over the other options.","type":"standalone"},{"name":"TRACE","optional":true,"followsDelimiter":"/","description":"Displays the display table names, labels, and paths.","type":"standalone"}]},{"name":"DISPLAYOUT","description":"The DISPLAYOUT statement enables you to create CAS output tables from your displayed output. This statement is similar to the ODS OUTPUT statement. The table-spec-list specifies a list of CAS output tables to create. Each entry in the list has either a key or a key=value format: key=value specifies key as the ODS table name, path, or partial pathname, and specifies value as the CAS output table name. key specifies key as the ODS table name and also as the CAS output table name. Table names and partial pathnames are discussed under the DISPLAY statement. The DISPLAYOUT statement does not support regular expressions.","help":"DISPLAYOUT &lt;NOREPLACE&gt; &lt;REPEATED&gt; ","arguments":[{"name":"NOREPLACE","optional":true,"followsDelimiter":"/","description":"Does not replace an existing CAS output table of the same name.","type":"standalone"},{"name":"REPEATED","optional":true,"followsDelimiter":"/","description":"Replicates the CAS output tables on all nodes.","type":"standalone"}]},{"name":"INPUT","description":"The INPUT statement specifies the names of variables to be considered in the RPCA procedure. Only numeric variables are accepted. If you do not specify this statement, PROC RPCA considers all numeric variables in the input data set.","help":"INPUT variables"},{"name":"OUTDECOMP","description":"The OUTDECOMP statement specifies output file names for the low-rank matrix decomposition tables.","help":"OUTDECOMP &lt;SVDDIAG=CAS-libref.data-table&gt; &lt;SVDLEFT=CAS-libref.data-table&gt; &lt;SVDRIGHT=CAS-libref.data-table&gt; ...","arguments":[{"name":"PCLOADINGS=","optional":true,"description":"Specifies the name of the output table to contain the matrix of principal component loadings.","help":"PCLOADINGS=*CAS-libref.data-table*","type":"dataSet"},{"name":"PCSCORES=","optional":true,"description":"Specifies the name of the output table to contain the matrix of principal component scores.","help":"PCSCORES=*CAS-libref.data-table*","type":"dataSet"},{"name":"SVDDIAG=","optional":true,"description":"Specifies the name of the output table to contain the SVD diagonal vector.","help":"SVDDIAG=*CAS-libref.data-table*","type":"dataSet"},{"name":"SVDLEFT=","optional":true,"description":"Specifies the name of the output table to contain the SVD left matrix.","help":"SVDLEFT=*CAS-libref.data-table*","type":"dataSet"},{"name":"SVDRIGHT=","optional":true,"description":"Specifies the name of the output table to contain the SVD right matrix.","help":"SVDRIGHT=*CAS-libref.data-table*","type":"dataSet"}]},{"name":"OUTPUT","description":"The OUTPUT statement creates an output data table to contain the results of the procedure run.","help":"OUTPUT &lt;NPC=number&gt; &lt;OUT=CAS-libref.data-table&gt; &lt;STANDARDPC&gt; ...","arguments":[{"name":"NPC=","optional":true,"description":"Specifies the number of principal components to display for each window.","help":"NPC=*number*","type":"value"},{"name":"OUT=","optional":true,"description":"Names the output data table for PROC MWPCA to use. You must specify this option before any other options. CAS-libref.data-table is a two-level name, where CAS-libref refers to a collection of information that is defined in the LIBNAME statement and includes the caslib, which includes a path to where the data table is to be stored, and a session identifier, which defaults to the active session but which can be explicitly defined in the LIBNAME statement.","help":"OUT=*CAS-libref.data-table*","type":"dataSet"},{"name":"STANDARDPC","optional":true,"description":"Standardizes the output principal components.","type":"standalone"}]},{"name":"ROWID","description":"If your input data set has an index column for observations, you can specify an index variable in the ROWID statement. When you specify this statement and the input data are distributed on multiple nodes, the RPCA procedure preserves the order of observations in the OUTLOWRANK=, OUTSPARSE=, OUTERROR=, SVDLEFT=, and PCSCORES= output tables. The values of variable must be integer. If the values of variable are not unique across observations, the RPCA procedure does not keep the order of the observations in the output tables.","help":"ROWID variable"},{"name":"SVD","description":"To calculate the principal components for each window, a singular value decomposition (SVD) solver is called.","help":"SVD &lt;MAXRANK=number&gt; &lt;METHOD=&lt;EIGEN | RANDOM&gt;&gt; &lt;POWER=number&gt; ...","arguments":[{"name":"MAXRANK=","optional":true,"description":"Specifies the maximum value for rank considered by the SVD solver. By default, number is the number of input variables.","help":"MAXRANK=*number*","type":"value"},{"name":"METHOD=","optional":true,"description":"Specifies the type of the SVD solver.","help":"METHOD=EIGEN | RANDOM","type":"choice","arguments":[{"name":"EIGEN","description":"Uses the eigenvalue decomposition method.","type":"standalone"},{"name":"RANDOM","description":"Uses the randomized SVD method.","type":"standalone"}]},{"name":"POWER=","optional":true,"description":"Specifies the parameter power for the SVD solver if METHOD=RANDOM. By default POWER=0.","help":"POWER=*number*","type":"value"},{"name":"SEED=","optional":true,"description":"Specifies the parameter seed for the SVD solver if METHOD=RANDOM. The default value is the current local time in SAS datetime format.","help":"SEED=*number*","type":"value"}]}],"supportSiteInformation":{"docsetId":"casml","docsetVersion":"latest","docsetTargetFile":"casml_rpca_toc.htm"}}