{"name":"SHAPLEY","statements":[{"name":"SHAPLEY","description":"The SHAPLEY procedure estimates Shapley values of a query on the basis of the information that is provided in a reference table. Shapley values are a measure of variable importance for a single observation. You can use them to explain why a machine learning model yields a specific prediction for a query observation. They serve as an additive measure of importance whose sum equals the predicted output from the model that you are explaining. PROC SHAPLEY uses two methods to approximate the same Shapley values. The first method is kernel Shapley additive explanations (Kernel SHAP), which fits linear regression models to the scored output from machine learning models. The second method is hyperparameterized Shapley value estimation (HyperSHAP), which calculates the Shapley values for predictive models.","help":"PROC SHAPLEY DATA=libref.data-table REFERENCEDATA=libref.data-table &lt;options&gt;;","arguments":[{"name":"DATA=","description":"names the input data table for PROC SHAPLEY to use. The default is the most recently created data table. libref.data-table is a two-level name, where libref refers to a collection of information that is defined in the LIBNAME statement and includes the library, which includes a path to the data, and a session identifier, which defaults to the active session but which can be explicitly defined in the LIBNAME statement.","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"REFERENCEDATA=","description":"specifies the input reference data table. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table. For more information about this two-level name, see the DATA= option and the section Using CAS Sessions and CAS Engine Librefs.","help":"REFERENCEDATA=*libref.data-table*","type":"dataSet"},{"name":"LOGLEVEL=","optional":true,"description":"controls the quantity and type of notes to print to the client log. 0 prints only warnings and errors. 1 prints some notes. 2 prints many notes. By default, LOGLEVEL=1.","help":"LOGLEVEL=0 | 1 | 2","type":"choice","arguments":[{"name":"0","type":"standalone"},{"name":"1","type":"standalone"},{"name":"2","type":"standalone"}]}]},{"name":"ASTOREMODEL","description":"The ASTOREMODEL statement names an analytic store that contains the model to explain. If you specify multiple ASTOREMODEL statements, you must also specify the CODE statement to name the DS2 code that is used along with the analytic stores.","help":"ASTOREMODEL RSTORE=libref.data-table;","arguments":[{"name":"RSTORE=","description":"specifies the analytic store that contains the model to explain. libref.data-table is a two-level name, where libref refers to the library, and data-table specifies the name of the output data table.","help":"RSTORE=*libref.data-table*","type":"dataSet"}]},{"name":"CODE","description":"The CODE statement names the DATA step code that describes the model or the DS2 code that is used along with an analytic store that you specify in the ASTOREMODEL statement. If you specify multiple ASTOREMODEL statements, you must also specify the CODE statement to name the DS2 code that is used along with the analytic stores. You must specify either the FILE= or the TABLE= option.","help":"CODE  FILE=*filename* | TABLE=*libref.data-table*;                                             ","arguments":[{"name":"FILE=","optional":true,"description":"names the external file that contains the DATA step code that describes the model or the DS2 code to be used along with an analytic store that you specify in the ASTOREMODEL statement","help":"FILE=*filename*","type":"value"},{"name":"TABLE=","optional":true,"description":"names the data table that contains the DATA step code that describes the model or the DS2 code to be used along with an analytic store that you specify in the ASTOREMODEL statement","help":"TABLE=*libref.data-table*","type":"dataSet"}]},{"name":"FREQ","description":"The variable in the FREQ statement identifies a numeric variable in the input data table that contains the frequency of occurrence of each observation. PROC SHAPLEY treats each observation as if it appears f times, where f is the value of the FREQ variable for the observation. If f is not an integer, it is truncated to an integer. If f is less than 1 or missing, the observation is not used in the analysis. When you omit the FREQ statement, each observation is assigned a frequency of 1.","help":"FREQ *variable*;                                              "},{"name":"INPUT","description":"The INPUT statement specifies one or more variables as input variables. You can specify this statement multiple times.","help":"INPUT *variables*&lt;/ {LEVEL={INTERVAL | NOMINAL}} &gt;;                                              ","arguments":[{"name":"LEVEL=","optional":true,"followsDelimiter":"/","description":"specifies the type of all the variables in the statement. By default, LEVEL=INTERVAL for numeric variables and LEVEL=NOMINAL for character variables.","help":"LEVEL=INTERVAL | NOMINAL","type":"choice"}]},{"name":"METHOD","description":"The METHOD statement specifies the method to use in the model explanations.","help":"METHOD *method-type*&lt;(*options*)&gt;;                     ","arguments":[{"name":"HYPERSHAP","optional":true,"description":"uses the hyperparameterized Shapley value estimation (HyperSHAP) method.","type":"standalone","arguments":[{"name":"DEPTH=","description":"specifies the number of subsets to use in approximating the Shapley values. By default, DEPTH=1.","help":"DEPTH=*number*","type":"value"}]},{"name":"KERNELSHAP","optional":true,"description":"uses the kernel Shapley value estimation (Kernel SHAP) method.","type":"standalone","arguments":[{"name":"INCLUDEMISSING","description":"treats missing values of nominal variables as a valid level","type":"standalone"}]},{"name":"SAMPLESIZE=","optional":true,"description":"specifies the approximate number of observations to sample from the input data table. The default is 500 times the number of variables that are listed in the INPUT statement or 1,000,000, whichever value is smaller.","help":"SAMPLESIZE=*number*","type":"value"},{"name":"SEED=","optional":true,"description":"specifies the seed value for pseudorandom number generation. If you do not specify a seed, or if you specify a value less than or equal to 0, the seed is generated by reading the time of day from the computer’s clock.","help":"SEED=*number*","type":"value"},{"name":"USERAWDATA","optional":true,"description":"uses the raw input data for data generation","type":"standalone"}]},{"name":"PREDICTEDTARGET","description":"The PREDICTEDTARGET statement names the variable that contains the model’s predictions. The specified variable typically has a P_ prefix.","help":"PREDICTEDTARGET *variable*;                                              "},{"name":"WEIGHT","description":"The variable in the WEIGHT statement is used as a weight to perform a weighted analysis of the data. Observations that have nonpositive or missing weights are not included in the analysis. The values of the WEIGHT variable can be nonintegral and are not truncated. When you omit the WEIGHT statement, all observations that are used in the analysis are assigned a weight of 1.","help":"WEIGHT *variable*;                          "}]}