{"name":"TEXTCATSCORE","statements":[{"name":"PROC TEXTCATSCORE","description":"The TEXTCATSCORE procedure scores text documents against a category model, which is a type of rule-based model. You can write your own rules to define category membership for some documents while excluding texts that contain inappropriate content, and then use the TEXTCATEGORY procedure to create the category model. PROC TEXTCATSCORE can create four output data tables, which contain the following information: the category output data results, the category output term results, the categorization model, and the category grouped results.","help":"PROC TEXTCATSCORE  DATA=libref.data-table INMODEL=libref.data-table <ALGORITHM=FREQUENCY | WEIGHTED> <DOCTYPE=TEXT | XML> <OUTDOCMATCH-libref.data-table> <OUTMATCH=-libref.data-table> ;\n\tID  variable;\n\tINPUT  variable;\n\tOUTGROUPEDMATCH  OUT=libref.data-table<MATCHDLEIMITER=\"string\">;\n\tOUTPUT  OUT=libref.data-table;\n            ","arguments":[{"name":"DATA=","description":"specifies the input data table for PROC TEXTCATSCORE to use. Each row of the input data table must contain one character variable and one ID variable that correspond to the text document and the unique ID of a document, respectively.","help":"DATA=*libref.data-table*","type":"dataSet"},{"name":"INMODEL=","description":"specifies an input table that contains a category model. You can create a table with a category model by using PROC TEXTCATEGORY.","help":"INMODEL=*libref.data-table*","type":"dataSet"},{"name":"ALGORITHM=","optional":true,"description":"specifies the type of scoring algorithm to use. You can specify the following algorithm types:","help":"ALGORITHM=FREQUENCY | WEIGHTED","type":"choice","arguments":[{"name":"FREQUENCY","description":"applies the frequency-based algorithm in scoring. This algorithm calculates the scores by using a count of the total number of instances of matching terms that are found in an input document. This is the default.","type":"standalone"},{"name":"WEIGHTED","description":"applies the relevancy-based (weighted) algorithm in scoring. This algorithm calculates the scores according to a number of criteria, such as the occurrence of words or phrases, the specified weighting of those words, their location, and so on.","type":"standalone"}]},{"name":"DOCTYPE=","optional":true,"description":"specifies how to treat the input document to be used in scoring. You can specify the following values:","help":"DOCTYPE=TEXT | XML","type":"choice","arguments":[{"name":"TEXT","description":"treats the input documents as raw text in scoring. This is the default.","type":"standalone"},{"name":"XML","description":"treats the input documents as XML in scoring.","type":"standalone"}]},{"name":"OUTDOCMATCH=","optional":true,"description":"In this table, the first variable is an ID variable that corresponds to the unique ID of a document. For the other variables, the variable names are category_1 , â€¦, category_N, where N is the number of categories that are defined in the category model; the variable labels are the category names that are defined in the category model; and the value of these variables is either 1 or 0, which indicates that the document matches (1) or does not match (0) the category.","help":"OUTDOCMATCH=*libref.data-table*","type":"dataSet"},{"name":"OUTMATCH=","optional":true,"description":"This table contains the following variables:","help":"OUTMATCH=*libref.data-table*","type":"dataSet"}]},{"name":"ID","description":"The ID statement names the variable in the DATA= table that contains the document IDs. This statement is required.","help":"ID  *variable*;","arguments":[{"name":"variable","placeholder":true,"description":"specifies the variable in the DATA= table that contains the document IDs.","type":"value"}]},{"name":"INPUT","description":"The INPUT statement specifies the variable that contains the documents to be scored. If you omit this statement, then the default text variable is used.","help":"INPUT  *variable*;","arguments":[{"name":"variable","placeholder":true,"description":"specifies the variable in the DATA= table that contains the text of the documents to be analyzed.","type":"value"}]},{"name":"OUTGROUPEDMATCH","description":"Creates an output data table that contains the grouped category output results.","help":"OUTGROUPEDMATCH  OUT=*libref.data-table*;","arguments":[{"name":"OUT=","description":"specifies the name of a category output term table that groups matched terms together by category for each document. This table contains the following variables:","help":"OUT=*libref.data-table*","type":"dataSet"},{"name":"MATCHDELIMITER=","optional":true,"description":"specifies the delimiter that is used to separate each matched term. You can specify a delimiter that consists of one or more characters, but it should not exceed 32 characters and should be enclosed in quotation marks. By default, MATCHDELIMITER=\"|\".","help":"MATCHDELIMITER=*\"string\"*","type":"value"}]},{"name":"OUTPUT","description":"The OUTPUT statement creates an output data table that contains the category output results.","help":"OUTPUT  OUT=*libref.data-table*;","arguments":[{"name":"OUT=","description":"specifies the name of the output data table. This table contains the following variables:","help":"OUT=*libref.data-table*","type":"dataSet"}]}],"supportSiteInformation":{"docsetId":"casvta","docsetVersion":"latest","docsetTargetFile":"casvta_textcatscore_toc.htm"}}