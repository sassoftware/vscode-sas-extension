{"name":"TSMODEL","statements":[{"name":"PROC TSMODEL","description":"The TSMODEL procedure is a SAS Viya procedure that executes user-defined programs on time series data. The TSMODEL procedure analyzes timestamped transactional data with respect to time and accumulates the data into a time series format. † The TSMODEL procedure forms time series from input timestamped transactional data and writes the accumulated time series variables to an output table. Time series are delineated based on the distinct values of the variables that are listed in the BY statement.","help":"PROC TSMODEL <AUXDATA=CAS-libref.data-table> <DATA=CAS-libref.data-table> <INOBJ=(object-name=CAS-libref.data-table ...)> <INSCALAR=CAS-libref.data-table> <LEAD=n> <LOGCONTROL=(severity=IGNORE | KEEP <severity=IGNORE | KEEP...>)> <OUT=CAS-libref.data-table> <OUTARRAY=CAS-libref.data-table> <OUTLOG=CAS-libref.data-table> <OUTOBJ=(object-name=CAS-libref.data-table ...)> <OUTSCALAR=CAS-libref.data-table> <OUTSUM=CAS-libref.data-table> <PUTTOLOG=YES | NO> <SEASONALITY=number>;     \n\tARRAY <NOSYMBOLS> ; \n   \n\tATTRIB <FORMAT=format-name> <LABEL='label'> <LENGTH=length> ...; \n   \n\tBY variables;     \n\tCALL routine(parameter-1<, ...parameter-n>);     \n\tCONTINUE; \n   \n\tDATALINES4;     \n\tDATALINES; \n   \n\t;     \n\tDELETE; \n   \n\tDELETEFUNC function-name;     \n\tDELETESUBR subroutine-name;     \n\tDESCRIBE; \n   \n\tDISPLAY <BELL> <BLANK> <NOINPUT> ...; \n   \n\tDO <OVER> <> <> ...; \n   \n\tDROP variable-list;     \n\tELSE <DO> <IF> <THEN> ...; \n   \n\tEND;     \n\tENDRSUBMIT; \n   \n\tENDSUB;     \n\tENDSUBMIT ; \n   \n\tERROR <message>;     \n\tEXECUTE; \n   \n\tFILE <DISK> <DUMMY> <LOG> ...; \n   \n\tFORMAT <DEFAULT=default-format> ; \n   \n\tFUNCTION <KIND= | GROUP='string'> <VARARGS> ; \n   \n\tGOTO label;     \n\tID <ACCUMULATE=<NONE | TOTAL | AVERAGE>... > <ALIGN=<BEGINNING | MIDDLE | ENDING>> INTERVAL=DAY|HOUR|MINUTE...  ...;     \n\tIF <DO> <NOT> <THEN> ...; \n   \n\tINFORMAT <DEFAULT= default-informat> ; \n   \n\tINSCALARS scalar-name-list; | INSCALAR scalar-name-list; \n   \n\tKEEP variable-list;     \n\tKILLTASK _ALL_ |task1...taskn ;     \n\tLABEL variable='label'; \n   \n\tLEAVE;     \n\tLENGTH <DEFAULT=n> ; \n   \n\tLINK label;     \n\tLIST; \n   \n\tLISTFUNC function-name;     \n\tLISTSUBR subroutine-name;     \n\tLISTTASK <_ALL_|task> ;     \n\tLOCK <CLEAR> <LIST> ; \n   \n\tLOSTCARD;     \n\tMISSING character(s); \n   \n\tODS DOCUMENT <ALL> <CLOSE> <EXCLUDE exclusion(s)| ALL | NONE> ...;     \n\tODS ESCAPECHAR= 'escape-character';     \n\tODS GRAPHICS <ANTIALIAS=<OFF | ON>> OFF ON ...;     \n\tODS LISTING <EXCLUDE/SELECT ALL> <CLOSE> <EXCLUDE exclusion(s)| ALL | NONE> ...;     \n\tODS MARKUP <ALL> <CLOSE> <EXCLUDE exclusion(s)| ALL | NONE> ...;     \n\tODS NOPROCTITLE;     \n\tODS NOUSEGOPT; \n   \n\tODS OUTPUT <CLEAR> <CLOSE> <SHOW> ...; \n   \n\tODS PRINTER <ALL> <CLOSE> <EXCLUDE exclusion(s)| ALL | NONE> ...;     \n\tODS PROCLABEL 'string';     \n\tODS PROCTITLE; \n   \n\tODS RESULTS <OFF> <ON> ; \n   \n\tODS RTF <ALL> <CLOSE> <EXCLUDE exclusion(s)| ALL | NONE> ...;     \n\tODS TAGSETS.RTF <ALL> <CLOSE> <EXCLUDE exclusion(s)| ALL | NONE> ...;     \n\tODS TEXT= 'text-string';     \n\tODS TRACE <EXCLUDED> OFF ON ...;     \n\tODS USEGOPT;     \n\tODS VERIFY <ERROR> <OFF> <ON> ...; \n   \n\t;     \n\tOUTARGS out-argument-1, ..., out-argument-n;     \n\tOUTARRAYS array-name-list; | OUTARRAY array-name-list;     \n\tOUTPUT<data-set-name(s)>; \n   \n\tOUTSCALARS scalar-name-list; | OUTSCALAR scalar-name-list; \n   \n\tPAGE;     \n\tPRINT <OUTLOG> <WHERE where-clause>> ;     \n\tPUT <_ALL_> <_INFILE_> <_ODS_> ...; \n   \n\tPUTLOG 'message';     \n\tRDISPLAY <<CONNECTREMOTE=>server-ID >;     \n\tREDIRECT INPUT OUTPUT ;     \n\tREMOVE <data-set-name(s)>; \n   \n\tRENAME old-name-1=new-name-1 ... <old-name-n=new-name-n>; \n   \n\tREPLACE <data-set-name-1><...data-set-name-n>; \n   \n\tREQUIRE package-1 <package-2 ... package-n>;REQUIRE package (class-1 ...class-n);     \n\tRETAIN <element-list(s) <initial-value(s) |;     \n\t; \n   \n\tRGET <<CONNECTREMOTE=>server-ID>; \n   \n\tRSUBMIT <options>; ENDRSUBMIT <CANCEL>; \n   \n\t;     \n\tSIGNOFF <options>; \n   \n\tSIGNON <options> ;     \n\tSKIP <n>;     \n\tSTOP;     \n\tSTRUCT structure-name variable;     \n\tSUBMIT <DYNAMICS=(var-1=[number | \"string\"] <var-2=[number | \"string\"]...>)> <FILE=SAS-file-ref | 'File-path'> ;     \n\tSUBROUTINE <KIND= | GROUP='string'> <OUTARGS> <VARARGS> ...; \n   \n\tSYSTASK COMMAND \"operating system command\"; \n   \n\tVAR <ACCUMULATE=<NONE | TOTAL | AVERAGE>... > <SETMISSING=<MISSING | AVERAGE | MINIMUM>... > ; \n   \n\tWAITFOR<_ANY_ | _ALL_> taskname <taskname...><TIMEOUT=seconds>; \n   \n\tWHEN <DO> ;     \n\tWHERE where-expression-1;     \n\tWINDOW <COLOR=<BLACK | GRAY | PINK>... > <COLUMNS=columns> <ICOLUMN=column> ...; ","arguments":[{"name":"AUXDATA=","optional":true,"description":"Names a table that contains auxiliary input data for the procedure to use for supplying time series variables. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the input data table.","help":"AUXDATA=*CAS-libref.data-table*","type":"dataSet"},{"name":"DATA=","optional":true,"description":"Names the input data table for PROC TSMODEL to use. The default is the most recently created data table. CAS-libref.data-table is a two-level name, where CAS-libref refers to a collection of information that is defined in the LIBNAME statement and includes the caslib, which includes a path to the data, and a session identifier, which defaults to the active session but which can be explicitly defined in the LIBNAME statement.","help":"DATA=*CAS-libref.data-table*","type":"dataSet"},{"name":"INOBJ=","optional":true,"description":"Specifies pairs, each of which binds a repeater object specified by object-name with an input table specified by CAS-libref.data-table. You can specify one or more object-table pairs as needed to associate the repeater objects that you declare in your user-defined program with their input tables. You must specify a binding for any repeater object that you declare in your program; otherwise, a parse-time error is generated when you submit the program and no execution occurs.","type":"value"},{"name":"INSCALAR=","optional":true,"description":"Specifies a table to supply scalar dynamic variables to be included and made accessible to your program code as it executes.","help":"INSCALAR=*CAS-libref.data-table*","type":"dataSet"},{"name":"LEAD=","optional":true,"description":"Specifies the number of periods ahead to extend time series arrays for the variables in both the VAR and OUTARRAYS statements that are output to the CAS table. You can specify this option to accommodate a forecast lead or horizon when you are preparing time series data for forecasting.","help":"LEAD=*n*","type":"value"},{"name":"LOGCONTROL=","optional":true,"description":"Specifies pairs that define error severity and associated message disposition for the OUTLOG= option. You can specify multiple LOGCONTROL= options. You can specify zero or more pairs. In these pairs, severity can take one of the following values: NONE specifies messages that have no severity classification. NOTE specifies messages whose severity classification is NOTE. WARNING specifies messages whose severity classification is WARNING. ERROR specifies messages whose severity classification is ERROR. You can specify the following values to indicate the associated message disposition: IGNORE ignores messages of the specified severity.","help":"LOGCONTROL=NONE | NOTE | WARNING | ERROR | IGNORE | KEEP","type":"choice","arguments":[{"name":"NONE","type":"standalone"},{"name":"NOTE","type":"standalone"},{"name":"WARNING","type":"standalone"},{"name":"ERROR","type":"standalone"},{"name":"IGNORE","type":"standalone"},{"name":"KEEP","type":"standalone"}]},{"name":"OUT=","optional":true,"description":"Names the output table to contain the time series variables that are specified in the subsequent VAR statements.","help":"OUT=*CAS-libref.data-table*","type":"dataSet"},{"name":"OUTARRAY=","optional":true,"description":"Names the output table to contain the time series vectors that are specified in the VAR and OUTARRAYS statements. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table.","help":"OUTARRAY=*CAS-libref.data-table*","type":"dataSet"},{"name":"OUTLOG=","optional":true,"description":"Names the output table to contain textual messages that are collected from the execution of the BY-group processing.","help":"OUTLOG=*CAS-libref.data-table*","type":"dataSet"},{"name":"OUTOBJ=","optional":true,"description":"Specifies pairs, each of which binds a collector object specified by object-name with an output table specified by CAS-libref.data-table.","type":"value"},{"name":"OUTSCALAR=","optional":true,"description":"Names the output table to contain the scalar names that are specified in the OUTSCALARS statements. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table.","help":"OUTSCALAR=*CAS-libref.data-table*","type":"dataSet"},{"name":"OUTSUM=","optional":true,"description":"Names the output table to contain the descriptive statistics. CAS-libref.data-table is a two-level name, where CAS-libref refers to the caslib and session identifier, and data-table specifies the name of the output data table.","help":"OUTSUM=*CAS-libref.data-table*","type":"dataSet"},{"name":"PUTTOLOG=","optional":true,"description":"Specifies whether to capture messages from the PUT programming statement to the BY group’s row in the table that is specified in the OUTLOG= option.","help":"PUTTOLOG=YES | NO","type":"choice","arguments":[{"name":"YES","description":"Specifies to captures messages.","type":"standalone"},{"name":"NO","description":"Specifies not to capture messages.","type":"standalone"}]},{"name":"SEASONALITY=","optional":true,"description":"Specifies the length of the seasonal cycle. For example, SEASONALITY=3 means that every group of three time periods forms a seasonal cycle. By default, the length of the seasonal cycle is 1 (no seasonality) or the length that is implied by the INTERVAL= option in the ID statement.","help":"SEASONALITY=*number*","type":"value"}]},{"name":"ARRAY","description":"Associates a name with a list of variables and constants.","help":"ARRAY &lt;NOSYMBOLS&gt; ","arguments":[{"name":"NOSYMBOLS","optional":true,"followsDelimiter":"/","description":"Specifies that an array of numeric or character values be created without the associated element variables. In this case, the only way you can access elements in the array is by array subscripting.","type":"standalone"}]},{"name":"ATTRIB","description":"Specifies format, label, and length information for variables.","help":"ATTRIB &lt;FORMAT=format-name&gt; &lt;LABEL='label'&gt; &lt;LENGTH=length&gt; ...","arguments":[{"name":"FORMAT=","optional":true,"description":"Associates a format with variables in the variable argument.","help":"FORMAT=*format-name*","type":"value"},{"name":"LABEL=","optional":true,"description":"Associates a label with variables in the variable argument.","help":"LABEL='*label*'","type":"value"},{"name":"LENGTH=","optional":true,"description":"Specifies the length of the variable in the variable argument.","help":"LENGTH=*length*","type":"value"}]},{"name":"BY","description":"You can include a BY statement with PROC TSMODEL to obtain separate processing for groups of observations that are defined by the BY variables. The rows in each distinct BY group are used to accumulate the time series vectors from the timestamped row data according to a desired frequency (which is specified in the INTERVAL= option) and the accumulation mode (which is specified in the ACCUMULATE= option).","help":"BY variables"},{"name":"CALL","description":"Invokes a SAS CALL routine.","help":"CALL routine(parameter-1&lt;, ...parameter-n&gt;)"},{"name":"CONTINUE","description":"Stops processing the current DO-loop iteration and resumes processing the next iteration.","help":"CONTINUE"},{"name":"DATALINES4","aliases":["CARDS4","LINES4"],"description":"Indicates that data lines that contain semicolons follow.","help":"DATALINES4"},{"name":"DATALINES","aliases":["CARDS","LINES"],"description":"Specifies that data lines follow.","help":"DATALINES"},{"name":"DECLARE","aliases":["DCL"],"description":"Declares one or more DS2 variables or temporary arrays.","help":""},{"name":"DELETE","description":"Stops processing the current observation.","help":"DELETE"},{"name":"DELETEFUNC","description":"Causes a function to be deleted from the function library that is specified in the OUTLIB option. Required Argument: function-name specifies the name of a function to be deleted from the function library that is specified in the OUTLIB option.","help":"DELETEFUNC function-name"},{"name":"DELETESUBR","description":"Causes a subroutine to be deleted from the function library that is specified in the OUTLIB option. Required Argument: subroutine-name specifies the name of a subroutine to be deleted from the function library that is specified in the OUTLIB option.","help":"DELETESUBR subroutine-name"},{"name":"DESCRIBE","description":"Retrieves source code from a stored compiled DATA step program or a DATA step view.","help":"DESCRIBE"},{"name":"DISPLAY","description":"Displays a window that is created with the WINDOW statement.","help":"DISPLAY &lt;BELL&gt; &lt;BLANK&gt; &lt;NOINPUT&gt; ...","arguments":[{"name":"BELL","optional":true,"description":"Produces an audible alarm, beep, or bell sound when the window is displayed if your personal computer is equipped with a speaker device that provides sound.","type":"standalone"},{"name":"BLANK","optional":true,"description":"Clears the window.","type":"standalone"},{"name":"DELETE","optional":true,"description":"Deletes the display of the window after processing passes from the DISPLAY statement on which the option appears.","type":"standalone"},{"name":"NOINPUT","optional":true,"description":"Specifies that you cannot input values into fields that are displayed in the window.","type":"standalone"}]},{"name":"DO","description":"Specifies a group of statements to be executed as a unit.","help":"DO &lt;OVER&gt; &lt;&gt; &lt;&gt; ...","arguments":[{"name":"BY","optional":true,"description":"Precedes an increment integer (other than 0) or an expression that generates an integer to be added to the value of the index variable in each iteration of the DO loop.","type":"standalone"},{"name":"OVER","optional":true,"description":"","type":"standalone"},{"name":"TO","optional":true,"description":"Separates the start and stop integers or expressions that control the number of times the portion of the DATA step between the iterative DO and END statements is processed.","type":"standalone"},{"name":"UNTIL","optional":true,"description":"...more SAS statements... END","type":"standalone"},{"name":"WHILE","optional":true,"description":"","type":"standalone"}]},{"name":"DROP","description":"Excludes variables from output SAS data sets.","help":"DROP variable-list"},{"name":"ELSE","description":"If the condition in an IF-THEN statement is false and an ELSE statement is present, then the ELSE action is carried out.","help":"ELSE &lt;DO&gt; &lt;IF&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"DO statement in an IF-THEN/ELSE construct.","type":"standalone"},{"name":"IF","optional":true,"description":"Executes a SAS statement for observations that meet specific conditions.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"END","description":"Ends a DO group or SELECT group processing.","help":"END"},{"name":"ENDRSUBMIT","description":"Marks the end of a block of statements that a client session submits to a server session for execution.","help":"ENDRSUBMIT"},{"name":"ENDSUB","description":"Ends a FUNCTION or SUBROUTINE statement block.","help":"ENDSUB"},{"name":"ENDSUBMIT","description":"The ENDSUBMIT statement is required to terminate the user-defined program statements in the PROC TSMODEL statement block whenever you specify the SUBMIT statement without the FILE= option.","help":"ENDSUBMIT "},{"name":"ERROR","description":"Sets _ERROR_ to 1. A message written to the SAS log is optional.","help":"ERROR &lt;message&gt;"},{"name":"EXECUTE","description":"Executes a stored compiled DATA step program.","help":"EXECUTE"},{"name":"FILE","description":"Specifies the current output file for PUT statements.","help":"FILE &lt;DISK&gt; &lt;DUMMY&gt; &lt;LOG&gt; ...","arguments":[{"name":"BLKSIZE=","optional":true,"description":"Specifies the block size of the output file.","type":"value"},{"name":"COLUMN=","optional":true,"aliases":["COL="],"description":"Specifies a variable that SAS automatically sets to the current column location of the pointer.","type":"value"},{"name":"DELIMITER=","optional":true,"aliases":["DLM="],"description":"Specifies an alternate delimiter (other than a blank) to be used for LIST output.","type":"value"},{"name":"DISK","optional":true,"description":"[device-type] Specifies that the device is a disk drive.","type":"standalone"},{"name":"DLMSOPT=","optional":true,"description":"Specifies a parsing option for the DLMSTR= T option that removes trailing blanks of the string delimiter.","help":"DLMSOPT='T'","type":"choice","arguments":[{"name":"'T'","description":"Removes trailing blanks of the string delimiter.","type":"standalone"}]},{"name":"DLMSTR=","optional":true,"description":"Specifies a character string as an alternate delimiter (other than a blank) to be used for LIST output","type":"value"},{"name":"DROPOVER","optional":true,"description":"Discards data items that exceed the output line length (as specified by the LINESIZE= or LRECL= options in the FILE statement).","type":"standalone"},{"name":"DSD","optional":true,"description":"Specifies that data values that contain embedded delimiters, such as tabs or commas, be enclosed in quotation marks.","type":"standalone"},{"name":"DUMMY","optional":true,"description":"[device-type] Specifies that the output to the file is discarded. Tip: Specifying DUMMY can be useful for testing.","type":"standalone"},{"name":"ENCODING=","optional":true,"description":"Specifies the encoding to use when writing to the output file.","help":"ENCODING='warabic' | 'wbaltic' | 'wlatin2' | 'wcyrillic' | 'wgreek' | 'whebrew' | 'wturkish' | 'wvietnamese' | 'wlatin1' | 'utf-8' | 'ms-950' | 'ms-936' | 'ms-932' | 'ms-949'","type":"choice","arguments":[{"name":"'warabic'","description":"Arabic","type":"standalone"},{"name":"'wbaltic'","description":"Baltic","type":"standalone"},{"name":"'wlatin2'","description":"Central Europe","type":"standalone"},{"name":"'wcyrillic'","description":"Cyrillic","type":"standalone"},{"name":"'wgreek'","description":"Greek","type":"standalone"},{"name":"'whebrew'","description":"Hebrew","type":"standalone"},{"name":"'wturkish'","description":"Turkish","type":"standalone"},{"name":"'wvietnamese'","description":"Vietnamese","type":"standalone"},{"name":"'wlatin1'","description":"Western","type":"standalone"},{"name":"'utf-8'","description":"Unicode encoding","type":"standalone"},{"name":"'ms-950'","description":"Traditional Chinese","type":"standalone"},{"name":"'ms-936'","description":"Simplified Chinese","type":"standalone"},{"name":"'ms-932'","description":"Japanese","type":"standalone"},{"name":"'ms-949'","description":"Korean","type":"standalone"}]},{"name":"FILENAME=","optional":true,"description":"Defines a character variable, whose name you supply, that SAS sets to the value of the physical name of the file currently open for PUT statement output.","type":"value"},{"name":"FILEVAR=","optional":true,"description":"Defines a variable whose change in value causes the FILE statement to close the current output file and open a new one the next time the FILE statement executes.","type":"value"},{"name":"FLOWOVER","optional":true,"description":"Causes data that exceeds the current line length to be written on a new line.","type":"standalone"},{"name":"FOOTNOTES","optional":true,"aliases":["FOOTNOTE"],"description":"Specifies that the currently defined footnotes are printed.","type":"standalone"},{"name":"GTERM","optional":true,"description":"[device-type] Indicates that the output device type is a graphics device that will receive graphics data.","type":"standalone"},{"name":"HEADER=","optional":true,"description":"Defines a statement label that identifies a group of SAS statements that you want to execute each time SAS begins a new output page","type":"value"},{"name":"LINE=","optional":true,"description":"Defines a variable whose value is the current relative line number within the group of lines available to the output pointer.","type":"value"},{"name":"LINESIZE=","optional":true,"aliases":["LS="],"description":"Sets the maximum number of columns per line for reports and the maximum record length for data files.","type":"value"},{"name":"LINESLEFT=","optional":true,"aliases":["LL="],"description":"Defines a variable whose value is the number of lines left on the current page.","type":"value"},{"name":"LOG","optional":true,"description":"Is a reserved fileref that directs the output that is produced by any PUT statements to the SAS log.","type":"standalone"},{"name":"LRECL=","optional":true,"description":"Specifies the logical record length of the output file.","type":"value"},{"name":"MOD","optional":true,"description":"Writes the output lines after any existing lines in the file.","type":"standalone"},{"name":"N=","optional":true,"description":"Specifies the number of lines that you want available to the output pointer in the current iteration of the DATA step.","help":"N=&lt;*n*&gt; | PAGESIZE","type":"choice","arguments":[{"name":"n","placeholder":true,"description":"Specifies the number of lines that are available to the output pointer. Replace n with an integer.","type":"value"},{"name":"PAGESIZE","aliases":["PS"],"description":"Specifies that the entire page is available to the output pointer.","type":"standalone"}]},{"name":"NOFOOTNOTES","optional":true,"aliases":["NOFOOTNOTE"],"description":"Specifies that the currently defined footnotes are not printed.","type":"standalone"},{"name":"NOPAD","optional":true,"description":"Specifies that records written to an external file are not padded with blanks to the length that is specified in the LRECL= option.","type":"standalone"},{"name":"NOPRINT","optional":true,"description":"Specifies that carriage-control characters are placed in the output lines.","type":"standalone"},{"name":"NOTITLES","optional":true,"aliases":["NOTITLE"],"description":"Specifies that the current title lines are not printed on the pages of files.","type":"standalone"},{"name":"ODS=","optional":true,"description":"Specifies to use the Output Delivery System to format the output from a DATA step.","type":"value"},{"name":"OLD","optional":true,"description":"Replaces the previous contents of the file.","type":"standalone"},{"name":"PAD","optional":true,"description":"Specifies that records written to an external file are padded with blanks to the length that is specified in the LRECL= option.","type":"standalone"},{"name":"PAGESIZE=","optional":true,"aliases":["PS="],"description":"Sets the number of lines per page for your reports.","help":"PAGESIZE=*value*","type":"value"},{"name":"PIPE","optional":true,"description":"[device-type] Specifies an unnamed pipe. Note: Some operating environments do not support pipes.","type":"standalone"},{"name":"PLOTTER","optional":true,"description":"[device-type] Specifies an unbuffered graphics output device.","type":"standalone"},{"name":"PRINT","optional":true,"description":"Either a reserved fileref that directs the output that is produced by any PUT statements to the same file as the output that is produced by SAS procedures, or an option that specifies that carriage-control characters are placed in the output lines.","type":"standalone"},{"name":"PRINTER","optional":true,"description":"[device-type] Specifies a printer or printer spool file.","type":"standalone"},{"name":"RECFM=","optional":true,"description":"Specifies the record format of the output file.","type":"value"},{"name":"STOPOVER","optional":true,"description":"Stops processing the DATA step immediately if a PUT statement attempts to write a data item that exceeds the current line length.","type":"standalone"},{"name":"TAPE","optional":true,"description":"[device-type] Specifies a tape drive.","type":"standalone"},{"name":"TEMP","optional":true,"description":"[device-type] Creates a temporary file that exists only as long as the filename is assigned. Restriction: Do not specify a physical pathname. If you do, SAS returns an error.","type":"standalone"},{"name":"TERMINAL","optional":true,"description":"[device-type] Specifies the user's terminal.","type":"standalone"},{"name":"TITLES","optional":true,"aliases":["TITLE"],"description":"Specifies that the current title lines are printed on the pages of files.","type":"standalone"},{"name":"UPRINTER","optional":true,"description":"[device-type] Specifies a Universal Printing printer definition name.","type":"standalone"},{"name":"_FILE_=","optional":true,"description":"StatementOptionNames a character variable that references the current output buffer of this FILE statement.","help":"_FILE_=*variable*","type":"value"}]},{"name":"FORMAT","description":"Associates formats with variables.","help":"FORMAT &lt;DEFAULT=default-format&gt; ","arguments":[{"name":"DEFAULT=","optional":true,"description":"Specifies a temporary default format for displaying the values of variables that are not listed in the FORMAT statement.","help":"DEFAULT=*default-format*","type":"value"}]},{"name":"FUNCTION","description":"Specifies a subroutine declaration for a routine that returns a value.","help":"FUNCTION &lt;KIND= | GROUP='string'&gt; &lt;VARARGS&gt; ","arguments":[{"name":"KIND=","optional":true,"aliases":["GROUP="],"description":"Specifies a collection of items that have specific attributes.","type":"value"},{"name":"VARARGS","optional":true,"description":"Specifies that the function supports a variable number of arguments. If you specify VARARGS, then the last argument in the function must be an array.","type":"standalone"}]},{"name":"GOTO","aliases":["GO TO"],"description":"Jumps to a new statement.","help":"GOTO label"},{"name":"ID","description":"The ID statement names a numeric variable that identifies the temporal order (time sequence) of observations in the input and output tables. The values of variables are assumed to be SAS date, SAS datetime, or observation values. In addition, the ID statement specifies the frequency to be associated with the time series. The ID statement options also specify a global treatment for how the time series variables are accumulated from the BY group’s rows and how the time ID values are aligned to form the time series. The specified information affects all variables that are specified in subsequent VAR statements. The ID statement and the INTERVAL= option are required to specify the desired accumulation frequency.","help":"ID &lt;ACCUMULATE=&lt;NONE | TOTAL | AVERAGE&gt;... &gt; &lt;ALIGN=&lt;BEGINNING | MIDDLE | ENDING&gt;&gt; INTERVAL=DAY|HOUR|MINUTE...  ...","arguments":[{"name":"INTERVAL=","description":"Specifies the frequency of the accumulated time series. For example, if the input table consists of quarterly observations, then specify INTERVAL=QTR. Interval names are constructed from a basic interval type with an optional multiplier and shift. The general form of an interval name is as follows:","help":"INTERVAL=DAY | HOUR | MINUTE | SECOND | WEEK | MONTH | YEAR | QTR | TENDAY | SEMIMONTH | SEMIYEAR | WEEKDAY | YEARV | R445YR | R454YR | R544YR | R445QTR | R454QTR | R544QTR | R445MON | R454MON | R544MON | WEEKV*interval*","type":"value","arguments":[{"name":"DAY","description":"Specifies daily intervals. Abbreviations are DAY, DAYS, and DAILY. The starting subperiod s is in days (DAY).","type":"standalone"},{"name":"HOUR","description":"Specifies hourly intervals. Aliases are HOUR, DTHOUR, HOURS, DTHOURS, HOURLY, DTHOURLY, HR, and DTHR. The starting subperiod s is in hours (HOUR).","type":"standalone"},{"name":"MINUTE","description":"Specifies minute intervals. Aliases are MINUTE, DTMINUTE, MINUTES, DTMINUTES, MIN, and DTMIN. The starting subperiod s is in minutes (MINUTE).","type":"standalone"},{"name":"SECOND","description":"Specifies second intervals. Aliases are SECOND, DTSECOND, SECONDS, DTSECONDS, SEC and DTSEC. The starting subperiod s is in seconds (SECOND).","type":"standalone"},{"name":"WEEK","description":"Specifies weekly intervals of seven days. Abbreviations are WEEK, WEEKS, and WEEKLY. The starting subperiod s is in days (DAY), with the days of the week numbered as 1=Sunday, 2=Monday, 3=Tuesday, 4=Wednesday, 5=Thursday, 6=Friday, and 7=Saturday. For example, WEEK.7 means weekly with Saturday as the first day of the week.","type":"standalone"},{"name":"MONTH","description":"Specifies monthly intervals. Abbreviations are MONTH, MONTHS, MONTHLY, and MON. The starting subperiod s is in months (MONTH). For example, MONTH2.2 intervals are February– March, April–May, June–July, August–September, October–November, and December–January of the following year.","type":"standalone"},{"name":"YEAR","description":"Specifies yearly intervals. Abbreviations are YEAR, YEARS, YEARLY, YR, ANNUAL, A NNUALLY, and ANNUALS. The starting subperiod s is in months (MONTH).","type":"standalone"},{"name":"QTR","description":"Specifies quarterly intervals (every three months). Abbreviations are QTR, QUARTER, QUARTERS, QUARTERLY, QTRLY, and QTRS. The starting subperiod s is in months (MONTH).","type":"standalone"},{"name":"TENDAY","description":"Specifies 10-day intervals. TENDAY breaks the month into three periods, the 1st through the 10th day of the month, the th through the th day of the month, and the remainder of the month. (TENDAY is a special interval typically used for reporting automobile sales data.) The starting subperiod s is in TENDAY periods.","type":"standalone"},{"name":"SEMIMONTH","description":"Specifies semimonthly intervals. SEMIMONTH breaks each month into two periods, starting on the st and th days. Abbreviations are SEMIMONTH, SEMIMONTHS, SEMIMONTHLY, and SEMIMON. The starting subperiod s is in SEMIMONTH periods.","type":"standalone"},{"name":"SEMIYEAR","description":"Specifies semiannual intervals (every six months). Abbreviations are SEMIYEAR, SEMIYEARS, SEMIYEARLY, SEMIYR, SEMIANNUAL, and SEMIANN. The starting subperiod s is in months (MONTH).","type":"standalone"},{"name":"WEEKDAY","description":"Specifies daily intervals with weekend days included in the preceding weekday. Note that for a five-day work week that starts on Monday, the appropriate interval is WEEKDAY5.2. Abbreviations are WEEKDAY and WEEKDAYS. The starting subperiod s is in weekdays (WEEKDAY).","type":"standalone"},{"name":"YEARV","description":"Specifies ISO 8601 yearly intervals. The ISO 8601 year starts on the Monday on or immediately preceding January th. Note that it is possible for the ISO 8601 year to start in December of the preceding year. Also, some ISO 8601 years contain a leap week.","type":"standalone"},{"name":"R445YR","description":"Is the same as YEARV except that the starting subperiod s is in retail 4-4-5 months (R445MON).","type":"standalone"},{"name":"R454YR","description":"Is the same as YEARV except that the starting subperiod s is in retail 4-5-4 months (R454MON).","type":"standalone"},{"name":"R544YR","description":"Is the same as YEARV except that the starting subperiod s is in retail 5-4-4 months (R544MON).","type":"standalone"},{"name":"R445QTR","description":"Specifies retail 4-4-5 quarterly intervals (every 13 ISO 8601 weeks). Some fourth quarters contain a leap week. The starting subperiod s is in retail 4-4-5 months (R445MON).","type":"standalone"},{"name":"R454QTR","description":"Specifies retail 4-5-4 quarterly intervals (every 13 ISO 8601 weeks). Some fourth quarters contain a leap week.","type":"standalone"},{"name":"R544QTR","description":"Specifies retail 5-4-4 quarterly intervals (every 13 ISO 8601 weeks). Some fourth quarters contain a leap week. The starting subperiod s is in retail 5-4-4 months (R544MON).","type":"standalone"},{"name":"R445MON","description":"Specifies retail 4-4-5 monthly intervals. The 3rd, 6th, 9th, and 12th months are five ISO 8601 weeks long with the exception that some th months contain leap weeks. All other months are four ISO 8601 weeks long. R445MON intervals begin with the 1st, 5th, 9th, 14th, 18th, 22nd, 27th, 31st, 35th, 40th, 44th, and 48th weeks of the ISO year. The starting subperiod s is in retail 4-4-5 months (R445MON).","type":"standalone"},{"name":"R454MON","description":"Specifies retail 4-5-4 monthly intervals. The 2nd, 5th, 8th, and 11th months are five ISO 8601 weeks long. All other months are four ISO 8601 weeks long with the exception that some 12th months contain leap weeks. R454MON intervals begin with the 1st, 5th, 10th, 14th, 18th, 23rd, 27th, 31st, 36th, 40th, 44th, and 49th weeks of the ISO year.","type":"standalone"},{"name":"R544MON","description":"Specifies retail 5-4-4 monthly intervals. The 1st, 4th, 7th, and 10th months are five ISO 8601 weeks long. All other months are four ISO 8601 weeks long with the exception that some th months contain leap weeks. R544MON intervals begin with the 1st, 6th, 10th, 14th, 19th, 23rd, 27th, 32nd, 36th, 40th, 45th, and 49th weeks of the ISO year. The starting subperiod s is in retail 5-4-4 months (R544MON).","type":"standalone"},{"name":"WEEKV","description":"Specifies ISO 8601 weekly intervals of seven days. Each week starts on Monday. The starting subperiod s is in days (DAY). Note that WEEKV differs from WEEK in that WEEKV.1 starts on Monday, WEEKV.2 starts on Tuesday, and so forth.","type":"standalone"}]},{"name":"ACCUMULATE=","optional":true,"description":"Specifies how the data set observations are accumulated within each time period. The frequency (width of each time interval) is specified by the INTERVAL= option.","help":"ACCUMULATE=NONE | TOTAL | AVERAGE | MINIMUM | MEDIAN | MAXIMUM | N | NMISS | NOBS | FIRST | LAST | STDDEV | CSS | USS","type":"choice","arguments":[{"name":"NONE","description":"No accumulation occurs; the ID variable values must be equally spaced with respect to the frequency. This is the default option.","type":"standalone"},{"name":"TOTAL","description":"Observations are accumulated based on the total sum of their values.","type":"standalone"},{"name":"AVERAGE","description":"Observations are accumulated based on the average of their values.","type":"standalone"},{"name":"MINIMUM","description":"Observations are accumulated based on the minimum of their values.","type":"standalone"},{"name":"MEDIAN","description":"Observations are accumulated based on the median of their values.","type":"standalone"},{"name":"MAXIMUM","description":"Observations are accumulated based on the maximum of their values.","type":"standalone"},{"name":"N","description":"Observations are accumulated based on the number of nonmissing observations.","type":"standalone"},{"name":"NMISS","description":"Observations are accumulated based on the number of missing observations.","type":"standalone"},{"name":"NOBS","description":"Observations are accumulated based on the number of observations.","type":"standalone"},{"name":"FIRST","description":"Observations are accumulated based on the first of their values.","type":"standalone"},{"name":"LAST","description":"Observations are accumulated based on the last of their values.","type":"standalone"},{"name":"STDDEV","description":"Observations are accumulated based on the standard deviation of their values.","type":"standalone"},{"name":"CSS","description":"Observations are accumulated based on the corrected sum of squares of their values.","type":"standalone"},{"name":"USS","description":"Observations are accumulated based on the uncorrected sum of squares of their values.","type":"standalone"}]},{"name":"ALIGN=","optional":true,"description":"Controls the alignment of SAS date or datetime values that are used to identify the time period of output observations.","help":"ALIGN=BEGINNING | MIDDLE | ENDING","type":"choice","arguments":[{"name":"BEGINNING","description":"Represents each time period using the beginning SAS date or datetime value of the time period.","type":"standalone"},{"name":"MIDDLE","description":"Represents each time period using the middle SAS date or datetime value of the time period. he middle is calculated as the average of the beginning and ending values.","type":"standalone"},{"name":"ENDING","description":"Represents each time period using the ending SAS date or datetime value of the time period.","type":"standalone"}]},{"name":"END=","optional":true,"description":"Specifies a SAS date or datetime value that represents the end of the data. If the last time ID variable value is less than value, then the series is extended with missing values. If the last time ID variable value is greater than value, then the series is truncated. For example, END=\"&sysdate\"D uses the automatic macro variable SYSDATE to extend or truncate the series to the current date. You can specify the START= and END= options to ensure that the data that are associated within each BY group contain the same number of observations.","help":"END=*value*","type":"value"},{"name":"FORMAT=","optional":true,"description":"Specifies the SAS format for the time ID values. If this option is not specified, the default format is inferred from the INTERVAL= option.","help":"FORMAT=*format*","type":"value"},{"name":"SETMISSING=","optional":true,"aliases":["SETMISS="],"description":"Specifies how to interpret missing values (either input or accumulated) in the accumulated time series.","help":"SETMISSING=MISSING | AVERAGE | MINIMUM | MEDIAN | MAXIMUM | FIRST | LAST | PREVIOUS | NEXT | n","type":"choice","arguments":[{"name":"MISSING","description":"Missing values are set to missing. This is the default option.","type":"standalone"},{"name":"AVERAGE","description":"Missing values are set to the accumulated average value.","type":"standalone"},{"name":"MINIMUM","description":"Missing values are set to the accumulated minimum value.","type":"standalone"},{"name":"MEDIAN","description":"Missing values are set to the accumulated median value.","type":"standalone"},{"name":"MAXIMUM","description":"Missing values are set to the accumulated maximum value.","type":"standalone"},{"name":"FIRST","description":"Missing values are set to the accumulated first nonmissing value.","type":"standalone"},{"name":"LAST","description":"Missing values are set to the accumulated last nonmissing value.","type":"standalone"},{"name":"PREVIOUS","description":"Missing values are set to the previous accumulated nonmissing value. Missing values at the beginning of the accumulated series remain missing.","type":"standalone"},{"name":"NEXT","description":"Missing values are set to the next accumulated nonmissing value. Missing values at the end of the accumulated series remain missing.","type":"standalone"},{"name":"n","description":"Interprets a missing value as having the value n.","type":"standalone"}]},{"name":"START=","optional":true,"description":"Specifies a SAS date or datetime value that represents the beginning of the data.","help":"START=*value*","type":"value"},{"name":"TRIMID=","optional":true,"description":"Specifies the method for trimming the data in the BY groups when time series vectors are input to the user-defined program. The output time ID variable span that is calculated by the method is dependent on the input time ID variable span, irrespective of missing values of the time series variables. Depending on the method and the input time ID variable data, leading or trailing missing values can be added to the time series variables.","help":"TRIMID=NONE | LEFT | RIGHT | BOTH*method*","type":"value","arguments":[{"name":"NONE","description":"Uses the same starting and ending values of the output time ID variable for all BY groups.","type":"standalone"},{"name":"LEFT","description":"Uses the identifying date for the first time period that is input for the BY group as the starting value of the output time ID variable for each BY group.","type":"standalone"},{"name":"RIGHT","description":"Uses the identifying date for the last time period that is input for the BY group as the ending value of the output time ID variable for each BY group.","type":"standalone"},{"name":"BOTH","description":"Uses the span of the input time ID variable for the BY group as the span of the output time ID variable for each BY group.","type":"standalone"}]}]},{"name":"IF","description":"Continues processing only those observations that meet the condition of the specified expression.","help":"IF &lt;DO&gt; &lt;NOT&gt; &lt;THEN&gt; ...","arguments":[{"name":"AND","optional":true,"description":"","type":"standalone"},{"name":"DO","optional":true,"description":"DO statement in an IF-THEN construct.","type":"standalone"},{"name":"NOT","optional":true,"description":"","type":"standalone"},{"name":"OR","optional":true,"description":"","type":"standalone"},{"name":"THEN","optional":true,"description":"If the conditions that are specified in the IF clause are met, the IF-THEN statement executes a SAS statement for observations that are read from a SAS data set, for records in an external file, or for computed values.","type":"standalone"}]},{"name":"INFORMAT","description":"Associates informats with variables.","help":"INFORMAT &lt;DEFAULT= default-informat&gt; ","arguments":[{"name":"DEFAULT=","optional":true,"description":"Specifies a temporary default informat for reading values of the variables that are listed in the INFORMAT statement. If no variable is specified, then the DEFAULT= informat specification applies a temporary default informat for reading values of all the variables of that type included in the DATA step. Numeric informats are applied to numeric variables, and character informats are applied to character variables. These default informats apply only to the current DATA step.","type":"value"}]},{"name":"INSCALARS","aliases":["INSCALAR"],"description":"The INSCALARS statement specifies which scalar variables to automatically include for your program to use. These variables can be numeric or character. Each variable that you name in an INSCALARS statement must be defined in the table specified in the INSCALAR= option in the PROC TSMODEL statement. You must specify at least one INSCALARS statement if you specify the INSCALAR= option in the PROC TSMODEL statement. You can specify multiple INSCALARS statements.","help":"INSCALARS scalar-name-list; | INSCALAR scalar-name-list"},{"name":"KEEP","description":"Specifies the variables to include in output SAS data sets.","help":"KEEP variable-list"},{"name":"KILLTASK","description":"For asynchronous tasks, forces one or more active tasks or server sessions to terminate immediately.","help":"KILLTASK _ALL_ |task1...taskn "},{"name":"LABEL","description":"Specifies a label of up to 256 characters.","help":"LABEL variable='label'"},{"name":"LEAVE","description":"Stops processing the current loop and resumes with the next statement in the sequence.","help":"LEAVE"},{"name":"LENGTH","description":"Specifies the number of bytes for storing variables.","help":"LENGTH &lt;DEFAULT=n&gt; ","arguments":[{"name":"DEFAULT=","optional":true,"description":"Changes the default number of bytes that SAS uses to store the values of any newly created numeric variables.","help":"DEFAULT=*n*","type":"value"}]},{"name":"LINK","description":"Directs program execution immediately to the statement label that is specified and, if followed by a RETURN statement, returns execution to the statement that follows the LINK statement.","help":"LINK label"},{"name":"LIST","description":"Writes to the SAS log the input data record for the observation that is being processed.","help":"LIST"},{"name":"LISTFUNC","description":"Causes the source code for a function to be written to the SAS listing. Required Argument: function-name specifies the name of the function for which source code is written to the SAS listing.","help":"LISTFUNC function-name"},{"name":"LISTSUBR","description":"Causes the source code for a subroutine to be written to the SAS listing. Required Argument: subroutine-name specifies the name of the subroutine for which source code is written to the SAS listing.","help":"LISTSUBR subroutine-name"},{"name":"LISTTASK","description":"Lists all active connections or tasks and identifies the execution status of each connection or task.","help":"LISTTASK &lt;_ALL_|task&gt; "},{"name":"LOSTCARD","description":"Resynchronizes the input data when SAS encounters a missing or invalid record in data that has multiple records per observation.","help":"LOSTCARD"},{"name":"OTHERWISE","description":"Specifies a statement to be executed if no WHEN condition is met.","help":""},{"name":"OUTARGS","description":"Specifies arguments from the argument list that the subroutine should update.","help":"OUTARGS out-argument-1, ..., out-argument-n"},{"name":"OUTARRAYS","aliases":["OUTARRAY"],"description":"The OUTARRAYS statement specifies a list of array names; each name specifies a numeric output array variable to be stored in the table that is specified in the OUTARRAY= option in the PROC TSMODEL statement. You can specify multiple OUTARRAYS statements.","help":"OUTARRAYS array-name-list; | OUTARRAY array-name-list"},{"name":"OUTPUT","description":"Writes the current observation to a SAS data set.","help":"OUTPUT&lt;data-set-name(s)&gt;"},{"name":"OUTSCALARS","aliases":["OUTSCALAR"],"description":"The OUTSCALARS statement specifies a list of scalar names; each name specifies a numeric or character output scalar variable to be stored in the table that is specified in the OUTSCALAR= option in the PROC TSMODEL statement. You can specify multiple OUTSCALARS statements.","help":"OUTSCALARS scalar-name-list; | OUTSCALAR scalar-name-list"},{"name":"PRINT","description":"The PRINT statement allows you to display results that are saved to CAS tables that you specify in the PROC TSMODEL statement options. You can include multiple PRINT statements in your PROC TSMODEL statement block. Each PRINT statement is processed independently in the order that you specify them.","help":"PRINT &lt;OUTLOG&gt; &lt;WHERE where-clause&gt;&gt; ","arguments":[{"name":"OUTLOG","optional":true,"description":"Displays information from the OUTLOG= table to the SAS LOG.","type":"standalone"},{"name":"WHERE","optional":true,"description":"You can specify an optional WHERE clause to select the rows from the OUTLOG table that you want to print. The WHERE clause must reference columns of the OUTLOG= table.","type":"standalone"}]},{"name":"PUT","description":"Writes lines to the SAS log, to the SAS output window, or to an external location that is specified in the most recent FILE statement.","help":"PUT &lt;_ALL_&gt; &lt;_INFILE_&gt; &lt;_ODS_&gt; ...","arguments":[{"name":"OVERPRINT","optional":true,"description":"Causes the values that follow the keyword OVERPRINT to print on the most recently written output line.","type":"standalone"},{"name":"_ALL_","optional":true,"description":"Writes the values of all variables, which includes automatic variables, that are defined in the current DATA step by using named output.","type":"standalone"},{"name":"_BLANKPAGE_","optional":true,"description":"Advances the pointer to the first line of a new page, even when the pointer is positioned on the first line and the first column of a new page.","type":"standalone"},{"name":"_INFILE_","optional":true,"description":"Writes the last input data record that is read either from the current input file or from the data lines that follow a DATELINES statement.","type":"standalone"},{"name":"_ODS_","optional":true,"description":"Moves data values for all columns (as defined by the ODS option in the FILE statement) into a special buffer, from which it is eventually written to the data component. The ODS option in the FILE statement defines the structure of the data component that holds the results of the DATA step.","type":"standalone"},{"name":"_PAGE_","optional":true,"description":"Advances the pointer to the first line of a new page. SAS automatically begins a new page when a line exceeds the current PAGESIZE= value.","type":"standalone"}]},{"name":"PUTLOG","description":"Writes a message to the SAS log.","help":"PUTLOG 'message'"},{"name":"RDISPLAY","description":"Creates a Log window to display the lines from the log and an Output window to list the output generated from the execution of the statements within an asynchronous RSUBMIT block.","help":"RDISPLAY &lt;&lt;CONNECTREMOTE=&gt;server-ID &gt;"},{"name":"REDIRECT","description":"Points to different input or output SAS data sets when you execute a stored program.","help":"REDIRECT INPUT OUTPUT ","arguments":[{"name":"INPUT","description":"Specifies to redirect input data sets.","type":"standalone"},{"name":"OUTPUT","description":"Specifies to redirect output data sets.","type":"standalone"}]},{"name":"REMOVE","description":"Deletes an observation from a SAS data set.","help":"REMOVE &lt;data-set-name(s)&gt;"},{"name":"RENAME","description":"Specifies new names for variables in output SAS data sets.","help":"RENAME old-name-1=new-name-1 ... &lt;old-name-n=new-name-n&gt;"},{"name":"REPLACE","description":"Replaces an observation in the same location.","help":"REPLACE &lt;data-set-name-1&gt;&lt;...data-set-name-n&gt;"},{"name":"REQUIRE","description":"The REQUIRE statement specifies which time series and time frequency analysis packages to make available for your user-defined program. These packages include functions, subroutines, and objects that you can utilize from your program to perform sophisticated time series processing. These packages provide functionality that ranges from a simple function to count missing observations in an array to very sophisticated objects that perform automatic time series modeling and forecasting.","help":"REQUIRE package-1 &lt;package-2 ... package-n&gt;;REQUIRE package (class-1 ...class-n)"},{"name":"RETAIN","description":"Causes a variable that is created by an INPUT or assignment statement to retain its value from one iteration of the DATA step to the next.","help":"RETAIN &lt;element-list(s) &lt;initial-value(s) |"},{"name":"RETURN","description":"(1) RETURN; Stops executing statements at the current point in the DATA step and returns to a predetermined point in the step. (2) RETURN (expression); Statement within a FUNCTION-ENDSUB block.","help":""},{"name":"RGET","description":"Retrieves the log and output that are created by an asynchronous RSUBMIT and merges them into the Log and Output windows of the client session.","help":"RGET &lt;&lt;CONNECTREMOTE=&gt;server-ID&gt;"},{"name":"RSUBMIT","description":"Marks the beginning of a block of statements that a client session submits to a server session for execution.","help":"RSUBMIT &lt;options&gt;; ENDRSUBMIT &lt;CANCEL&gt;"},{"name":"SELECT","description":"Executes one of several statements or groups of statements.","help":""},{"name":"SIGNOFF","description":"Ends the connection between a client session and a server session.","help":"SIGNOFF &lt;options&gt;"},{"name":"SIGNON","description":"Initiates a connection between a client session and a server session.","help":"SIGNON &lt;options&gt; "},{"name":"STOP","description":"Stops execution of the current DATA step.","help":"STOP"},{"name":"STRUCT","description":"Declares (creates) structure types that are defined in C-Language packages.","help":"STRUCT structure-name variable"},{"name":"SUBMIT","description":"The SUBMIT statement indicates the start of your user-defined program statements or specifies the location of a file that contains your user-defined program statements.","help":"SUBMIT &lt;DYNAMICS=(var-1=[number | \"string\"] &lt;var-2=[number | \"string\"]...&gt;)&gt; &lt;FILE=SAS-file-ref | 'File-path'&gt; ","arguments":[{"name":"DYNAMICS=","optional":true,"description":"Defines variables (constants) outside of the scope of the submitted code. These variables function as global arguments to the submitted code.","type":"value"},{"name":"FILE=","optional":true,"description":"Specifies a file that contains your user-defined program. If you specify this option, you must not specify the ENDSUBMIT statement.","type":"value"}]},{"name":"SUBROUTINE","description":"Declares (creates) an independent computational block of code that you can call using a CALL statement.","help":"SUBROUTINE &lt;KIND= | GROUP='string'&gt; &lt;OUTARGS&gt; &lt;VARARGS&gt; ...","arguments":[{"name":"KIND=","optional":true,"aliases":["GROUP="],"description":"Specifies a collection of items that have specific attributes.","type":"value"},{"name":"OUTARGS","optional":true,"description":"Specifies arguments from the argument list that the subroutine should update.","type":"standalone"},{"name":"VARARGS","optional":true,"description":"Specifies that the subroutine has a variable argument length. In this case, the last argument must be an array. The array accepts the variable arguments.","type":"standalone"}]},{"name":"SYSTASK","description":"Executes, lists, or terminates asynchronous tasks.","help":"SYSTASK COMMAND \"operating system command\""},{"name":"VAR","description":"The VAR statement lists the numeric variables in the DATA= table or AUXDATA= tables whose values are to be accumulated to form the time series.","help":"VAR &lt;ACCUMULATE=&lt;NONE | TOTAL | AVERAGE&gt;... &gt; &lt;SETMISSING=&lt;MISSING | AVERAGE | MINIMUM&gt;... &gt; ","arguments":[{"name":"ACCUMULATE=","optional":true,"followsDelimiter":"/","description":"Specifies how to accumulate the table observations within each time period for the variables in the variable-list. If you do not specify this option, accumulation is determined by the ACCUMULATE= option in the ID statement.","help":"ACCUMULATE=NONE | TOTAL | AVERAGE | MINIMUM | MEDIAN | MAXIMUM | N | NMISS | NOBS | FIRST | LAST | STDDEV | CSS | USS","type":"choice","arguments":[{"name":"NONE","followsDelimiter":"/","description":"No accumulation occurs; the ID variable values must be equally spaced with respect to the frequency. This is the default option.","type":"standalone"},{"name":"TOTAL","followsDelimiter":"/","description":"Observations are accumulated based on the total sum of their values.","type":"standalone"},{"name":"AVERAGE","followsDelimiter":"/","description":"Observations are accumulated based on the average of their values.","type":"standalone"},{"name":"MINIMUM","followsDelimiter":"/","description":"Observations are accumulated based on the minimum of their values.","type":"standalone"},{"name":"MEDIAN","followsDelimiter":"/","description":"Observations are accumulated based on the median of their values.","type":"standalone"},{"name":"MAXIMUM","followsDelimiter":"/","description":"Observations are accumulated based on the maximum of their values.","type":"standalone"},{"name":"N","followsDelimiter":"/","description":"Observations are accumulated based on the number of nonmissing observations.","type":"standalone"},{"name":"NMISS","followsDelimiter":"/","description":"Observations are accumulated based on the number of missing observations.","type":"standalone"},{"name":"NOBS","followsDelimiter":"/","description":"Observations are accumulated based on the number of observations.","type":"standalone"},{"name":"FIRST","followsDelimiter":"/","description":"Observations are accumulated based on the first of their values.","type":"standalone"},{"name":"LAST","followsDelimiter":"/","description":"Observations are accumulated based on the last of their values.","type":"standalone"},{"name":"STDDEV","followsDelimiter":"/","description":"Observations are accumulated based on the standard deviation of their values.","type":"standalone"},{"name":"CSS","followsDelimiter":"/","description":"Observations are accumulated based on the corrected sum of squares of their values.","type":"standalone"},{"name":"USS","followsDelimiter":"/","description":"Observations are accumulated based on the uncorrected sum of squares of their values.","type":"standalone"}]},{"name":"SETMISSING=","optional":true,"followsDelimiter":"/","aliases":["SETMISS="],"description":"Specifies how to interpret missing values (either input or accumulated) in the accumulated time series for variables in the variable-list. If you do not specify this option, missing values are set based on the SETMISSING= option in the ID statement.","help":"SETMISSING=MISSING | AVERAGE | MINIMUM | MEDIAN | MAXIMUM | FIRST | LAST | PREVIOUS | NEXT | n","type":"choice","arguments":[{"name":"MISSING","followsDelimiter":"/","description":"Missing values are set to missing. This is the default option.","type":"standalone"},{"name":"AVERAGE","followsDelimiter":"/","description":"Missing values are set to the accumulated average value.","type":"standalone"},{"name":"MINIMUM","followsDelimiter":"/","description":"Missing values are set to the accumulated minimum value.","type":"standalone"},{"name":"MEDIAN","followsDelimiter":"/","description":"Missing values are set to the accumulated median value.","type":"standalone"},{"name":"MAXIMUM","followsDelimiter":"/","description":"Missing values are set to the accumulated maximum value.","type":"standalone"},{"name":"FIRST","followsDelimiter":"/","description":"Missing values are set to the accumulated first nonmissing value.","type":"standalone"},{"name":"LAST","followsDelimiter":"/","description":"Missing values are set to the accumulated last nonmissing value.","type":"standalone"},{"name":"PREVIOUS","followsDelimiter":"/","description":"Missing values are set to the previous accumulated nonmissing value. Missing values at the beginning of the accumulated series remain missing.","type":"standalone"},{"name":"NEXT","followsDelimiter":"/","description":"Missing values are set to the next accumulated nonmissing value. Missing values at the end of the accumulated series remain missing.","type":"standalone"},{"name":"n","followsDelimiter":"/","description":"Interprets a missing value as having the value n.","type":"standalone"}]}]},{"name":"WAITFOR","description":"Suspends execution of the current SAS session until the specified tasks finish executing.","help":"WAITFOR&lt;_ANY_ | _ALL_&gt; taskname &lt;taskname...&gt;&lt;TIMEOUT=seconds&gt;"},{"name":"WHEN","description":"Identifies SAS statements that are executed when a particular condition is true.","help":"WHEN &lt;DO&gt; ","arguments":[{"name":"DO","optional":true,"description":"","type":"standalone"}]},{"name":"WHERE","description":"Selects observations from SAS data sets that meet a particular condition.","help":"WHERE where-expression-1"}],"supportSiteInformation":{"docsetId":"casforecast","docsetVersion":"v_010","docsetTargetFile":"casforecast_tsmodel_toc.htm"}}